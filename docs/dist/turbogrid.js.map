{"version":3,"file":"turbogrid.js","mappings":"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","sources":["webpack://turbogrid/webpack/universalModuleDefinition","webpack://turbogrid/./src/theme/theme.scss","webpack://turbogrid/../starfall-cli/node_modules/css-loader/dist/runtime/api.js","webpack://turbogrid/../starfall-cli/node_modules/css-loader/dist/runtime/noSourceMaps.js","webpack://turbogrid/webpack/bootstrap","webpack://turbogrid/webpack/runtime/compat get default export","webpack://turbogrid/webpack/runtime/define property getters","webpack://turbogrid/webpack/runtime/hasOwnProperty shorthand","webpack://turbogrid/webpack/runtime/make namespace object","webpack://turbogrid/./src/core/is-object.js","webpack://turbogrid/./src/core/merge.js","webpack://turbogrid/./src/core/microtask.js","webpack://turbogrid/./src/core/util.js","webpack://turbogrid/./src/core/query.js","webpack://turbogrid/./src/core/const.js","webpack://turbogrid/./src/core/extend.js","webpack://turbogrid/./src/core/event.js","webpack://turbogrid/./src/core/event-util.js","webpack://turbogrid/./src/core/event-base.js","webpack://turbogrid/./src/core/option-base.js","webpack://turbogrid/./src/modules/cache.js","webpack://turbogrid/./src/core/event-types.js","webpack://turbogrid/./src/modules/cells.js","webpack://turbogrid/./src/modules/column-add-delete.js","webpack://turbogrid/./src/modules/column-display.js","webpack://turbogrid/./src/modules/column-line.js","webpack://turbogrid/./src/modules/columns.js","webpack://turbogrid/./src/modules/common.js","webpack://turbogrid/./src/modules/css.js","webpack://turbogrid/./src/modules/destroy.js","webpack://turbogrid/./src/core/drag.js","webpack://turbogrid/./src/core/easing.js","webpack://turbogrid/./src/core/motion.js","webpack://turbogrid/./src/core/touch.js","webpack://turbogrid/./src/modules/events.js","webpack://turbogrid/./src/modules/export.js","webpack://turbogrid/./src/modules/flush.js","webpack://turbogrid/./src/core/icon.js","webpack://turbogrid/./src/config/default-formatters.js","webpack://turbogrid/./src/modules/formatter.js","webpack://turbogrid/./src/modules/header-table.js","webpack://turbogrid/./src/modules/header.js","webpack://turbogrid/./src/modules/create.js","webpack://turbogrid/./src/modules/init-columns.js","webpack://turbogrid/./src/modules/init-data.js","webpack://turbogrid/./src/modules/init-header.js","webpack://turbogrid/./src/modules/init-options.js","webpack://turbogrid/./src/modules/init-resize.js","webpack://turbogrid/./src/modules/init-rows.js","webpack://turbogrid/./src/modules/loading.js","webpack://turbogrid/./src/modules/node.js","webpack://turbogrid/./src/modules/render.js","webpack://turbogrid/./src/modules/resize.js","webpack://turbogrid/./src/modules/row-add-delete.js","webpack://turbogrid/./src/modules/row-collapse.js","webpack://turbogrid/./src/modules/row-drag.js","webpack://turbogrid/./src/modules/row-move.js","webpack://turbogrid/./src/modules/row-select.js","webpack://turbogrid/./src/modules/row-state.js","webpack://turbogrid/./src/modules/rows.js","webpack://turbogrid/./src/ui/scrollbar/scrollbar.js","webpack://turbogrid/./src/ui/scrollbar/scrollbar-v.js","webpack://turbogrid/./src/ui/scrollbar/scrollbar-h.js","webpack://turbogrid/./src/ui/scroll-pane.js","webpack://turbogrid/./src/modules/scroll-pane.js","webpack://turbogrid/./src/modules/scroll-state.js","webpack://turbogrid/./src/modules/scroll.js","webpack://turbogrid/./src/modules/sort.js","webpack://turbogrid/./src/core/sorter.js","webpack://turbogrid/./src/theme/theme-options.js","webpack://turbogrid/./src/theme/lightblue/lightblue-options.js","webpack://turbogrid/./src/theme/dark/dark-options.js","webpack://turbogrid/./src/modules/theme.js","webpack://turbogrid/./src/modules/update.js","webpack://turbogrid/./src/modules/viewport.js","webpack://turbogrid/./src/modules/index.js","webpack://turbogrid/./src/modules/navigation.js","webpack://turbogrid/./src/modules/row-display.js","webpack://turbogrid/./src/config/default-row-props.js","webpack://turbogrid/./src/config/default-column-props.js","webpack://turbogrid/./src/config/default-sort-comparers.js","webpack://turbogrid/./src/grid.js","webpack://turbogrid/./src/config/default-options.js","webpack://turbogrid/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"turbogrid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"turbogrid\"] = factory();\n\telse\n\t\troot[\"turbogrid\"] = factory();\n})(self, () => {\nreturn ","// Imports\nvar ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ = require(\"../../../starfall-cli/node_modules/css-loader/dist/runtime/noSourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../starfall-cli/node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tg-turbogrid{position:relative;overflow:hidden;width:100%;height:100%;outline:0;padding:0;margin:0;z-index:0;font-size:14px;font-family:arial,sans-serif;box-sizing:border-box}.tg-turbogrid *,.tg-turbogrid *::before,.tg-turbogrid *::after{box-sizing:border-box}.tg-text-unselectable.tg-turbogrid{user-select:none}.tg-turbogrid svg{display:block;pointer-events:none}.tg-turbogrid .tg-symbols{font-family:webdings,sans-serif}.tg-turbogrid .tg-nowrap{white-space:nowrap}.tg-turbogrid .tg-align-left{text-align:left}.tg-turbogrid .tg-align-center{text-align:center}.tg-turbogrid .tg-align-right{text-align:right}@keyframes tg-fade-in{from{opacity:0}to{opacity:1}}@keyframes tg-fade-out{from{opacity:1}to{opacity:0}}.tg-turbogrid .tg-fade-in{animation-name:tg-fade-in;animation-duration:.2s;animation-fill-mode:both}.tg-turbogrid .tg-fade-in .tg-scrollbar-track{display:none}.tg-turbogrid .tg-fade-out{animation-name:tg-fade-out;animation-duration:.2s;animation-fill-mode:both}.tg-turbogrid .tg-fade-out .tg-scrollbar-track{display:none}.tg-turbogrid .tg-loading{display:none;pointer-events:none;position:absolute;z-index:100;left:50%;top:50%;transform:translate(-50%, -50%)}@keyframes tg-loading-animation{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.tg-turbogrid .tg-loading-default{width:35px;height:35px;color:#0077cf;animation:1s tg-loading-animation linear infinite}.tg-turbogrid .tg-loading-fast{animation:.382s tg-loading-animation linear infinite}.tg-turbogrid .tg-checkbox{overflow:hidden;cursor:pointer;width:100%;height:100%}.tg-turbogrid .tg-checkbox.tg-select-icon-all{height:18px}.tg-turbogrid .tg-checkbox .tg-icon-checkbox{display:block;width:16px;height:16px;position:absolute;left:50%;top:50%;transform:translate(-50%, -50%)}.tg-turbogrid .tg-checkbox .tg-checkbox-item{fill:gray;display:none}.tg-turbogrid .tg-checkbox .tg-checkbox-none{display:block}.tg-turbogrid .tg-checkbox:hover .tg-checkbox-item{fill:#005ba1}.tg-turbogrid .tg-checkbox.tg-selected .tg-checkbox-selected{fill:#0077cf;display:block}.tg-turbogrid .tg-checkbox.tg-mixed .tg-checkbox-mixed{fill:#0077cf;display:block}.tg-turbogrid .tg-radio{overflow:hidden;cursor:pointer}.tg-turbogrid .tg-radio .tg-icon-radio{width:16px;height:16px;position:absolute;left:50%;top:50%;transform:translate(-50%, -50%)}.tg-turbogrid .tg-radio .tg-icon-radio::before{position:absolute;left:50%;top:50%;transform:translate(-50%, -50%);display:block;width:16px;height:16px;border-radius:50%;content:\\\"\\\";background:#fff;border:thin solid gray}.tg-turbogrid .tg-radio .tg-icon-radio::after{position:absolute;left:50%;top:50%;transform:translate(-50%, -50%);display:none;width:10px;height:10px;border-radius:50%;content:\\\"\\\";background:#0077cf}.tg-turbogrid .tg-radio:hover .tg-icon-radio::before{border-color:#005ba1}.tg-turbogrid .tg-radio.tg-selected .tg-icon-radio::after{border-color:#0077cf;display:block}.tg-turbogrid .tg-scrollbar{user-select:none;position:absolute;overflow:hidden;z-index:100}.tg-turbogrid .tg-scrollbar-v{right:0;top:0}.tg-turbogrid .tg-scrollbar-h{left:0;bottom:0}.tg-turbogrid .tg-scrollbar-track{user-select:none;position:relative;overflow:hidden;background:#f9f9f9;width:100%;height:100%}.tg-turbogrid .tg-scrollbar-thumb{user-select:none;position:absolute;overflow:hidden;top:0;left:0;background:#999;border-radius:1px}.tg-turbogrid .tg-scrollbar-thumb:hover{background:#888}.tg-turbogrid .tg-scrollbar-thumb-hold{background:#666}.tg-turbogrid .tg-scrollbar-thumb-hold:hover{background:#666}.tg-turbogrid .tg-scrollbar-round .tg-scrollbar-track{border-radius:10px}.tg-turbogrid .tg-scrollbar-round .tg-scrollbar-thumb{border-radius:10px}.tg-turbogrid .tg-scroll-pane{position:relative;overflow:hidden;outline:none;margin:0;padding:0;border:none}.tg-turbogrid .tg-scroll-view{position:relative;overflow:hidden;width:100%;height:100%;margin:0;padding:0;border:none}.tg-turbogrid .tg-scroll-body{position:absolute}.tg-turbogrid .tg-header{border-left:0;overflow:hidden;position:relative;width:10000px}.tg-turbogrid .tg-header-table{position:relative;overflow:hidden;font-size:14px;font-weight:bold;line-height:16px;color:#5e5e5e;border-bottom:thin solid #e5e5e5}.tg-turbogrid .tg-header-item{position:absolute;bottom:0}.tg-turbogrid .tg-header-group-item{overflow:hidden}.tg-turbogrid .tg-header-group-item::after{border-bottom:thin solid #ccc;content:\\\"\\\";display:block;position:absolute;left:5px;bottom:0;width:calc(100% - 10px);height:1px}.tg-turbogrid .tg-column-header{position:absolute;overflow:hidden;bottom:0}.tg-turbogrid .tg-column-header .tg-column-name{overflow:hidden;text-overflow:ellipsis;padding:10px 5px}.tg-turbogrid .tg-column-header .tg-column-name.tg-header-group-name{padding:5px 0;margin:0 5px}.tg-turbogrid .tg-column-resizing{position:absolute;z-index:100;right:-5px;top:0;height:100%;width:10px;background:#ccc;opacity:0;cursor:ew-resize}.tg-turbogrid .tg-column-sortable .tg-column-name{cursor:pointer}.tg-turbogrid .tg-column-sortable .tg-sort-indicator{cursor:pointer}.tg-turbogrid .tg-column-sorted{color:#000}.tg-turbogrid .tg-header-sort-h .tg-column-name{padding:12px 5px 15px}.tg-turbogrid .tg-header-sort-h .tg-column-sort{width:100%;padding:0 5px;overflow:hidden;height:15px;margin-top:-15px}.tg-turbogrid .tg-header-sort-h .tg-sort-indicator{position:relative;width:100%;height:100%;display:none}.tg-turbogrid .tg-header-sort-h .tg-column-sorted .tg-column-sort .tg-sort-indicator{display:block}.tg-turbogrid .tg-header-sort-h .tg-sort-indicator-line{position:absolute;top:1px;width:100%;height:0;border-top:thin solid #1e1e1e;overflow:hidden}.tg-turbogrid .tg-header-sort-h .tg-sort-indicator-icon{position:absolute;left:0;right:inherit;top:5px}.tg-turbogrid .tg-header-sort-h .tg-align-right .tg-sort-indicator-icon{left:inherit;right:0}.tg-turbogrid .tg-header-sort-h .tg-align-center .tg-sort-indicator-icon{left:50%;transform:translateX(-50%)}.tg-turbogrid .tg-header-sort-h .tg-sort-indicator-icon .tg-icon-sort-h{display:block;width:19px;height:6px}.tg-turbogrid .tg-header-sort-h .tg-sort-indicator-icon .tg-icon-item{fill:#1e1e1e;display:none}.tg-turbogrid .tg-header-sort-h .tg-sort-indicator-icon .tg-icon-item-light{fill:#ababab}.tg-turbogrid .tg-column-sort-v{display:flex;flex-direction:row;align-items:center}.tg-turbogrid .tg-column-sort-v .tg-column-name{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.tg-turbogrid .tg-column-sort-v.tg-align-right{justify-content:right}.tg-turbogrid .tg-column-sort-v .tg-sort-indicator{position:relative;width:16px;height:16px}.tg-turbogrid .tg-column-sort-v .tg-sort-indicator-icon{position:absolute}.tg-turbogrid .tg-column-sort-v .tg-sort-indicator-icon .tg-icon-sort-v{display:block;width:10px;height:16px}.tg-turbogrid .tg-column-sort-v .tg-sort-indicator-icon .tg-icon-item{fill:#ababab}.tg-turbogrid .tg-column-sort-v .tg-sort-indicator-icon .tg-icon-item-light{fill:#ababab}.tg-turbogrid .tg-column-sort-v.tg-column-sorted .tg-sort-indicator-icon .tg-icon-item{fill:#1e1e1e}.tg-turbogrid .tg-column-sort-v.tg-column-sorted .tg-sort-indicator-icon .tg-icon-item-light{fill:#ababab}.tg-turbogrid .tg-sort-desc .tg-sort-indicator .tg-sort-indicator-icon .tg-desc{display:block}.tg-turbogrid .tg-sort-desc .tg-sort-indicator .tg-sort-indicator-icon .tg-asc{display:none}.tg-turbogrid .tg-sort-asc .tg-sort-indicator .tg-sort-indicator-icon .tg-desc{display:none}.tg-turbogrid .tg-sort-asc .tg-sort-indicator .tg-sort-indicator-icon .tg-asc{display:block}.tg-turbogrid .tg-column-line{position:absolute;pointer-events:none;z-index:100;top:0;left:0;height:100%;display:none}.tg-turbogrid .tg-column-line-item{position:absolute;display:block;width:0;top:0;bottom:0;height:100%;border-left:thin solid #ccc}.tg-turbogrid .tg-column-line-item.tg-active{border-left:thin solid #0077cf}.tg-turbogrid .tg-column-dragging{cursor:ew-resize}.tg-turbogrid .tg-column-dragging *{cursor:ew-resize}.tg-turbogrid .tg-column-dragging .tg-column-resizing{display:none}.tg-turbogrid .tg-tree{position:relative;width:100%;height:100%;overflow:hidden;display:flex;flex-direction:row;align-items:center;justify-items:left}.tg-turbogrid .tg-tree-icon{overflow:hidden;cursor:pointer;width:15px;height:100%;min-height:9px;text-align:left;position:relative}.tg-turbogrid .tg-tree-icon .tg-icon-tree{display:block;width:9px;height:9px;overflow:hidden;position:absolute;left:0;top:50%;transform:translate(0, -50%)}.tg-turbogrid .tg-tree-icon .tg-tree-item{display:none}.tg-turbogrid .tg-tree-icon-collapsed .tg-tree-collapsed{display:block}.tg-turbogrid .tg-tree-icon-empty .tg-tree-collapsed{opacity:.5}.tg-turbogrid .tg-tree-icon-expanded .tg-tree-expanded{display:block}.tg-turbogrid .tg-tree-name{flex:1;overflow:hidden;text-overflow:ellipsis}.tg-turbogrid .tg-tree-header .tg-tree .tg-tree-icon{display:none}.tg-turbogrid .tg-tree-icon-all{position:relative;height:17px}.tg-turbogrid .tg-tree-header-indent .tg-tree{padding-left:5px}.tg-turbogrid .tg-tree-header-indent .tg-tree .tg-tree-icon{display:block}.tg-turbogrid .tg-tree-header-indent.tg-column-sort-h .tg-column-sort{margin-left:20px;width:calc(100% - 20px)}.tg-turbogrid .tg-pane{position:absolute;outline:0;overflow:hidden;width:100%}.tg-turbogrid .tg-header-frame{position:relative;outline:0;overflow:hidden;display:block}.tg-turbogrid .tg-header-frame .tg-pane{height:100%}.tg-turbogrid .tg-body-frame{position:relative;outline:0;width:100%}.tg-turbogrid .tg-body-message{position:absolute;width:100%;height:100%;padding:10px;overflow:hidden;display:none}.tg-turbogrid .tg-body-message img,.tg-turbogrid .tg-body-message div{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.tg-turbogrid .tg-body{position:absolute;outline:0}.tg-turbogrid .tg-cell-hover-icon{display:none}.tg-turbogrid .tg-cell-row-number{font-weight:normal}.tg-turbogrid .tg-cell-row-drag .tg-row-drag-icon{width:24px;height:24px;cursor:move;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);opacity:.8}.tg-turbogrid .tg-cell-row-drag .tg-row-drag-icon:hover{opacity:1}.tg-turbogrid .tg-cell{position:absolute;overflow:hidden;text-overflow:ellipsis;vertical-align:middle;z-index:1;margin:0;white-space:nowrap;padding:0 5px;height:100%;color:#1e1e1e}.tg-turbogrid .tg-cell:focus{outline:none}.tg-turbogrid .tg-cell.tg-flashing{border:1px solid red !important}.tg-turbogrid .tg-cell.tg-selected{background-color:beige}.tg-turbogrid .tg-cell.tg-multiline{padding:3px 5px;line-height:1.15;white-space:normal}.tg-turbogrid .tg-cell.tg-align-left.tg-cell-negative{padding-left:1px}.tg-turbogrid .tg-cell.tg-align-right.tg-cell-negative{padding-right:1px}.tg-turbogrid .tg-row{position:absolute;border:0;width:100%;border-bottom:thin solid #e5e5e5}.tg-turbogrid .tg-row.tg-group-line{border-bottom:thin solid #999}.tg-turbogrid .tg-row.tg-none-line{border-bottom:none}.tg-turbogrid .tg-row.tg-top-line{border-top:thin solid #e5e5e5}.tg-turbogrid .tg-row.tg-group{overflow:hidden;font-weight:bold}.tg-turbogrid .tg-row.tg-group .tg-cell.tg-align-left.tg-cell-negative{padding-left:0}.tg-turbogrid .tg-row.tg-group .tg-cell.tg-align-right.tg-cell-negative{padding-right:0}.tg-turbogrid .tg-row.tg-hover .tg-cell .tg-cell-hover-icon{display:inherit}.tg-turbogrid .tg-row.tg-dragging{opacity:.3}.tg-turbogrid .tg-row.tg-clone{border:1px dashed #ccc;border-left:none;border-right:none;background:#fff;z-index:1000;opacity:.5;cursor:move}.tg-turbogrid .tg-row.tg-clone *{cursor:move}.tg-turbogrid .tg-row-placeholder{pointer-events:none;position:absolute;width:100%;border-top:2px solid #00a8e1;z-index:9999}.tg-turbogrid .tg-row::before,.tg-turbogrid .tg-row::after{display:none;width:100%;height:100%;position:absolute;top:0;left:0;z-index:100;pointer-events:none;content:\\\"\\\"}.tg-turbogrid .tg-hover.tg-row::before{background:rgba(0,0,0,.08);display:block}.tg-turbogrid .tg-selected.tg-row::after{background:rgba(0,0,0,.13);display:block}.tg-lightblue .tg-header-item{border-top:thin solid #e8eaf0;border-right:thin solid #e8eaf0}.tg-lightblue .tg-column-name{color:#304265;padding:5px}.tg-lightblue .tg-header-group-item::after{display:none}.tg-lightblue .tg-checkbox .tg-icon-item{fill:#d4d7e0}.tg-lightblue .tg-checkbox:hover .tg-icon-item{fill:#107fff}.tg-lightblue .tg-checkbox.tg-selected .tg-select-checkbox{fill:#107fff}.tg-lightblue .tg-checkbox.tg-mixed .tg-select-mixed{fill:#107fff}.tg-lightblue .tg-cell{border-right:thin solid #e8eaf0;color:#304265}.tg-lightblue .tg-cell.tg-multiline{padding:0}.tg-lightblue .tg-row{border-bottom:thin solid #e8eaf0}.tg-lightblue .tg-row.tg-group-line{border-bottom:thin solid #c9ccd8}.tg-lightblue .tg-row.tg-selected{background:rgba(58,116,213,.05)}.tg-lightblue .tg-row.tg-hover{background:rgba(58,116,213,.05)}.tg-lightblue .tg-row.tg-even{background:#fbfcfe}.tg-lightblue .tg-row.tg-odd{background:#fff}.tg-lightblue .tg-hover.tg-row::before{background:rgba(58,116,213,.05)}.tg-lightblue .tg-selected.tg-row::after{background:rgba(58,116,213,.1)}.tg-lightblue .tg-header-frame{border-bottom:thin solid #e8eaf0}.tg-lightblue .tg-row-not-found .tg-frozen-line-v{border-right:none}.tg-lightblue .tg-scrollbar-track{background:#fff}.tg-lightblue .tg-scrollbar-thumb{background:rgba(48,66,101,.35)}.tg-lightblue .tg-scrollbar-thumb:hover{background-color:#a8a8a8}.tg-lightblue .tg-scrollbar-thumb:active{background-color:#787878}.tg-dark{background:#1e1e1e}.tg-dark .tg-checkbox .tg-icon-item{fill:#ababab}.tg-dark .tg-header-table{color:#ccc;border-bottom:thin solid #333}.tg-dark .tg-header-group-item::after{border-bottom:1px solid #999}.tg-dark .tg-column-sorted{color:#fff}.tg-dark .tg-column-sorted .tg-tree-icon-all .tg-icon-item{fill:#fff}.tg-dark .tg-header-sort-h .tg-sort-indicator-line{border-top:thin solid #eee}.tg-dark .tg-header-sort-h .tg-sort-indicator-icon .tg-icon-item{fill:#eee}.tg-dark .tg-header-sort-h .tg-sort-indicator-icon .tg-icon-item-light{fill:#666}.tg-dark .tg-column-sort-v .tg-sort-indicator-icon .tg-icon-item{fill:#666}.tg-dark .tg-column-sort-v .tg-sort-indicator-icon .tg-icon-item-light{fill:#666}.tg-dark .tg-column-sort-v.tg-column-sorted .tg-sort-indicator-icon .tg-icon-item{fill:#fff}.tg-dark .tg-column-sort-v.tg-column-sorted .tg-sort-indicator-icon .tg-icon-item-light{fill:#666}.tg-dark .tg-tree-icon .tg-icon-item{fill:#fff}.tg-dark .tg-tree-icon-all .tg-icon-item{fill:#999}.tg-dark .tg-header-item .tg-tree-icon .tg-icon-item{fill:#999}.tg-dark .tg-header-item .tg-column-sorted .tg-tree-icon .tg-icon-item{fill:#fff}.tg-dark .tg-row{border-bottom:thin solid #333}.tg-dark .tg-row.tg-group-line{border-bottom:thin solid #666}.tg-dark .tg-row.tg-clone{border:1px dashed #1e1e1e;opacity:.1}.tg-dark .tg-cell{color:#eee}.tg-dark .tg-body-message{color:#eee}.tg-dark .tg-hover.tg-row::before{background:rgba(255,255,255,.1)}.tg-dark .tg-selected.tg-row::after{background:rgba(255,255,255,.2)}.tg-dark .tg-scrollbar-track{background:#333}.tg-dark .tg-scrollbar-thumb{background:#bbb}.tg-dark .tg-scrollbar-thumb:hover{background:#ddd}.tg-dark .tg-scrollbar-thumb-hold{background:#eee}.tg-dark .tg-scrollbar-thumb-hold:hover{background:#eee}.tg-pointer-events-none{pointer-events:none}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (i) {\n  return i[1];\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//if is plain object or array\r\nconst isObject = function(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n        return false;\r\n    }\r\n\r\n    const tag = Object.prototype.toString.call(obj);\r\n    if (!['[object Object]', '[object Array]'].includes(tag)) {\r\n        return false;\r\n    }\r\n\r\n    //Object.create(null)\r\n    if (!obj.constructor) {\r\n        return true;\r\n    }\r\n\r\n    if ([Object, Array].includes(obj.constructor)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\nexport default isObject;\r\n","import isObject from './is-object.js';\r\n\r\nconst mergeArray = function(base, item, deep) {\r\n    //merge array to base\r\n    const len = item.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const v = item[i];\r\n        if (deep && isObject(v)) {\r\n            base[i] = merge(base[i], v);\r\n        } else {\r\n            base[i] = v;\r\n        }\r\n    }\r\n    //length fixing for array\r\n    if (base instanceof Array) {\r\n        base.length = len;\r\n    }\r\n};\r\n\r\nconst mergeObject = function(base, item, deep) {\r\n    //merge object to base\r\n    Object.keys(item).forEach(function(k) {\r\n        const v = item[k];\r\n        if (deep && isObject(v) && Object.prototype.hasOwnProperty.call(base, k)) {\r\n            base[k] = merge(base[k], v);\r\n        } else {\r\n            base[k] = v;\r\n        }\r\n    });\r\n};\r\n\r\nconst mergeList = function(args, deep) {\r\n    let base;\r\n    args.forEach((item) => {\r\n        //only for valid object or array\r\n        if (!isObject(item)) {\r\n            return;\r\n        }\r\n        //base type depend on first parameter\r\n        if (!base) {\r\n            base = (item instanceof Array) ? [] : {};\r\n        }\r\n        //merge to base\r\n        if (item instanceof Array) {\r\n            mergeArray(base, item, deep);\r\n        } else {\r\n            mergeObject(base, item, deep);\r\n        }\r\n    });\r\n    return base || {};\r\n};\r\n\r\n//merge JSON\r\nconst merge = function() {\r\n    const args = Array.from(arguments);\r\n    const len = args.length;\r\n    //no parameters\r\n    if (!len) {\r\n        return {};\r\n    }\r\n    //deep merge depend on last parameter\r\n    let deep = true;\r\n    if (args[len - 1] === false) {\r\n        deep = false;\r\n    }\r\n    return mergeList(args, deep);\r\n};\r\n\r\nexport default merge;\r\n","\r\nexport default class Microtask {\r\n\r\n    start(callback) {\r\n        this.callback = callback;\r\n        if (this.started) {\r\n            return;\r\n        }\r\n        this.started = true;\r\n        this.create();\r\n    }\r\n\r\n    create() {\r\n        if (typeof window.queueMicrotask === 'function') {\r\n            window.queueMicrotask(() => {\r\n                this.execute();\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (typeof Promise === 'function') {\r\n            Promise.resolve().then(() => {\r\n                this.execute();\r\n            });\r\n            return;\r\n        }\r\n\r\n        throw new Error('Current browser does NOT support queueMicrotask or Promise');\r\n    }\r\n\r\n    execute() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n        this.started = false;\r\n        const callback = this.callback;\r\n        //must be removed first\r\n        this.callback = null;\r\n        //then execute\r\n        //because it could start another callback in executing, do not remove next callback\r\n        if (typeof callback === 'function') {\r\n            callback.call(this);\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.started = false;\r\n        this.callback = null;\r\n    }\r\n}\r\n","import isObject from './is-object.js';\r\nimport merge from './merge.js';\r\nimport Microtask from './microtask.js';\r\n\r\nconst gridInstanceMap = new WeakMap();\r\n\r\nconst Util = {\r\n\r\n    isObject: isObject,\r\n    merge: merge,\r\n\r\n    hasOwn: function(obj, key) {\r\n        return Object.prototype.hasOwnProperty.call(obj, key);\r\n    },\r\n\r\n    uid: function(len = 8, prefix = '') {\r\n        const dict = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const dictLen = dict.length;\r\n        let str = prefix;\r\n        while (len--) {\r\n            str += dict[Math.random() * dictLen | 0];\r\n        }\r\n        return str;\r\n    },\r\n\r\n    //=================================================================================\r\n    //number\r\n    //if is valid number\r\n    isNum: function(num) {\r\n        if (typeof num !== 'number' || isNaN(num)) {\r\n            return false;\r\n        }\r\n        const isInvalid = function(n) {\r\n            if (n === Number.MAX_VALUE || n === Number.MIN_VALUE || n === Number.NEGATIVE_INFINITY || n === Number.POSITIVE_INFINITY) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        if (isInvalid(num)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    // format to a valid number\r\n    toNum: function(num, toInt) {\r\n        if (typeof num !== 'number') {\r\n            num = parseFloat(num);\r\n        }\r\n        if (isNaN(num)) {\r\n            num = 0;\r\n        }\r\n        if (toInt) {\r\n            num |= 0;\r\n        }\r\n        return num;\r\n    },\r\n\r\n    //try to convert number if it is a string number\r\n    convertNum: function(str) {\r\n        if (typeof str === 'string') {\r\n            //keep string if can not be converted\r\n            const reg = /^[-+]?\\d+(\\.\\d+)?$/ig;\r\n            if (reg.test(str)) {\r\n                return parseFloat(str);\r\n            }\r\n        }\r\n        return str;\r\n    },\r\n\r\n    clamp: function(num, min, max) {\r\n        return Math.max(Math.min(num, max), min);\r\n    },\r\n\r\n    per: function(num) {\r\n        num = Util.toNum(num);\r\n        num = Util.clamp(num, 0, 1);\r\n        return num;\r\n    },\r\n\r\n    //string replace {name}\r\n    replace: function(str, obj) {\r\n        str = `${str}`;\r\n        if (!obj) {\r\n            return str;\r\n        }\r\n        str = str.replace(/\\{([^}]+)\\}/g, function(match, key) {\r\n            if (!Util.hasOwn(obj, key)) {\r\n                return match;\r\n            }\r\n            return obj[key];\r\n        });\r\n        return str;\r\n    },\r\n\r\n    //whether data is array with length\r\n    isArray: function(data) {\r\n        if (data && data instanceof Array) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    toList: function(data) {\r\n        if (data instanceof Array) {\r\n            return data;\r\n        }\r\n        if (typeof data === 'undefined') {\r\n            return [];\r\n        }\r\n        //string has length, must be first\r\n        if (typeof data === 'string') {\r\n            return [data];\r\n        }\r\n        if (data && Util.hasOwn(data, 'length')) {\r\n            return Array.from(data);\r\n        }\r\n        return [data];\r\n    },\r\n\r\n    isList: function(data) {\r\n        if (Util.isArray(data) && data.length > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    //whether item in list\r\n    inList: function(item, list) {\r\n        if (!Util.isList(list)) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0, l = list.length; i < l; i++) {\r\n            if (list[i] === item) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    isDate: function(date) {\r\n        if (!date || !(date instanceof Date)) {\r\n            return false;\r\n        }\r\n        //is Date Object but Date {Invalid Date}\r\n        if (isNaN(date.getTime())) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    isPromise: function(obj) {\r\n        return Boolean(obj) && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\r\n    },\r\n\r\n    //getValue({a:{b:1}}, \"a.b\", 0)\r\n    getValue: function(data, path, defaultValue) {\r\n        if (!path) {\r\n            return defaultValue;\r\n        }\r\n        let current = data;\r\n        const list = path.split('.');\r\n        const lastKey = list.pop();\r\n        while (current && list.length) {\r\n            const item = list.shift();\r\n            current = current[item];\r\n        }\r\n        if (current && Util.hasOwn(current, lastKey)) {\r\n            const value = current[lastKey];\r\n            if (typeof value !== 'undefined') {\r\n                return value;\r\n            }\r\n        }\r\n        return defaultValue;\r\n    },\r\n\r\n    forEachTree: function(tree, callback) {\r\n        const forEachAll = (ls, parent) => {\r\n            if (!Util.isList(ls)) {\r\n                return;\r\n            }\r\n            let i = 0;\r\n            const l = ls.length;\r\n            while (i < l) {\r\n                const item = ls[i];\r\n                const result = callback(item, i, parent);\r\n                if (result === false) {\r\n                    return false;\r\n                }\r\n                const subResult = forEachAll(item.subs, item);\r\n                if (subResult === false) {\r\n                    return false;\r\n                }\r\n                i++;\r\n            }\r\n        };\r\n        forEachAll(tree);\r\n    },\r\n\r\n    removePreProps: function(target, pre) {\r\n        if (!target || !pre) {\r\n            return;\r\n        }\r\n        Object.keys(target).filter((it) => it.startsWith(pre)).forEach((k) => {\r\n            target[k] = null;\r\n        });\r\n    },\r\n\r\n    hasShiftKey: function(e) {\r\n        let shiftKey = false;\r\n        if (e) {\r\n            shiftKey = e.shiftKey;\r\n        }\r\n        return shiftKey;\r\n    },\r\n\r\n    isMobile: function() {\r\n        return 'ontouchstart' in window;\r\n    },\r\n\r\n    contains: function(container, target) {\r\n        if (!container || !target) {\r\n            return false;\r\n        }\r\n        if (container === target) {\r\n            return true;\r\n        }\r\n        if (typeof container.contains === 'function') {\r\n            return container.contains(target);\r\n        }\r\n        let parent = target.parentNode;\r\n        while (parent) {\r\n            if (parent === container) {\r\n                return true;\r\n            }\r\n            parent = parent.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /*eslint-disable complexity */\r\n    //https://github.com/mysticatea/eaw\r\n    isNarrowCharacter: function(character) {\r\n        const cp = character.codePointAt(0);\r\n        return (\r\n            (cp >= 0x20 && cp <= 0x7E)\r\n            || cp === 0xA2\r\n            || cp === 0xA3\r\n            || cp === 0xA5\r\n            || cp === 0xA6\r\n            || cp === 0xAC\r\n            || cp === 0xAF\r\n            || cp === 0x20A9\r\n            || (cp >= 0x27E6 && cp <= 0x27ED)\r\n            || cp === 0x2985\r\n            || cp === 0x2986\r\n            || (cp >= 0xFF61 && cp <= 0xFFBE)\r\n            || (cp >= 0xFFC2 && cp <= 0xFFC7)\r\n            || (cp >= 0xFFCA && cp <= 0xFFCF)\r\n            || (cp >= 0xFFD2 && cp <= 0xFFD7)\r\n            || (cp >= 0xFFDA && cp <= 0xFFDC)\r\n            || (cp >= 0xFFE8 && cp <= 0xFFEE)\r\n        );\r\n    },\r\n    /*eslint-enable */\r\n\r\n    getCharLen: function(text) {\r\n        let len = 0;\r\n        if (!text) {\r\n            return len;\r\n        }\r\n        for (const c of String(text)) {\r\n            len += Util.isNarrowCharacter(c) ? 1 : 2;\r\n        }\r\n        return len;\r\n    },\r\n\r\n    pascalToKebabCase: function(text) {\r\n        return (`${text}`).trim()\r\n            .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\W/g, (m) => ((/[À-ž]/).test(m) ? m : '-'))\r\n            .replace(/^-+|-+$/g, '')\r\n            .replace(/-{2,}/g, '-')\r\n            .toLowerCase();\r\n    },\r\n\r\n    classMap: function(obj) {\r\n        if (typeof obj === 'string') {\r\n            return obj.trim();\r\n        }\r\n        if (Array.isArray(obj)) {\r\n            let ls = obj.filter((it) => it);\r\n            ls = ls.map((it) => {\r\n                if (it && typeof it === 'object') {\r\n                    return Util.classMap(it);\r\n                }\r\n                return String(it).trim();\r\n            });\r\n            ls = ls.filter((it) => it);\r\n            ls = Array.from(new Set(ls));\r\n            return ls.join(' ');\r\n        }\r\n        if (obj && typeof obj === 'object') {\r\n            const ls = [];\r\n            Object.keys(obj).forEach((key) => {\r\n                if (obj[key]) {\r\n                    ls.push(key);\r\n                }\r\n            });\r\n            return ls.join(' ');\r\n        }\r\n        return '';\r\n    },\r\n\r\n    styleMap: function(obj) {\r\n        if (typeof obj === 'string') {\r\n            return obj.trim();\r\n        }\r\n        if (Array.isArray(obj)) {\r\n            let ls = obj.filter((it) => it);\r\n            ls = ls.map((it) => {\r\n                const str = String(it).trim();\r\n                if (!str) {\r\n                    return '';\r\n                }\r\n                // format: color: red;\r\n                if (str.indexOf(':') === -1) {\r\n                    return '';\r\n                }\r\n                if (str.endsWith(';')) {\r\n                    return str;\r\n                }\r\n                return `${str};`;\r\n\r\n            });\r\n            ls = ls.filter((it) => it);\r\n            ls = Array.from(new Set(ls));\r\n            return ls.join(' ');\r\n        }\r\n        if (obj && typeof obj === 'object') {\r\n            const ls = [];\r\n            Object.keys(obj).forEach((key) => {\r\n                const v = obj[key];\r\n                if (v || v === 0) {\r\n                    const s = String(v).trim();\r\n                    if (s) {\r\n                        ls.push(`${Util.pascalToKebabCase(key)}: ${s};`);\r\n                    }\r\n                }\r\n            });\r\n            return ls.join(' ');\r\n        }\r\n        return '';\r\n    },\r\n\r\n    // for auto test\r\n    // get current page instance\r\n    // turbogrid.Grid.getInstance(document.querySelector(\".tg-turbogrid\").getAttribute(\"id\"))\r\n    getInstance: function(id) {\r\n        if (id) {\r\n            const container = document.getElementById(id);\r\n            if (container) {\r\n                return gridInstanceMap.get(container);\r\n            }\r\n        }\r\n    },\r\n\r\n    setInstance: function(container, instance) {\r\n        if (container) {\r\n            gridInstanceMap.set(container, instance);\r\n        }\r\n    },\r\n\r\n    bindEvents: function(events, target) {\r\n        if (!events) {\r\n            return;\r\n        }\r\n        Util.unbindEvents(events);\r\n        Object.keys(events).forEach((type) => {\r\n            const item = events[type];\r\n            item.target = item.target || target;\r\n            item.target.addEventListener(type, item.handler, item.options);\r\n        });\r\n    },\r\n\r\n    unbindEvents: function(events) {\r\n        if (!events) {\r\n            return;\r\n        }\r\n        Object.keys(events).forEach((type) => {\r\n            const item = events[type];\r\n            if (item.target) {\r\n                item.target.removeEventListener(type, item.handler, item.options);\r\n            }\r\n        });\r\n    },\r\n\r\n    //prevent native events default\r\n    preventDefault: function(e) {\r\n        if (e && typeof e.preventDefault === 'function' && e.cancelable) {\r\n            e.preventDefault();\r\n        }\r\n    },\r\n\r\n\r\n    debounce: function(callback, delay = 100) {\r\n        let timeout;\r\n        const handler = function() {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(() => {\r\n                callback.apply(this, arguments);\r\n            }, delay);\r\n        };\r\n        handler.cancel = () => {\r\n            clearTimeout(timeout);\r\n        };\r\n        return handler;\r\n    },\r\n\r\n    throttle: function(callback, delay = 100) {\r\n        let last = 0;\r\n        let timeout;\r\n        const handler = function() {\r\n            const now = Date.now();\r\n            if (now > last + delay) {\r\n                clearTimeout(timeout);\r\n                last = now;\r\n                callback.apply(this, arguments);\r\n                return;\r\n            }\r\n\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(() => {\r\n                last = now;\r\n                callback.apply(this, arguments);\r\n            }, delay);\r\n\r\n        };\r\n        handler.cancel = () => {\r\n            clearTimeout(timeout);\r\n            last = 0;\r\n        };\r\n        return handler;\r\n    },\r\n\r\n    microtask: function(callback) {\r\n        const mt = new Microtask();\r\n        const handler = function() {\r\n            mt.start(() => {\r\n                callback.apply(this, arguments);\r\n            });\r\n        };\r\n        handler.cancel = () => {\r\n            mt.cancel();\r\n        };\r\n        return handler;\r\n    },\r\n\r\n    cancelAsync: function(target) {\r\n        if (!target) {\r\n            return;\r\n        }\r\n\r\n        Object.keys(target).filter((it) => it.startsWith('async') && typeof target[it] === 'function').forEach((k) => {\r\n            const fun = target[k];\r\n            if (typeof fun.cancel === 'function') {\r\n                fun.cancel();\r\n                target[k] = null;\r\n            }\r\n        });\r\n\r\n        Object.keys(target).filter((it) => it.startsWith('timeout')).forEach((k) => {\r\n            clearTimeout(target[k]);\r\n        });\r\n\r\n    }\r\n\r\n};\r\n\r\nexport default Util;\r\n","import Util from './util.js';\r\n\r\nconst cssNumber = {\r\n    'animationIterationCount': true,\r\n    'columnCount': true,\r\n    'fillOpacity': true,\r\n    'flexGrow': true,\r\n    'flexShrink': true,\r\n    'fontWeight': true,\r\n    'lineHeight': true,\r\n    'opacity': true,\r\n    'order': true,\r\n    'orphans': true,\r\n    'widows': true,\r\n    'zIndex': true,\r\n    'zoom': true\r\n};\r\n\r\nconst isWindow = function(obj) {\r\n    return obj !== null && typeof obj !== 'undefined' && obj === obj.window;\r\n};\r\n\r\nconst isDocument = function(obj) {\r\n    return obj !== null && obj.nodeType === 9;\r\n};\r\n\r\nconst isElement = function(obj) {\r\n    return obj !== null && obj.nodeType === 1;\r\n};\r\n\r\nconst camelCase = function(string) {\r\n    return string.replace(/-([a-z])/g, function(all, letter) {\r\n        return letter.toUpperCase();\r\n    });\r\n};\r\n\r\nconst getStyle = function(elem) {\r\n    let view = elem.ownerDocument.defaultView;\r\n    if (!view || !view.opener) {\r\n        view = window;\r\n    }\r\n    return view.getComputedStyle(elem);\r\n};\r\n\r\nconst elementDisplay = {};\r\nconst getDefaultDisplay = function(nodeName) {\r\n    if (!elementDisplay[nodeName]) {\r\n        const element = document.createElement(nodeName);\r\n        document.body.appendChild(element);\r\n        const display = getStyle(element).display;\r\n        element.parentNode.removeChild(element);\r\n        elementDisplay[nodeName] = display;\r\n    }\r\n    return elementDisplay[nodeName];\r\n};\r\n\r\nconst getElementDimension = function(node, dimension) {\r\n    if (isWindow(node)) {\r\n        return node[`inner${dimension}`];\r\n    }\r\n\r\n    if (isDocument(node)) {\r\n        node = node.body;\r\n    }\r\n\r\n    //when container width is 0\r\n    //clientWidth 0, offsetWidth 0, but scrollWidth may not be 0\r\n\r\n    //node[`offset${dimension}`] || node[`scroll${dimension}`]\r\n    return node[`client${dimension}`];\r\n};\r\n\r\nconst Query = function(selector) {\r\n    this.list = [];\r\n    if (!selector) {\r\n        return this;\r\n    }\r\n    return this.create(selector);\r\n};\r\n\r\nQuery.prototype = {\r\n\r\n    constructor: Query,\r\n\r\n    Query: 'Query',\r\n\r\n    list: [],\r\n\r\n    create: function(selector) {\r\n        if (selector instanceof Query) {\r\n            return selector;\r\n        }\r\n        if (typeof selector === 'string') {\r\n            return this.createFromString(selector);\r\n        }\r\n        if (selector.nodeType || selector === window) {\r\n            this.list = [selector];\r\n        }\r\n        return this;\r\n    },\r\n\r\n    createFromString: function(selector) {\r\n        selector = selector.trim();\r\n        if (selector[0] === '<' && selector[selector.length - 1] === '>' && selector.length >= 3) {\r\n            this.parseHTML(selector);\r\n        } else {\r\n            const nodeList = document.querySelectorAll(selector);\r\n            for (let i = 0, l = nodeList.length; i < l; i++) {\r\n                this.list[i] = nodeList[i];\r\n            }\r\n        }\r\n        return this;\r\n    },\r\n\r\n    parseHTML: function(str) {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = str;\r\n\r\n        let n = div.firstChild;\r\n        while (n) {\r\n            if (isElement(n)) {\r\n                this.list.push(n);\r\n            }\r\n            n = n.nextSibling;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    //====================================================================================\r\n\r\n    get: function(i) {\r\n        return this.list[i];\r\n    },\r\n\r\n    each: function(callback) {\r\n        if (typeof callback !== 'function') {\r\n            return this;\r\n        }\r\n        const list = this.list;\r\n        for (let i = 0, l = list.length; i < l; i++) {\r\n            const node = list[i];\r\n            const res = callback.call(this, node, i);\r\n            if (res === false) {\r\n                break;\r\n            }\r\n        }\r\n        return this;\r\n    },\r\n\r\n    add: function(item) {\r\n        if (!item) {\r\n            return this;\r\n        }\r\n        const list = this.list;\r\n        if (item instanceof Query) {\r\n            item.each(function(node) {\r\n                list.push(node);\r\n            });\r\n            return this;\r\n        }\r\n        if (item.nodeType) {\r\n            list.push(item);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    empty: function() {\r\n        this.each(function(node) {\r\n            node.innerHTML = '';\r\n        });\r\n        return this;\r\n    },\r\n\r\n    remove: function() {\r\n        this.each(function(node, i) {\r\n            if (node && node.parentNode) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        });\r\n        this.list = [];\r\n        return this;\r\n    },\r\n\r\n    find: function(selector) {\r\n        const results = new Query();\r\n        if (!selector || typeof selector !== 'string') {\r\n            return results;\r\n        }\r\n        this.each(function(node) {\r\n            if (node && node.querySelectorAll) {\r\n                const nodeList = node.querySelectorAll(selector);\r\n                for (let i = 0, l = nodeList.length; i < l; i++) {\r\n                    results.add(nodeList[i]);\r\n                }\r\n            }\r\n        });\r\n        return results;\r\n    },\r\n\r\n    prepend: function(selector) {\r\n        if (!selector) {\r\n            return this;\r\n        }\r\n        const child = new Query(selector);\r\n        this.each(function(parentNode) {\r\n            child.each(function(childNode) {\r\n                parentNode.insertBefore(childNode, parentNode.firstChild);\r\n            });\r\n        });\r\n        return this;\r\n    },\r\n\r\n    append: function(selector) {\r\n        if (!selector) {\r\n            return this;\r\n        }\r\n        const child = new Query(selector);\r\n        this.each(function(parentNode) {\r\n            child.each(function(childNode) {\r\n                parentNode.appendChild(childNode);\r\n            });\r\n        });\r\n        return this;\r\n    },\r\n\r\n    appendTo: function(selector) {\r\n        if (!selector) {\r\n            return this;\r\n        }\r\n        const parent = new Query(selector);\r\n        this.each(function(node) {\r\n            parent.append(node);\r\n        });\r\n        return this;\r\n    },\r\n\r\n    html: function(str) {\r\n        if (arguments.length === 0) {\r\n            const node = this.get(0);\r\n            if (node) {\r\n                return node.innerHTML;\r\n            }\r\n            return '';\r\n        }\r\n        this.each(function(node) {\r\n            node.innerHTML = str;\r\n        });\r\n        return this;\r\n    },\r\n\r\n    width: function(value) {\r\n        if (arguments.length === 0) {\r\n            const node = this.get(0);\r\n            if (node) {\r\n                return getElementDimension(node, 'Width');\r\n            }\r\n            return 0;\r\n        }\r\n        this.css('width', value);\r\n        return this;\r\n    },\r\n\r\n    height: function(value) {\r\n        if (arguments.length === 0) {\r\n            const node = this.get(0);\r\n            if (node) {\r\n                return getElementDimension(node, 'Height');\r\n            }\r\n            return 0;\r\n        }\r\n        this.css('height', value);\r\n        return this;\r\n    },\r\n\r\n    css: function(key, value) {\r\n        if (!key) {\r\n            return this;\r\n        }\r\n        if (arguments.length === 1) {\r\n            if (typeof key === 'object') {\r\n                Object.keys(key).forEach((k) => {\r\n                    this.css(k, key[k]);\r\n                });\r\n            } else {\r\n                const node = this.get(0);\r\n                if (node) {\r\n                    const style = getStyle(node);\r\n                    return style[camelCase(key)];\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        this.each(function(node) {\r\n            let v = value;\r\n            if (typeof v === 'number' && !cssNumber[key]) {\r\n                v += 'px';\r\n            }\r\n            node.style[key] = v;\r\n        });\r\n        return this;\r\n    },\r\n\r\n    attr: function(key, value) {\r\n        if (!key) {\r\n            return this;\r\n        }\r\n\r\n        if (arguments.length === 1) {\r\n            //set obj\r\n            if (typeof key === 'object') {\r\n                Object.keys(key).forEach((k) => {\r\n                    this.attr(k, key[k]);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            //get key\r\n            const node = this.get(0);\r\n            if (node) {\r\n                return node.getAttribute(key);\r\n            }\r\n            //if no attribute\r\n            return;\r\n        }\r\n\r\n        //set key value\r\n        this.each(function(node) {\r\n            node.setAttribute(key, value);\r\n        });\r\n        return this;\r\n    },\r\n\r\n    removeAttr: function(key) {\r\n        if (!key) {\r\n            return this;\r\n        }\r\n        this.each(function(node) {\r\n            if (node.hasAttribute(key)) {\r\n                node.removeAttribute(key);\r\n            }\r\n        });\r\n        return this;\r\n    },\r\n\r\n    removeClass: function(str) {\r\n        if (!arguments.length) {\r\n            //remove all\r\n            this.each(function(node) {\r\n                node.className = '';\r\n            });\r\n            return this;\r\n        }\r\n        if (!str || typeof str !== 'string') {\r\n            return this;\r\n        }\r\n        const arr = str.split(' ');\r\n        this.each(function(node) {\r\n            arr.forEach(function(item) {\r\n                if (item) {\r\n                    node.classList.remove(item);\r\n                }\r\n            });\r\n        });\r\n        return this;\r\n    },\r\n\r\n    addClass: function(str) {\r\n        if (!str || typeof str !== 'string') {\r\n            return this;\r\n        }\r\n        const arr = str.split(' ');\r\n        this.each(function(node) {\r\n            arr.forEach(function(item) {\r\n                if (item) {\r\n                    node.classList.add(item);\r\n                }\r\n            });\r\n        });\r\n        return this;\r\n    },\r\n\r\n    hasClass: function(str) {\r\n        if (!str || typeof str !== 'string') {\r\n            return false;\r\n        }\r\n        let has = false;\r\n        this.each(function(node) {\r\n            const res = node.classList.contains(str);\r\n            if (res) {\r\n                has = true;\r\n                return false;\r\n            }\r\n        });\r\n        return has;\r\n    },\r\n\r\n    show: function() {\r\n        this.each(function(node) {\r\n            if (!isElement(node)) {\r\n                return;\r\n            }\r\n            const display = getDefaultDisplay(node.nodeName);\r\n            node.style.display = display;\r\n        });\r\n        return this;\r\n    },\r\n\r\n    hide: function() {\r\n        this.each(function(node) {\r\n            if (!isElement(node)) {\r\n                return;\r\n            }\r\n            const display = node.style.display;\r\n            if (display === 'none') {\r\n                return;\r\n            }\r\n            node.style.display = 'none';\r\n        });\r\n        return this;\r\n    },\r\n\r\n    click: function() {\r\n        const node = this.get(0);\r\n        if (node && typeof node.click === 'function') {\r\n            node.click();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    offset: function() {\r\n        const rect = {\r\n            left: 0,\r\n            top: 0\r\n        };\r\n        const node = this.get(0);\r\n        if (node) {\r\n            const br = node.getBoundingClientRect();\r\n            rect.left = br.left + window.scrollX;\r\n            rect.top = br.top + window.scrollY;\r\n        }\r\n        return rect;\r\n    },\r\n\r\n    clone: function() {\r\n        const q = new Query();\r\n        this.each(function(node) {\r\n            if (node && node.cloneNode) {\r\n                const copy = node.cloneNode(true);\r\n                q.add(copy);\r\n            }\r\n        });\r\n        return q;\r\n    },\r\n\r\n    children: function() {\r\n        const q = new Query();\r\n        this.each(function(node) {\r\n            let n = node.firstChild;\r\n            while (n) {\r\n                q.add(n);\r\n                n = n.nextSibling;\r\n            }\r\n        });\r\n        return q;\r\n    },\r\n\r\n    parent: function() {\r\n        const node = this.get(0);\r\n        if (node) {\r\n            return new Query(node.parentNode);\r\n        }\r\n        return new Query();\r\n    },\r\n\r\n    is: function(str) {\r\n        if (!str) {\r\n            return false;\r\n        }\r\n        const arr = str.split(',');\r\n        let res = true;\r\n        this.each(function(node) {\r\n            //window no nodeName\r\n            if (!node.nodeName) {\r\n                res = false;\r\n                return false;\r\n            }\r\n            const name = node.nodeName.toLowerCase();\r\n            if (!Util.inList(name, arr)) {\r\n                res = false;\r\n                return false;\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n\r\n};\r\n\r\nObject.defineProperty(Query.prototype, 'length', {\r\n    get: function() {\r\n        return this.list.length;\r\n    }\r\n});\r\n\r\nexport default function(selector) {\r\n    return new Query(selector);\r\n}\r\n\r\n","const ID = 'turbogrid';\r\n\r\nexport default {\r\n    ID: ID,\r\n    NS: `tg-${ID}`,\r\n\r\n    VERSION: window.VERSION,\r\n    TIMESTAMP: window.TIMESTAMP,\r\n\r\n    UP: 'up',\r\n    DOWN: 'down',\r\n    LEFT: 'left',\r\n    RIGHT: 'right',\r\n\r\n    //indent each level, and tree icon width\r\n    TREE_INDENT: 15\r\n\r\n};\r\n","function hasOwn(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\nfunction mergeProps(target, list, isConcat) {\r\n    for (let i = 0, l = list.length; i < l; i++) {\r\n        const item = list[i];\r\n        if (!item) {\r\n            continue;\r\n        }\r\n        for (const k in item) {\r\n            if (isConcat && hasOwn(target, k)) {\r\n                console.log(`ERROR: concat with an existing key: \"${k}\" (index:${i})`);\r\n                //console.log(list);\r\n            }\r\n            if (target[k] !== item[k]) {\r\n                target[k] = item[k];\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\n\r\nconst Extend = function() {\r\n\r\n};\r\n\r\nExtend.extend = function(protoProps, staticProps) {\r\n\r\n    const Super = this;\r\n\r\n    //============================================================\r\n    //constructor\r\n    let Sub = function() {\r\n        return Super.apply(this, arguments);\r\n    };\r\n\r\n    //if have custom constructor\r\n    if (protoProps && hasOwn(protoProps, 'constructor') && typeof protoProps.constructor === 'function') {\r\n        Sub = protoProps.constructor;\r\n    }\r\n\r\n    //============================================================\r\n\r\n    //add static properties to the constructor\r\n    mergeProps(Sub, [Super, staticProps]);\r\n\r\n    //============================================================\r\n    //prototype handler\r\n\r\n    const parentProps = Object.create(Super.prototype);\r\n    parentProps.constructor = Sub;\r\n\r\n    mergeProps(Sub.prototype, [parentProps, protoProps]);\r\n\r\n    //============================================================\r\n\r\n    return Sub;\r\n\r\n};\r\n\r\nExtend.concat = function() {\r\n    const protoProps = mergeProps({}, arguments, true);\r\n    return Extend.extend.call(this, protoProps);\r\n};\r\n\r\nexport default Extend;\r\n","const Event = function(o) {\r\n    Object.assign(this, o);\r\n    this.timeStamp = new Date().getTime();\r\n};\r\n\r\nEvent.prototype = {\r\n    constructor: Event,\r\n    cancelable: true,\r\n\r\n    //removed not native\r\n    defaultPrevented: false,\r\n    preventDefault: function() {\r\n        this.defaultPrevented = true;\r\n    },\r\n\r\n    //just stopped if multiple bind\r\n    isPropagationStopped: false,\r\n    stopPropagation: function() {\r\n        this.isPropagationStopped = true;\r\n    },\r\n\r\n    //useless for custom events\r\n    isImmediatePropagationStopped: false,\r\n    stopImmediatePropagation: function() {\r\n        this.isImmediatePropagationStopped = true;\r\n        this.stopPropagation();\r\n    }\r\n\r\n};\r\n\r\nexport default Event;\r\n","import Event from './event.js';\r\n\r\nconst EventUtil = {\r\n\r\n    getEventItem: function(target, context, handler, option) {\r\n        context = String(context);\r\n        if (!context) {\r\n            return;\r\n        }\r\n\r\n        option = option || {};\r\n        const arr = context.split('.');\r\n        const type = arr.shift();\r\n        const namespace = arr.join('.');\r\n\r\n        return {\r\n            type: type,\r\n            target: target,\r\n            context: context,\r\n            namespace: namespace,\r\n            handler: handler,\r\n            once: option.once\r\n        };\r\n    },\r\n\r\n    getEventListByString: function(target, types, handler, option) {\r\n        const list = [];\r\n        const arr = types.split(' ');\r\n        arr.forEach(function(type) {\r\n            const eventItem = EventUtil.getEventItem(target, type, handler, option);\r\n            if (eventItem) {\r\n                list.push(eventItem);\r\n            }\r\n        });\r\n        return list;\r\n    },\r\n\r\n    getEventListByObject: function(target, types, option) {\r\n        const list = [];\r\n        const keys = Object.keys(types);\r\n        keys.forEach(function(type) {\r\n            const eventItem = EventUtil.getEventItem(target, type, types[type], option);\r\n            if (eventItem) {\r\n                list.push(eventItem);\r\n            }\r\n        });\r\n        return list;\r\n    },\r\n\r\n    getEventList: function(target, types, handler, option) {\r\n        if (!types) {\r\n            return [];\r\n        }\r\n\r\n        if (typeof types === 'string') {\r\n            return EventUtil.getEventListByString(target, types, handler, option);\r\n        }\r\n\r\n        if (typeof types === 'object') {\r\n            return EventUtil.getEventListByObject(target, types, handler);\r\n        }\r\n\r\n        return [];\r\n    },\r\n\r\n    //=================================================================================================\r\n\r\n    addEvent: function(eventListener, event, maxListeners) {\r\n        if (eventListener.events.length >= maxListeners) {\r\n            let msg = 'Possible Event memory leak detected. ';\r\n            msg += `More than ${maxListeners} (max limit) listeners added. `;\r\n            msg += 'Use setMaxListeners(n) to increase limit.';\r\n            console.warn(msg, event);\r\n            return;\r\n        }\r\n        eventListener.events.push(event);\r\n    },\r\n\r\n    addEvents: function(eventListeners, eventList, maxListeners) {\r\n        eventList.forEach(function(event) {\r\n            const type = event.type;\r\n            if (!eventListeners[type]) {\r\n                eventListeners[type] = {\r\n                    events: []\r\n                };\r\n            }\r\n            const handler = event.handler;\r\n            if (typeof handler !== 'function') {\r\n                return;\r\n            }\r\n            const eventListener = eventListeners[type];\r\n            EventUtil.addEvent(eventListener, event, maxListeners);\r\n        });\r\n    },\r\n\r\n    //=================================================================================================\r\n\r\n    removeEventByNamespace: function(eventListeners, namespace) {\r\n        const types = Object.keys(eventListeners);\r\n        types.forEach(function(type) {\r\n            const eventListener = eventListeners[type];\r\n            const newEvents = [];\r\n            eventListener.events.forEach(function(item) {\r\n                if (item && item.namespace !== namespace) {\r\n                    newEvents.push(item);\r\n                }\r\n            });\r\n            eventListener.events = newEvents;\r\n        });\r\n    },\r\n\r\n    removeEventByHandler: function(eventListeners, type, handler) {\r\n        const eventListener = eventListeners[type];\r\n        if (!eventListener) {\r\n            return;\r\n        }\r\n        const newEvents = [];\r\n        eventListener.events.forEach(function(item) {\r\n            if (item && item.handler !== handler) {\r\n                newEvents.push(item);\r\n            }\r\n        });\r\n        eventListener.events = newEvents;\r\n    },\r\n\r\n    removeEventByType: function(eventListeners, type) {\r\n        const eventListener = eventListeners[type];\r\n        if (!eventListener) {\r\n            return;\r\n        }\r\n        eventListener.events = [];\r\n    },\r\n\r\n    removeEvent: function(eventListeners, event) {\r\n        const type = event.type;\r\n        const namespace = event.namespace;\r\n        if (!type && namespace) {\r\n            EventUtil.removeEventByNamespace(eventListeners, namespace);\r\n            return;\r\n        }\r\n        const handler = event.handler;\r\n        if (typeof handler === 'function') {\r\n            EventUtil.removeEventByHandler(eventListeners, type, handler);\r\n            return;\r\n        }\r\n        EventUtil.removeEventByType(eventListeners, type);\r\n    },\r\n\r\n    removeEvents: function(eventListeners, eventList) {\r\n        eventList.forEach(function(event) {\r\n            EventUtil.removeEvent(eventListeners, event);\r\n        });\r\n    },\r\n\r\n    removeAllEvents: function(eventListeners) {\r\n        const types = Object.keys(eventListeners);\r\n        types.forEach(function(type) {\r\n            EventUtil.removeEventByType(eventListeners, type);\r\n        });\r\n    },\r\n\r\n    //=================================================================================================\r\n\r\n    sendEventList: function(target, eventListener, event, data) {\r\n        //call each handler if not stopped\r\n        const events = eventListener.events;\r\n        for (let i = 0; i < events.length; i++) {\r\n            const item = events[i];\r\n            //skip once called, not removed but called\r\n            if (item.onceCalled) {\r\n                continue;\r\n            }\r\n            //tag before call handler, because in handler may trigger once again\r\n            if (item.once) {\r\n                item.onceCalled = true;\r\n            }\r\n            event.namespace = item.namespace;\r\n            item.handler.call(target, event, data);\r\n            // should be isImmediatePropagationStopped in native events\r\n            // but custom event can not support bubbles\r\n            if (event.isPropagationStopped) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        //remove all onceCalled\r\n        eventListener.events = events.filter((it) => !it.onceCalled);\r\n\r\n    },\r\n\r\n    sendEvent: function(target, eventListeners, type, data) {\r\n        const eventListener = eventListeners[type];\r\n        if (!eventListener) {\r\n            return;\r\n        }\r\n        const event = new Event({\r\n            type: type,\r\n            target: target,\r\n            currentTarget: target,\r\n            data: data\r\n        });\r\n\r\n        EventUtil.sendEventList(target, eventListener, event, data);\r\n    }\r\n\r\n};\r\n\r\nexport default EventUtil;\r\n","import Extend from './extend.js';\r\nimport EventUtil from './event-util.js';\r\n\r\nexport default Extend.extend({\r\n\r\n    maxListeners: 10,\r\n\r\n    setMaxListeners: function(n) {\r\n        this.maxListeners = Number(n) || 10;\r\n    },\r\n\r\n    getMaxListeners: function() {\r\n        return this.maxListeners;\r\n    },\r\n\r\n    getEventListeners: function() {\r\n        if (!this.eventListeners) {\r\n            this.eventListeners = {};\r\n        }\r\n        return this.eventListeners;\r\n    },\r\n\r\n    delEventListeners: function() {\r\n        this.eventListeners = null;\r\n    },\r\n\r\n    //=======================================================\r\n\r\n    bind: function(types, handler, option) {\r\n        const eventList = EventUtil.getEventList(this, types, handler, option);\r\n        if (!eventList.length) {\r\n            return this;\r\n        }\r\n        const eventListeners = this.getEventListeners();\r\n        EventUtil.addEvents(eventListeners, eventList, this.maxListeners);\r\n        return this;\r\n    },\r\n\r\n    once: function(types, handler) {\r\n        return this.bind(types, handler, {\r\n            once: true\r\n        });\r\n    },\r\n\r\n    unbind: function(types, handler, option) {\r\n        const eventListeners = this.getEventListeners();\r\n        if (!arguments.length) {\r\n            EventUtil.removeAllEvents(eventListeners);\r\n            return this;\r\n        }\r\n        const eventList = EventUtil.getEventList(this, types, handler, option);\r\n        if (!eventList.length) {\r\n            return this;\r\n        }\r\n        EventUtil.removeEvents(eventListeners, eventList);\r\n        return this;\r\n    },\r\n\r\n    trigger: function(type, data) {\r\n        const eventListeners = this.getEventListeners();\r\n        EventUtil.sendEvent(this, eventListeners, type, data);\r\n        return this;\r\n    }\r\n\r\n});\r\n","import merge from './merge.js';\r\nimport EventBase from './event-base.js';\r\nconst OptionBase = EventBase.extend({\r\n\r\n    option: null,\r\n\r\n    getDefaultOption: function() {\r\n        return {};\r\n    },\r\n\r\n    getOption: function() {\r\n        if (arguments.length) {\r\n            if (this.option) {\r\n                return this.option[arguments[0]];\r\n            }\r\n            return;\r\n        }\r\n        return this.option;\r\n    },\r\n\r\n    setOption: function() {\r\n        const args = Array.from(arguments);\r\n        const defaultOption = this.getDefaultOption.apply(this, args);\r\n        //no arguments returns default\r\n        if (args.length === 0) {\r\n            this.option = defaultOption;\r\n            return this;\r\n        }\r\n        const firstArg = args[0];\r\n        if (args.length === 1) {\r\n            this.option = merge(defaultOption, firstArg);\r\n            return this;\r\n        }\r\n        if (typeof firstArg === 'string') {\r\n            //keep option for single option change\r\n            this.option[firstArg] = args[1];\r\n            return this;\r\n        }\r\n        //multiple options, concat require Array type\r\n        const list = [defaultOption].concat(args);\r\n        this.option = merge.apply(null, list);\r\n        return this;\r\n    }\r\n\r\n});\r\n\r\nexport default OptionBase;\r\n","\r\nexport default {\r\n\r\n    createCache: function() {\r\n        this.headerCache = new Map();\r\n        this.bodyCache = new Map();\r\n        this.dataCache = new WeakMap();\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    setHeaderCache: function(column, headerNode) {\r\n        this.headerCache.set(column, headerNode);\r\n    },\r\n\r\n    getHeaderCache: function(column) {\r\n        return this.headerCache.get(column);\r\n    },\r\n\r\n    clearHeaderCache: function() {\r\n        //console.log('clearHeaderCache', this.id);\r\n        //nodes already removed by $header.empty()\r\n        this.headerCache.clear();\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    setRowCache: function(row, rowNodes) {\r\n        this.bodyCache.set(row, {\r\n            rowNodes,\r\n            cellNodes: new Map()\r\n        });\r\n    },\r\n\r\n    getRowCache: function(row) {\r\n        return this.bodyCache.get(row);\r\n    },\r\n\r\n    deleteRowCache: function(row) {\r\n        const rowNodes = this.getRowNodesByIndex(row);\r\n        if (rowNodes) {\r\n            rowNodes.each((node) => {\r\n                this.removeNode(node);\r\n            });\r\n        }\r\n        this.bodyCache.delete(row);\r\n    },\r\n\r\n    deleteCellCache: function(cellNodes, column) {\r\n        if (!cellNodes) {\r\n            return;\r\n        }\r\n        this.removeNode(cellNodes.get(column));\r\n        cellNodes.delete(column);\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    //there are 2 rows if frozenInfo.rows (left and right)\r\n    getRowNodesByIndex: function(row) {\r\n        const bodyCache = this.getRowCache(row);\r\n        if (bodyCache) {\r\n            return bodyCache.rowNodes;\r\n        }\r\n    },\r\n\r\n    getCellNodeByIndex: function(row, column) {\r\n        const bodyCache = this.getRowCache(row);\r\n        if (bodyCache) {\r\n            return bodyCache.cellNodes.get(column);\r\n        }\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    //callback(row, rowNodes, cellNodes)\r\n    forEachBodyCache: function(callback) {\r\n        this.bodyCache.forEach((bodyCache, row) => {\r\n            callback.call(this, row, bodyCache.rowNodes, bodyCache.cellNodes);\r\n        });\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    //max height fixing\r\n    updateRowCacheTopOffset: function() {\r\n        //console.log(\"updateRowCacheTopOffset\", this.scrollTopOffset);\r\n        const fr = this.frozenInfo.row;\r\n        this.forEachBodyCache((row, rowNodes, cellNodes) => {\r\n            //do NOT update frozen row\r\n            if (row <= fr) {\r\n                return;\r\n            }\r\n            if (rowNodes) {\r\n                const rowItem = this.getViewRowItem(row);\r\n                const rowTop = this.getViewRowTop(rowItem);\r\n                rowNodes.css('top', rowTop);\r\n            }\r\n        });\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    setNodeDataCache: function(node, data) {\r\n        if (node) {\r\n            return this.dataCache.set(node, data);\r\n        }\r\n    },\r\n\r\n    getNodeDataCache: function(node) {\r\n        if (node) {\r\n            return this.dataCache.get(node);\r\n        }\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    removeCache: function() {\r\n        this.headerCache = null;\r\n        this.bodyCache = null;\r\n        this.dataCache = null;\r\n    }\r\n\r\n};\r\n\r\n","//All Events\r\nexport const Types = [\r\n\r\n    //render\r\n    'onUpdated',\r\n    'onFirstUpdated',\r\n\r\n    //header\r\n    'onHeaderUpdated',\r\n    'onSort',\r\n\r\n    //column\r\n    'onColumnAdded',\r\n    'onColumnRemoved',\r\n\r\n    'onColumnWidthChanged',\r\n\r\n    //row\r\n    'onRowAdded',\r\n    'onRowRemoved',\r\n\r\n    'onRowExpanded',\r\n    'onRowCollapsed',\r\n\r\n    'onRowSubsRequest',\r\n\r\n    'onRowDragged',\r\n    'onRowDropped',\r\n    'onRowMoved',\r\n\r\n    'onRowMouseEnter',\r\n    'onRowMouseLeave',\r\n\r\n    'onSelectChanged',\r\n\r\n    //cell\r\n    'onCellUpdated',\r\n\r\n    'onCellMouseEnter',\r\n    'onCellMouseLeave',\r\n\r\n    'onCellMouseOver',\r\n    'onCellMouseOut',\r\n\r\n    //scroll\r\n    'onScroll',\r\n    'onScrollStateChanged',\r\n\r\n    'onMouseWheel',\r\n\r\n    //header and body\r\n    'onClick',\r\n    'onDblClick',\r\n    'onContextMenu',\r\n\r\n    //resize\r\n    'onResize',\r\n    'onLayout',\r\n\r\n    //other\r\n    'onKeyDown',\r\n    'onDestroy'\r\n\r\n];\r\n\r\nconst E = {};\r\nTypes.forEach((type) => {\r\n    E[type] = type;\r\n});\r\n\r\nexport default E;\r\n","import E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    renderCells: function(rows, columns) {\r\n        rows.forEach((row) => {\r\n            this.drawRowCells(row, columns);\r\n        });\r\n    },\r\n\r\n    getCellValue: function(rowItem, columnItem) {\r\n        return rowItem[columnItem.id];\r\n    },\r\n\r\n    renderCell: function(rowItem, columnItem, cellNode) {\r\n\r\n        const value = this.getCellValue(rowItem, columnItem);\r\n\r\n        let content = value;\r\n\r\n        //1, null formatter only for value\r\n        if (this.nullFormatter) {\r\n            content = this.nullFormatter.call(this, content, rowItem, columnItem, cellNode);\r\n        }\r\n\r\n        //2, row formatter, high priority\r\n        //3, column formatter\r\n        const formatter = rowItem.tg_formatter || columnItem.tg_formatter;\r\n\r\n        //column formatter\r\n        if (typeof formatter === 'function') {\r\n            content = formatter.call(this, content, rowItem, columnItem, cellNode);\r\n        }\r\n\r\n        this.renderNodeContent(cellNode, content);\r\n\r\n        this.trigger(E.onCellUpdated, {\r\n            value: value,\r\n            rowItem: rowItem,\r\n            columnItem: columnItem,\r\n            node: cellNode\r\n        });\r\n\r\n    },\r\n\r\n    getPreRenderColumnList: function(row, columns) {\r\n        const list = [];\r\n        if (!columns.length) {\r\n            return list;\r\n        }\r\n\r\n        for (let i = 0, l = columns.length; i < l; i++) {\r\n            const column = columns[i];\r\n            const cellNode = this.getCellNodeByIndex(row, column);\r\n            if (!cellNode) {\r\n                list.push(column);\r\n            }\r\n        }\r\n        return list;\r\n    },\r\n\r\n    drawRowCells: function(row, columns) {\r\n        const list = this.getPreRenderColumnList(row, columns);\r\n        if (!list.length) {\r\n            return;\r\n        }\r\n\r\n        //console.log(columns, list);\r\n\r\n        list.forEach((column) => {\r\n            this.createCellNode(row, column);\r\n        });\r\n    },\r\n\r\n    getCellClass: function(rowItem, columnItem) {\r\n\r\n        const column = columnItem.tg_view_index;\r\n\r\n        const list = ['tg-cell'];\r\n\r\n        list.push(`tg-c-${column}`);\r\n\r\n        if (columnItem.align) {\r\n            list.push(`tg-align-${columnItem.align}`);\r\n        }\r\n\r\n        //list index first\r\n        if (columnItem.tg_list_index === 0) {\r\n            list.push('tg-list-first');\r\n        }\r\n        if (columnItem.tg_list_last) {\r\n            list.push('tg-list-last');\r\n        }\r\n\r\n        list.push(Util.classMap(columnItem.classMap));\r\n        list.push(Util.classMap(rowItem[`${columnItem.id}ClassMap`]));\r\n\r\n        return Util.classMap(list);\r\n    },\r\n\r\n    createCellNode: function(row, column) {\r\n\r\n        const rowCache = this.getRowCache(row);\r\n        if (!rowCache) {\r\n            return;\r\n        }\r\n\r\n        //from view list\r\n        const rowItem = this.getViewRowItem(row);\r\n        const columnItem = this.getViewColumnItem(column);\r\n        if (!rowItem || !columnItem) {\r\n            return;\r\n        }\r\n\r\n        const cellNode = document.createElement('div');\r\n        //for event position\r\n        cellNode.setAttribute('column', column);\r\n        const classMap = this.getCellClass(rowItem, columnItem);\r\n        cellNode.className = classMap;\r\n        const cssText = Util.styleMap(columnItem.styleMap) + Util.styleMap(rowItem[`${columnItem.id}StyleMap`]);\r\n        if (cssText) {\r\n            cellNode.style.cssText = cssText;\r\n        }\r\n\r\n        const rowNodes = rowCache.rowNodes;\r\n        const frozen = columnItem.tg_frozen;\r\n\r\n        const rowNode = this.getCellRowNode(rowNodes, frozen);\r\n        this.appendNode(rowNode, cellNode);\r\n\r\n        this.renderCell(rowItem, columnItem, cellNode);\r\n\r\n        //node and data cache\r\n        rowCache.cellNodes.set(column, cellNode);\r\n        this.setNodeDataCache(cellNode, {\r\n            row,\r\n            rowItem,\r\n            rowNode,\r\n            column,\r\n            columnItem,\r\n            cellNode\r\n        });\r\n\r\n    },\r\n\r\n    getCellRowNode: function(rowNodes, frozen) {\r\n        const rowL = rowNodes.get(0);\r\n        if (this.frozenInfo.columns) {\r\n            const rowR = rowNodes.get(1);\r\n            if (this.frozenInfo.right) {\r\n                if (frozen) {\r\n                    return rowR;\r\n                }\r\n                return rowL;\r\n            }\r\n            if (frozen) {\r\n                return rowL;\r\n            }\r\n            return rowR;\r\n        }\r\n        return rowL;\r\n    }\r\n};\r\n","import E from '../core/event-types.js';\r\n\r\nexport default {\r\n\r\n    addColumn: function(columnInfo, parent, position, scrollTo = true) {\r\n\r\n        const columnList = this.getToBeAddedItemList(columnInfo);\r\n        if (!columnList.length) {\r\n            return false;\r\n        }\r\n\r\n        let parentItem;\r\n        if (typeof parent !== 'undefined' && parent !== null) {\r\n            parentItem = this.getColumnItem(parent);\r\n            // if defined parent but not found parent item, should be invalid operation\r\n            if (!parentItem) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const subs = this.getToBeAddedParentSubs(parentItem, this.columns);\r\n        const positionIndex = this.getToBeAddedPositionIndex(position, subs);\r\n\r\n        //console.log('addColumn', parentItem, positionIndex);\r\n\r\n        const args = [positionIndex, 0].concat(columnList);\r\n        subs.splice.apply(subs, args);\r\n\r\n        this.onNextUpdated(function() {\r\n            this.trigger(E.onColumnAdded, columnList);\r\n        });\r\n\r\n        const renderSettings = {\r\n            type: 'columns'\r\n        };\r\n\r\n        if (scrollTo) {\r\n            renderSettings.scrollColumn = columnList[columnList.length - 1];\r\n        }\r\n\r\n        this.render(renderSettings);\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    //=============================================================================\r\n\r\n    deleteColumn: function(columnInfo) {\r\n\r\n        const columnList = this.toColumnItemList(columnInfo, (it) => !it.private);\r\n        if (!columnList.length) {\r\n            return false;\r\n        }\r\n\r\n        this.removeColumnsHandler(columnList);\r\n\r\n        this.onNextUpdated(function() {\r\n            this.trigger(E.onColumnRemoved, columnList);\r\n        });\r\n\r\n        this.render('columns');\r\n\r\n        return true;\r\n    },\r\n\r\n    removeColumnsHandler: function(deletedColumnsList) {\r\n\r\n        //remove with high performance, desc index\r\n        const list = [].concat(deletedColumnsList);\r\n        list.sort(function(a, b) {\r\n            return b.tg_index - a.tg_index;\r\n        });\r\n\r\n        list.forEach((columnItem) => {\r\n\r\n            //remove sort state if column sorted\r\n            if (columnItem === this.sortColumn) {\r\n                this.removeSortColumn();\r\n            }\r\n\r\n            let parentSubs;\r\n            //two ways to delete column\r\n            if (columnItem.tg_parent) {\r\n                //quick delete by sub index\r\n                parentSubs = columnItem.tg_parent.subs;\r\n                parentSubs.splice(columnItem.tg_sub_index, 1);\r\n            } else {\r\n                parentSubs = this.columns;\r\n                // sub index is for private columns this moment\r\n                // using for match delete\r\n                const index = parentSubs.findIndex((it) => it === columnItem);\r\n                if (index !== -1) {\r\n                    parentSubs.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            //remove subs if subs is empty\r\n            if (!parentSubs.length && columnItem.tg_parent) {\r\n                columnItem.tg_parent.subs = null;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n};\r\n","import Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    setColumnWidth: function(columnIndex, width) {\r\n        const changed = this.updateColumnWidth(columnIndex, width);\r\n        if (!changed) {\r\n            return this;\r\n        }\r\n        //sync\r\n        this.resize();\r\n        return this;\r\n    },\r\n\r\n    //=============================================================================\r\n    //for set column width and adjust column width\r\n    updateColumnWidth: function(columnIndex, width) {\r\n        const column = this.getColumnItem(columnIndex);\r\n        if (!column) {\r\n            return false;\r\n        }\r\n        if (!Util.isNum(width)) {\r\n            return false;\r\n        }\r\n\r\n        width = Math.round(width);\r\n        width = Math.max(0, width);\r\n\r\n        if (column.tg_width === width) {\r\n            return false;\r\n        }\r\n\r\n        column.width = width;\r\n        //force to update width range\r\n        column.minWidth = Math.min(column.minWidth, width);\r\n        column.maxWidth = Math.max(column.maxWidth, width);\r\n\r\n        this.updateViewColumnWidth(column);\r\n\r\n        return true;\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    showColumn: function(columnInfo) {\r\n        return this.updateColumnsInvisible(this.toColumnItemList(columnInfo), false);\r\n    },\r\n\r\n    hideColumn: function(columnInfo) {\r\n        return this.updateColumnsInvisible(this.toColumnItemList(columnInfo), true);\r\n    },\r\n\r\n    updateColumnsInvisible: function(columnList, invisible) {\r\n        if (!columnList.length) {\r\n            return false;\r\n        }\r\n        const changedList = [];\r\n        columnList.forEach((columnItem) => {\r\n            if (columnItem.invisible === invisible) {\r\n                return;\r\n            }\r\n            columnItem.invisible = invisible;\r\n            columnItem.tg_invisible = invisible;\r\n            changedList.push(columnItem);\r\n        });\r\n\r\n        if (!changedList.length) {\r\n            return false;\r\n        }\r\n\r\n        this.render('columns');\r\n\r\n        return true;\r\n    }\r\n};\r\n\r\n","import Util from '../core/util';\r\n\r\nexport default {\r\n\r\n    showColumnLine: function(columnItem) {\r\n        if (!columnItem) {\r\n            return;\r\n        }\r\n        this.$columnLineContainer.show();\r\n        this.renderColumnLine(columnItem);\r\n    },\r\n\r\n    hideColumnLine: function() {\r\n        if (this.previousColumnLineActive) {\r\n            return;\r\n        }\r\n        this.$columnLineContainer.hide();\r\n    },\r\n\r\n    //blue color\r\n    setColumnLineActive: function(active) {\r\n        if (active === this.previousColumnLineActive) {\r\n            return;\r\n        }\r\n        this.previousColumnLineActive = active;\r\n        if (active) {\r\n            this.$columnLineItem.addClass('tg-active');\r\n        } else {\r\n            this.$columnLineItem.removeClass('tg-active');\r\n        }\r\n    },\r\n\r\n    //======================================================================================\r\n\r\n    getColumnLineLeft: function(columnItem) {\r\n        let left = columnItem.tg_left;\r\n        if (!columnItem.tg_frozen) {\r\n            left -= this.scrollLeft;\r\n        }\r\n        if (this.frozenInfo.right) {\r\n            if (columnItem.tg_frozen) {\r\n                left = columnItem.tg_left + this.paneWidthL;\r\n            } else {\r\n                left -= this.columnsWidthR;\r\n            }\r\n        }\r\n        return left;\r\n    },\r\n\r\n    renderColumnLine: function(columnItem) {\r\n\r\n        const headerNode = this.getHeaderItemNode(columnItem);\r\n        const top = headerNode.offsetTop;\r\n\r\n        const width = columnItem.tg_width;\r\n        const left = this.getColumnLineLeft(columnItem);\r\n        //console.log(left);\r\n\r\n        this.$columnLineItemL.css({\r\n            top: top,\r\n            left: left\r\n        });\r\n\r\n        this.$columnLineItemR.css({\r\n            top: top,\r\n            left: left + width - 1\r\n        });\r\n\r\n        //hide handler\r\n        if (this.frozenInfo.right) {\r\n            //nothing to do, maybe need handle frozen right later\r\n            return;\r\n        }\r\n\r\n        if (this.frozenInfo.columns && !columnItem.tg_frozen && left < this.paneWidthL) {\r\n            //hide left line if has scroll left less than frozen left\r\n            this.$columnLineItemL.hide();\r\n        } else {\r\n            this.$columnLineItemL.show();\r\n        }\r\n\r\n\r\n    },\r\n\r\n    //======================================================================================\r\n    //drag\r\n\r\n    columnWidthDragStartHandler: function(e, d) {\r\n        const columnItem = d.columnItem;\r\n        this.$headerFrame.addClass('tg-column-dragging');\r\n        this.setColumnLineActive(true);\r\n        const node = this.getColumnHeaderNode(columnItem);\r\n        d.tg_width = node.clientWidth;\r\n    },\r\n\r\n    columnWidthDragMoveHandler: function(e, d) {\r\n        const columnItem = d.columnItem;\r\n        let newWidth = d.tg_width + d.offsetX;\r\n        newWidth = Util.clamp(newWidth, columnItem.minWidth, columnItem.maxWidth);\r\n        if (columnItem.tg_width === newWidth) {\r\n            return;\r\n        }\r\n        //width changed by user, force to update width\r\n        columnItem.width = newWidth;\r\n        this.updateViewColumnWidth(columnItem);\r\n        this.renderColumnLine(columnItem);\r\n    },\r\n\r\n    columnWidthDragEndHandler: function(e, d) {\r\n        if (!d.changed) {\r\n            return;\r\n        }\r\n        this.$headerFrame.removeClass('tg-column-dragging');\r\n        this.setColumnLineActive(false);\r\n\r\n        if (e.target.className !== 'tg-column-resizing') {\r\n            this.hideColumnLine();\r\n        }\r\n\r\n        this.onNextUpdated(() => {\r\n            this.renderColumnLine(d.columnItem);\r\n        });\r\n\r\n        this.resize();\r\n\r\n    },\r\n\r\n\r\n    //======================================================================================\r\n    //touch\r\n\r\n    columnWidthTouchStartHandler: function(e, d) {\r\n        Util.preventDefault(d.e);\r\n        const columnItem = d.columnItem;\r\n        this.showColumnLine(columnItem);\r\n        this.setColumnLineActive(true);\r\n        d.index = columnItem.tg_index;\r\n        const node = this.getColumnHeaderNode(columnItem);\r\n        d.width = node.clientWidth;\r\n        //console.log(\"touch start\", d);\r\n    },\r\n\r\n    columnWidthTouchMoveHandler: function(e, d) {\r\n        Util.preventDefault(d.e);\r\n        const columnItem = d.columnItem;\r\n        let newWidth = d.width + d.offsetX;\r\n        newWidth = Util.clamp(newWidth, columnItem.minWidth, columnItem.maxWidth);\r\n        if (columnItem.tg_width === newWidth) {\r\n            return;\r\n        }\r\n        //width changed by user, force to update width\r\n        columnItem.width = newWidth;\r\n        this.updateViewColumnWidth(columnItem);\r\n        this.renderColumnLine(columnItem);\r\n    },\r\n\r\n    columnWidthTouchEndHandler: function(e, d) {\r\n        Util.preventDefault(d.e);\r\n        //console.log(\"touch end\", d);\r\n        this.setColumnLineActive(false);\r\n        this.hideColumnLine();\r\n        this.resize();\r\n    }\r\n\r\n\r\n};\r\n\r\n","import E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    getColumnItem: function(context) {\r\n        if (Util.isNum(context)) {\r\n            if (context < 0) {\r\n                context = this.columnsInfo.length + context;\r\n            }\r\n            return this.columnsInfo.indexCache[context];\r\n        }\r\n        if (!context) {\r\n            return;\r\n        }\r\n        if (Util.isNum(context.tg_index)) {\r\n            return context;\r\n        }\r\n        return this.getColumnItemById(context.id || context);\r\n    },\r\n\r\n    getColumnItemById: function(id) {\r\n        return this.getColumnItemBy('id', id);\r\n    },\r\n\r\n    getColumnItemBy: function(key, value) {\r\n        if (typeof value === 'undefined') {\r\n            return;\r\n        }\r\n        return this.columnsInfo.indexCache.find((item) => item[key] === value);\r\n    },\r\n\r\n    getColumnsLength: function(total) {\r\n        if (total) {\r\n            return this.columnsInfo.length;\r\n        }\r\n        return this.viewColumns.length;\r\n    },\r\n\r\n    getViewColumnItem: function(columnIndex) {\r\n        return this.viewAllColumns[columnIndex];\r\n    },\r\n\r\n    //==========================================================================================\r\n\r\n\r\n    isColumnSortable: function(columnItem) {\r\n        if (!columnItem) {\r\n            return false;\r\n        }\r\n        if (columnItem.tg_group) {\r\n            return false;\r\n        }\r\n        if (!columnItem.name || !columnItem.id) {\r\n            return false;\r\n        }\r\n        return this.isSortable(columnItem);\r\n    },\r\n\r\n    isColumnResizable: function(columnItem) {\r\n        if (!columnItem) {\r\n            return false;\r\n        }\r\n        if (columnItem.tg_group) {\r\n            return false;\r\n        }\r\n        //default is true\r\n        if (!Util.hasOwn(columnItem, 'resizable')) {\r\n            return true;\r\n        }\r\n        return Boolean(columnItem.resizable);\r\n    },\r\n\r\n    //==========================================================================================\r\n    //only single column\r\n    updateViewColumnWidth: function(columnItem) {\r\n\r\n        //sync width to tg_width\r\n        columnItem.tg_width = columnItem.width;\r\n\r\n        this.updateColumnHeaderSize(columnItem);\r\n\r\n        this.updateTotalColumnsWidth();\r\n        this.updateHeaderLayerHeight();\r\n        this.cssRulesInvalid = true;\r\n        this.resizeBodyHandler();\r\n\r\n        //console.log('onColumnWidthChanged', columnItem.name);\r\n        this.trigger(E.onColumnWidthChanged, columnItem);\r\n\r\n        return true;\r\n    },\r\n\r\n    //depends columns changed: add/delete/show/hide/invisible\r\n    // frozenColumn/frozenRight changed\r\n    updateTotalColumnsWidth: function() {\r\n\r\n        //reset blank column\r\n        this.blankColumn.tg_width = 0;\r\n\r\n        const columns = this.viewColumns;\r\n\r\n        //update left right total width\r\n        let columnsWidthL = 0;\r\n        let columnsWidthR = 0;\r\n\r\n        const fcs = this.frozenInfo.columns;\r\n\r\n        const len = columns.length;\r\n        //x position\r\n        let left = 0;\r\n        for (let i = 0; i < len; i++) {\r\n            const column = columns[i];\r\n            column.tg_left = left;\r\n\r\n            const width = column.tg_width;\r\n            if (width > 0) {\r\n                left += width;\r\n                if (fcs && i >= fcs) {\r\n                    columnsWidthR += width;\r\n                } else {\r\n                    columnsWidthL += width;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.frozenInfo.right) {\r\n            const columnsWidthTemp = columnsWidthL;\r\n            columnsWidthL = columnsWidthR;\r\n            columnsWidthR = columnsWidthTemp;\r\n        }\r\n\r\n        this.columnsWidthL = columnsWidthL;\r\n        this.columnsWidthR = columnsWidthR;\r\n\r\n        //total width\r\n        this.columnsWidth = columnsWidthL + columnsWidthR;\r\n\r\n    },\r\n\r\n    //==========================================================================================\r\n\r\n    updateColumnHeaderSize: function(columnItem) {\r\n        //change width for column elements, both for all parent container\r\n        this.updateColumnHeaderWidth(columnItem);\r\n        this.updateColumnHeaderHeight(columnItem, true);\r\n        this.updateColumnGroupWidth(columnItem);\r\n    },\r\n\r\n    updateColumnHeaderWidth: function(columnItem) {\r\n\r\n        const node = this.getColumnHeaderNode(columnItem);\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        const w = columnItem.tg_width;\r\n        if (this.isInvisible(columnItem) || w <= 0) {\r\n            node.style.display = 'none';\r\n        } else {\r\n            node.style.display = '';\r\n            //do NOT use $node.width(width), it has column border issue\r\n            node.style.width = `${w}px`;\r\n        }\r\n\r\n    },\r\n\r\n    //update height depends width and display state\r\n    //because width could be 0, then column is hidden\r\n    updateColumnHeaderHeight: function(columnItem, force) {\r\n\r\n        //default to 0\r\n        columnItem.tg_height = 0;\r\n\r\n        //no width column\r\n        if (columnItem.tg_width <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.isInvisible(columnItem)) {\r\n            return;\r\n        }\r\n\r\n        //force means force update, remove cache\r\n        if (force) {\r\n            columnItem.tg_element_height = 0;\r\n        }\r\n\r\n        //use cache if exist\r\n        const eh = columnItem.tg_element_height;\r\n        if (eh) {\r\n            columnItem.tg_height = eh;\r\n            return;\r\n        }\r\n\r\n        const ch = this.getColumnHeaderHeight(columnItem);\r\n        //console.log(ch);\r\n        columnItem.tg_height = ch;\r\n        //cache element height\r\n        columnItem.tg_element_height = ch;\r\n\r\n    },\r\n\r\n    getColumnHeaderHeight: function(columnItem) {\r\n        const node = this.getColumnHeaderNode(columnItem);\r\n        if (!node) {\r\n            return 0;\r\n        }\r\n        //get real height\r\n        return node.clientHeight;\r\n    },\r\n\r\n    updateColumnGroupWidth: function(columnItem) {\r\n        const group = columnItem.tg_parent;\r\n        if (!group) {\r\n            return;\r\n        }\r\n        const width = this.getColumnGroupWidth(group);\r\n        if (group.tg_width === width) {\r\n            return;\r\n        }\r\n        group.tg_width = width;\r\n        this.updateColumnHeaderSize(group);\r\n    },\r\n\r\n    getColumnGroupWidth: function(group) {\r\n        if (this.isInvisible(group)) {\r\n            return 0;\r\n        }\r\n        let width = 0;\r\n        if (group.subs) {\r\n            group.subs.forEach((item) => {\r\n                if (this.isInvisible(item)) {\r\n                    return;\r\n                }\r\n                if (Util.isNum(item.tg_width)) {\r\n                    width += item.tg_width;\r\n                }\r\n            });\r\n        }\r\n        return width;\r\n    }\r\n\r\n};\r\n","import Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    // init tree data, frozen, group, level, parent, subs_length\r\n    initTreeInfo: function(treeList, frozenIndex) {\r\n\r\n        const indexCache = [];\r\n        let isTree = false;\r\n        let level = 0;\r\n        let index = 0;\r\n\r\n        const invisibleHandler = (item) => {\r\n            if (item.invisible) {\r\n                item.tg_invisible = true;\r\n                return;\r\n            }\r\n            if (item.tg_invisible) {\r\n                item.tg_invisible = false;\r\n            }\r\n        };\r\n\r\n        const frozenHandler = (item, i) => {\r\n            if (i <= frozenIndex && !item.tg_invisible) {\r\n                item.tg_frozen = true;\r\n                return;\r\n            }\r\n            if (item.tg_frozen) {\r\n                item.tg_frozen = false;\r\n            }\r\n        };\r\n\r\n        const subsHandler = (item) => {\r\n            if (Util.hasOwn(item, 'subs')) {\r\n                if (Array.isArray(item.subs)) {\r\n                    isTree = true;\r\n                    item.tg_group = true;\r\n                    item.tg_subs_length = item.subs.length;\r\n                    return;\r\n                }\r\n                item.subs = null;\r\n            }\r\n            if (item.tg_group) {\r\n                item.tg_group = false;\r\n            }\r\n        };\r\n\r\n        const parentAndLevelHandler = (item, parent) => {\r\n            //root tg_parent = undefined and tg_level = 0\r\n            item.tg_parent = parent;\r\n            let tg_level = 0;\r\n            if (parent) {\r\n                tg_level = parent.tg_level + 1;\r\n                if (tg_level > level) {\r\n                    level = tg_level;\r\n                }\r\n            }\r\n            item.tg_level = tg_level;\r\n        };\r\n\r\n        const initItem = function(item, i, parent) {\r\n\r\n            invisibleHandler(item);\r\n\r\n            frozenHandler(item, index);\r\n\r\n            subsHandler(item);\r\n\r\n            parentAndLevelHandler(item, parent);\r\n\r\n            //for delete invisible or collapsed rows\r\n            item.tg_index = index;\r\n            // for subs.splice()\r\n            item.tg_sub_index = i;\r\n\r\n            //add to cache\r\n            indexCache.push(item);\r\n\r\n            //next frozen index\r\n            index += 1;\r\n        };\r\n\r\n        const initTree = function(list, parent) {\r\n            //do NOT use forEach, because it doesn't support [].length = num\r\n            let i = 0;\r\n            const l = list.length;\r\n            while (i < l) {\r\n                let item = list[i];\r\n\r\n                if (!item || typeof item !== 'object') {\r\n                    item = {};\r\n                    list[i] = item;\r\n                }\r\n\r\n                initItem(item, i, parent);\r\n\r\n                //subs already init by initItem\r\n                if (item.subs) {\r\n                    initTree(item.subs, item);\r\n                }\r\n\r\n                i++;\r\n            }\r\n        };\r\n\r\n        initTree(treeList);\r\n\r\n        return {\r\n            indexCache,\r\n            isTree,\r\n            //for render column header\r\n            maxLevel: level,\r\n            length: index\r\n        };\r\n    },\r\n\r\n    initViewList: function(list, handler) {\r\n\r\n        let i = 0;\r\n        const l = list.length;\r\n        let item;\r\n        while (i < l) {\r\n            item = list[i];\r\n            item.tg_view_index = i;\r\n            handler.call(this, item, i);\r\n            i++;\r\n        }\r\n\r\n        if (item) {\r\n            item.tg_view_last = true;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    forEachRow: function(callback) {\r\n        Util.forEachTree(this.rows, callback);\r\n        return this;\r\n    },\r\n\r\n    forEachColumn: function(callback) {\r\n        Util.forEachTree(this.columns, callback);\r\n        return this;\r\n    },\r\n\r\n    forEachSelectableRow: function(callback) {\r\n        this.forEachRow((item, i, parent) => {\r\n            if (this.isInvisible(item)) {\r\n                return;\r\n            }\r\n            if (this.isRowSelectable(item)) {\r\n                return callback(item, i, parent);\r\n            }\r\n        });\r\n        return this;\r\n    },\r\n\r\n    toRowItemList: function(rowInfo, filter) {\r\n        let rowList = Util.toList(rowInfo).map((it) => this.getRowItem(it)).filter((it) => it);\r\n        if (typeof filter === 'function') {\r\n            rowList = rowList.filter(filter);\r\n        }\r\n        return rowList;\r\n    },\r\n\r\n    toColumnItemList: function(columnInfo, filter) {\r\n        let columnList = Util.toList(columnInfo).map((it) => this.getColumnItem(it)).filter((it) => it);\r\n        if (typeof filter === 'function') {\r\n            columnList = columnList.filter(filter);\r\n        }\r\n        return columnList;\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    isRowLeaf: function(rowItem) {\r\n        if (!rowItem) {\r\n            return false;\r\n        }\r\n        if (rowItem.formatter === 'blank') {\r\n            return false;\r\n        }\r\n        if (rowItem.tg_frozen || rowItem.tg_group) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    isRowSelectable: function(rowItem) {\r\n        if (!rowItem) {\r\n            return false;\r\n        }\r\n\r\n        if (Util.hasOwn(rowItem, 'selectable')) {\r\n            return Boolean(rowItem.selectable);\r\n        }\r\n\r\n        return this.isRowLeaf(rowItem);\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    isEmptyGroup: function(item) {\r\n        if (item && item.tg_group && item.tg_subs_length === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    isInvisible: function(item) {\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        //filtered: temporary state\r\n        //invisible: from user\r\n        if (item.tg_filtered || item.tg_invisible) {\r\n            return true;\r\n        }\r\n        if (this.isInvisible(item.tg_parent)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    isSortable: function(item) {\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        if (!Util.hasOwn(item, 'sortable')) {\r\n            return true;\r\n        }\r\n        return Boolean(item.sortable);\r\n    },\r\n\r\n    isCollapsedChanged: function(item, collapsed) {\r\n        const prev = Boolean(item.collapsed);\r\n        if (prev === collapsed) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    isSelectedChanged: function(item, selected) {\r\n        const prev = Boolean(item.selected);\r\n        if (prev === selected) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n};\r\n\r\n","import CONST from '../core/const.js';\r\nimport Util from '../core/util.js';\r\n\r\nconst CssRules = {\r\n\r\n    //grid css rules\r\n    updateCssRules: function() {\r\n\r\n        if (!this.cssRulesInvalid) {\r\n            return;\r\n        }\r\n        this.cssRulesInvalid = false;\r\n\r\n        this.initCssRules();\r\n\r\n        this.updateColumnsCssRules();\r\n        this.updateHeadersCssRules();\r\n\r\n        this.updateStyleElement();\r\n\r\n    },\r\n\r\n    initCssRules: function() {\r\n\r\n        this.cssList = {};\r\n        //cache for display none, calculate column height\r\n        this.cssDisplayCache = {};\r\n\r\n        //init row height\r\n        const h = this.getRowHeight();\r\n        const rule = this.createCssRule('.tg-row');\r\n        rule.height = `${h}px`;\r\n        rule['line-height'] = `${h}px`;\r\n\r\n    },\r\n\r\n    //remove display = none\r\n    resetCssDisplay: function(v) {\r\n        if (!this.cssDisplayCache) {\r\n            return;\r\n        }\r\n        v = v || '';\r\n        for (const k in this.cssDisplayCache) {\r\n            if (Util.hasOwn(this.cssDisplayCache, k)) {\r\n                const rule = this.cssDisplayCache[k];\r\n                rule.style.display = v;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    //==========================================================================================\r\n\r\n    updateColumnsCssRules: function() {\r\n        const columns = this.viewColumns;\r\n        const fc = this.frozenInfo.column;\r\n        //console.log(fc);\r\n        const groups = {};\r\n        let left = 0;\r\n        for (let i = 0, l = columns.length; i < l; i++) {\r\n            const columnItem = columns[i];\r\n            const width = this.getColumnCssWidth(columnItem);\r\n            this.updateCssRuleItem(columnItem.tg_view_index, left, width);\r\n            this.updateParentCssRules(columnItem, left, groups);\r\n            if (i === fc) {\r\n                left = 0;\r\n            } else {\r\n                left += width;\r\n            }\r\n        }\r\n    },\r\n\r\n    updateParentCssRules: function(columnItem, left, groups) {\r\n        const parent = columnItem.tg_parent;\r\n        if (!parent) {\r\n            return;\r\n        }\r\n\r\n        const index = parent.tg_view_index;\r\n        if (groups[index]) {\r\n            return;\r\n        }\r\n\r\n        this.updateCssRuleItem(index, left, parent.tg_width);\r\n        groups[index] = parent;\r\n\r\n        //parent's parent\r\n        this.updateParentCssRules(parent, left, groups);\r\n\r\n    },\r\n\r\n    //==========================================================================================\r\n\r\n    updateHeadersCssRules: function() {\r\n\r\n        let bottom = 0;\r\n        const maxLevel = this.columnsInfo.maxLevel;\r\n        for (let i = maxLevel; i >= 0; i--) {\r\n            const h = this.headerLayerHeight[i];\r\n            const rule = this.createCssRule(`.tg-h-${i}`);\r\n            rule.bottom = `${bottom}px`;\r\n            rule.height = `${h}px`;\r\n            bottom += h;\r\n        }\r\n\r\n        const combinations = this.getLayerCombinations(maxLevel);\r\n        combinations.forEach((k) => {\r\n            const rule = this.createCssRule(`.tg-h-${k}`);\r\n            let h = 0;\r\n            k.split('').forEach((i) => {\r\n                h += this.headerLayerHeight[i] || 0;\r\n            });\r\n            rule.height = `${h}px`;\r\n            //console.log(\"combination: \" + k + \" \" + h + \"px\");\r\n        });\r\n\r\n    },\r\n\r\n    getLayerCombinations: function(maxIndex) {\r\n        //for test\r\n        //maxIndex = 1;\r\n\r\n        let seeds = '';\r\n        while (maxIndex >= 0) {\r\n            seeds += maxIndex;\r\n            maxIndex--;\r\n        }\r\n        //console.log(seeds);\r\n        if (seeds.length < 2) {\r\n            return [];\r\n        }\r\n        const list = [];\r\n        const combine = function(ls, start) {\r\n            const len = ls.length;\r\n            let end = start + 2;\r\n            while (end <= len) {\r\n                const str = ls.substring(start, end);\r\n                list.push(str);\r\n                end++;\r\n            }\r\n            if (start < len - 2) {\r\n                combine(ls, start + 1);\r\n            }\r\n        };\r\n        combine(seeds, 0);\r\n        return list;\r\n    },\r\n\r\n    //==========================================================================================\r\n\r\n    updateCssRuleItem: function(i, left, width) {\r\n        const rule = this.createCssRule(`.tg-c-${i}`);\r\n        rule.left = `${left}px`;\r\n        rule.width = `${width}px`;\r\n        if (width === 0) {\r\n            rule.display = 'none';\r\n        } else {\r\n            rule.display = '';\r\n        }\r\n    },\r\n\r\n    createCssRule: function(className) {\r\n        const ns = `.${CONST.NS}.${this.id} `;\r\n        const selector = ns + className;\r\n        const rule = {};\r\n        this.cssList[selector] = rule;\r\n        return rule;\r\n    },\r\n\r\n    getColumnCssWidth: function(columnItem) {\r\n        let width = columnItem.tg_width;\r\n        if (this.isInvisible(columnItem) || width <= 0) {\r\n            width = 0;\r\n        }\r\n        return width;\r\n    },\r\n\r\n    //==========================================================================================\r\n\r\n    updateStyleElement: function() {\r\n\r\n        //create style element\r\n        if (!this.styleElement) {\r\n            this.createStyleElement();\r\n        }\r\n\r\n        if (this.checkNewCssName()) {\r\n            this.initStyleElement();\r\n        }\r\n\r\n        const cssRules = this.getStyleSheetCssRules();\r\n        if (!cssRules) {\r\n            return;\r\n        }\r\n        for (let i = 0, l = cssRules.length; i < l; i++) {\r\n            this.updateRuleProperties(cssRules[i]);\r\n        }\r\n    },\r\n\r\n    createStyleElement: function() {\r\n        //append to head is because sometimes container could be appended to another element again\r\n        //like golden layout full size window, and style will be lose\r\n        const root = this.shadowRoot || document.head;\r\n\r\n        this.styleElement = document.createElement('style');\r\n        this.styleElement.setAttribute('context', this.id);\r\n        root.appendChild(this.styleElement);\r\n    },\r\n\r\n    checkNewCssName: function() {\r\n        if (!this.previousCssList) {\r\n            return true;\r\n        }\r\n        for (const name in this.cssList) {\r\n            if (Util.hasOwn(this.cssList, name)) {\r\n                if (!this.previousCssList[name]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    initStyleElement: function() {\r\n        const rules = [];\r\n        Object.keys(this.cssList).forEach(function(k) {\r\n            rules.push(`${k}{}`);\r\n        });\r\n        const str = rules.join('\\n');\r\n        this.styleElement.innerHTML = str;\r\n        this.previousCssList = this.cssList;\r\n    },\r\n\r\n    getStyleSheetCssRules: function() {\r\n        const sheet = this.styleElement.sheet;\r\n        if (!sheet) {\r\n            return;\r\n        }\r\n        return sheet.cssRules;\r\n    },\r\n\r\n    updateRuleProperties: function(rule) {\r\n        const selector = `${rule.selectorText}`;\r\n        const css = this.cssList[selector];\r\n        if (!css) {\r\n            return;\r\n        }\r\n        for (const k in css) {\r\n            if (Util.hasOwn(css, k)) {\r\n                const v = css[k];\r\n                rule.style[k] = v;\r\n                if (k === 'display' && v === 'none') {\r\n                    this.cssDisplayCache[selector] = rule;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    //======================================================================================================\r\n    //for destroy and init option change\r\n    removeCssRules: function() {\r\n        this.previousCssList = null;\r\n        this.cssList = null;\r\n        this.cssDisplayCache = null;\r\n        if (this.styleElement) {\r\n            this.removeNode(this.styleElement);\r\n            this.styleElement = null;\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport default CssRules;\r\n","import E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //for reset all\r\n    reset: function() {\r\n\r\n        this.firstUpdated = false;\r\n        this.headerCreated = false;\r\n\r\n        Util.cancelAsync(this);\r\n        Util.removePreProps(this, 'previous');\r\n\r\n        this.removeSortColumn();\r\n\r\n        //init\r\n        this.columns = null;\r\n        this.columnsInfo = null;\r\n\r\n        this.viewColumns = null;\r\n        this.viewAllColumns = null;\r\n        this.viewGroupColumns = null;\r\n\r\n        this.rows = null;\r\n        this.rowsInfo = null;\r\n\r\n        this.viewRows = null;\r\n\r\n        this.headerRowItem = null;\r\n        this.protectedItem = null;\r\n\r\n        //column cache\r\n        this.selectColumn = null;\r\n        this.rowDragColumn = null;\r\n        this.rowNumberColumn = null;\r\n        this.blankColumn = null;\r\n\r\n        this.sortColumn = null;\r\n\r\n        this.nullFormatter = null;\r\n\r\n        this.frozenRowsHeight = 0;\r\n        this.totalRowsHeight = 0;\r\n        this.scrollRowsHeight = 0;\r\n\r\n        //to rebuild css rules\r\n        this.bodyWidthL = 0;\r\n        this.bodyWidthR = 0;\r\n\r\n        //to clean size cache\r\n        this.bodyHeightT = 0;\r\n        this.bodyHeightB = 0;\r\n\r\n        this.paneWidthL = 0;\r\n        this.paneWidthR = 0;\r\n        this.paneHeightT = 0;\r\n        this.paneHeightB = 0;\r\n\r\n        //reset scroll state\r\n        this.scrollLeft = 0;\r\n        this.scrollTop = 0;\r\n        this.scrollTopOffset = 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    destroy: function() {\r\n\r\n        // do not destroy twice\r\n        if (this.destroyed) {\r\n            return;\r\n        }\r\n        this.destroyed = true;\r\n\r\n        //before destroy\r\n        this.trigger(E.onDestroy);\r\n\r\n        this.reset();\r\n\r\n        //resize events\r\n        this.unbindWindowResize();\r\n        this.unbindContainerResize();\r\n\r\n        //inner events\r\n        this.unbindEvents();\r\n        //outer events\r\n        this.unbind();\r\n        //remove all\r\n        this.delEventListeners();\r\n\r\n        //style elements\r\n        this.removeCssRules();\r\n\r\n        this.removeScrollPane();\r\n\r\n        //remove inner container\r\n        this.container = null;\r\n        if (this.$container) {\r\n            this.$container.remove();\r\n            this.$container = null;\r\n        }\r\n\r\n\r\n        //just empty outer holder, but do NOT remove it\r\n        this.holder = null;\r\n        if (this.$holder) {\r\n            this.$holder.empty();\r\n            this.$holder = null;\r\n        }\r\n\r\n        //global cache\r\n        this.removeCache();\r\n\r\n        // starts with $\r\n        Util.removePreProps(this, '$');\r\n\r\n        //require for GC after destroy\r\n        this.option = null;\r\n        this.formatters = null;\r\n        this.data = null;\r\n\r\n    }\r\n\r\n};\r\n","import Util from './util.js';\r\nimport EventBase from './event-base.js';\r\n\r\nconst E = {\r\n    DRAG_START: 'drag_start',\r\n    DRAG_MOVE: 'drag_move',\r\n    DRAG_END: 'drag_end'\r\n};\r\n\r\nexport default EventBase.extend({\r\n\r\n    createOption: function(data) {\r\n        return {\r\n\r\n            type: 'mouse',\r\n\r\n            startX: 0,\r\n            startY: 0,\r\n\r\n            previousX: 0,\r\n            previousY: 0,\r\n\r\n            currentX: 0,\r\n            currentY: 0,\r\n\r\n            moveX: 0,\r\n            moveY: 0,\r\n\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            changed: false,\r\n\r\n            ... data\r\n        };\r\n    },\r\n\r\n    //============================================================================\r\n\r\n    start: function(e, data) {\r\n        if (!e) {\r\n            return;\r\n        }\r\n        this.unbindEvents();\r\n        this.bindEvents();\r\n        this.option = this.createOption(data);\r\n        this.startHandler(e);\r\n    },\r\n\r\n    bindEvents: function() {\r\n        this.windowEvents = {\r\n            mousemove: {\r\n                handler: (e) => {\r\n                    this.iframeHandler(e);\r\n                    this.mouseMoveHandler(e);\r\n                },\r\n                options: true\r\n            },\r\n            mouseup: {\r\n                handler: (e) => {\r\n                    this.mouseUpHandler(e);\r\n                },\r\n                options: {\r\n                    once: true\r\n                }\r\n            }\r\n        };\r\n        Util.bindEvents(this.windowEvents, window);\r\n    },\r\n\r\n    unbindEvents: function() {\r\n        Util.unbindEvents(this.windowEvents);\r\n        this.windowEvents = null;\r\n        if (this.previousIframe) {\r\n            this.previousIframe.classList.remove('tg-pointer-events-none');\r\n            this.previousIframe = null;\r\n        }\r\n    },\r\n\r\n    iframeHandler: function(e) {\r\n        const target = e.target;\r\n        if (target.nodeName !== 'IFRAME') {\r\n            return;\r\n        }\r\n        if (target === this.previousIframe) {\r\n            return;\r\n        }\r\n        if (this.previousIframe) {\r\n            this.previousIframe.classList.remove('tg-pointer-events-none');\r\n        }\r\n        target.classList.add('tg-pointer-events-none');\r\n        this.previousIframe = target;\r\n    },\r\n\r\n    //============================================================================\r\n\r\n    startHandler: function(e) {\r\n        const o = this.option;\r\n        //start position\r\n        o.e = e;\r\n        o.startX = e.pageX;\r\n        o.startY = e.pageY;\r\n        o.currentX = o.startX;\r\n        o.currentY = o.startY;\r\n        this.hasMoved = false;\r\n    },\r\n\r\n    mouseMoveHandler: function(e) {\r\n        Util.preventDefault(e);\r\n\r\n        const o = this.option;\r\n        o.e = e;\r\n        //keep previous position\r\n        o.previousX = o.currentX;\r\n        o.previousY = o.currentY;\r\n        //current position\r\n        o.currentX = e.pageX;\r\n        o.currentY = e.pageY;\r\n        //current move offset from previous\r\n        o.moveX = o.currentX - o.previousX;\r\n        o.moveY = o.currentY - o.previousY;\r\n        //current offset from start\r\n        o.offsetX = o.currentX - o.startX;\r\n        o.offsetY = o.currentY - o.startY;\r\n        //position nothing change\r\n        o.changed = !(o.offsetX === 0 && o.offsetY === 0);\r\n\r\n        //moved but no changed, because position back to start point\r\n        if (this.hasMoved) {\r\n            this.trigger(E.DRAG_MOVE, o);\r\n            return;\r\n        }\r\n\r\n        this.hasMoved = true;\r\n        this.trigger(E.DRAG_START, o);\r\n    },\r\n\r\n    mouseUpHandler: function(e) {\r\n        this.unbindEvents();\r\n        const o = this.option;\r\n        if (!this.hasMoved) {\r\n            return;\r\n        }\r\n        o.e = e;\r\n        Util.preventDefault(e);\r\n        this.trigger(E.DRAG_END, o);\r\n    },\r\n\r\n    destroy: function() {\r\n        this.unbindEvents();\r\n        this.unbind();\r\n    }\r\n\r\n}, E);\r\n","export default {\r\n    Linear: {\r\n        None: function(k) {\r\n            return k;\r\n        }\r\n    }\r\n\r\n    /*\r\n    ,\r\n    Quadratic: {\r\n        In: function(k) {\r\n            return k * k;\r\n        },\r\n        Out: function(k) {\r\n            return k * (2 - k);\r\n        },\r\n        InOut: function(k) {\r\n            if ((k *= 2) < 1) {\r\n                return 0.5 * k * k;\r\n            }\r\n            return -0.5 * (--k * (k - 2) - 1);\r\n        }\r\n    },\r\n\r\n    Cubic: {\r\n        In: function(k) {\r\n            return k * k * k;\r\n        },\r\n        Out: function(k) {\r\n            return --k * k * k + 1;\r\n        },\r\n        InOut: function(k) {\r\n            if ((k *= 2) < 1) {\r\n                return 0.5 * k * k * k;\r\n            }\r\n            return 0.5 * ((k -= 2) * k * k + 2);\r\n        }\r\n    },\r\n\r\n    Quartic: {\r\n        In: function(k) {\r\n            return k * k * k * k;\r\n        },\r\n        Out: function(k) {\r\n            return 1 - (--k * k * k * k);\r\n        },\r\n        InOut: function(k) {\r\n            if ((k *= 2) < 1) {\r\n                return 0.5 * k * k * k * k;\r\n            }\r\n            return -0.5 * ((k -= 2) * k * k * k - 2);\r\n        }\r\n    },\r\n\r\n    Quintic: {\r\n        In: function(k) {\r\n            return k * k * k * k * k;\r\n        },\r\n        Out: function(k) {\r\n            return --k * k * k * k * k + 1;\r\n        },\r\n        InOut: function(k) {\r\n            if ((k *= 2) < 1) {\r\n                return 0.5 * k * k * k * k * k;\r\n            }\r\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n        }\r\n    },\r\n\r\n    Circular: {\r\n        In: function(k) {\r\n            return 1 - Math.sqrt(1 - k * k);\r\n        },\r\n        Out: function(k) {\r\n            return Math.sqrt(1 - (--k * k));\r\n        },\r\n        InOut: function(k) {\r\n            if ((k *= 2) < 1) {\r\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n            }\r\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n        }\r\n    }\r\n\r\n    */\r\n};\r\n\r\n","import OptionBase from './option-base.js';\r\nimport Util from './util.js';\r\nimport Easing from './easing.js';\r\n\r\nconst E = {\r\n    MOTION_START: 'motion_start',\r\n    MOTION_MOVE: 'motion_move',\r\n    MOTION_END: 'motion_end',\r\n    MOTION_STOP: 'motion_stop'\r\n};\r\n\r\n\r\nexport default OptionBase.extend({\r\n\r\n    //if stopped then stop everything\r\n    stopped: true,\r\n\r\n    constructorOption: null,\r\n\r\n    constructor: function(option) {\r\n        this.constructorOption = option;\r\n    },\r\n\r\n    getDefaultOption: function() {\r\n        return Util.merge({\r\n            //default is Easing.linear\r\n            easing: null,\r\n\r\n            //total time\r\n            duration: 100,\r\n\r\n            //from data\r\n            from: 0,\r\n            //till data\r\n            till: 1,\r\n            //current data(private)\r\n            data: 0\r\n        }, this.constructorOption);\r\n    },\r\n\r\n    stop: function() {\r\n        if (this.stopped) {\r\n            return this;\r\n        }\r\n        //stop everything now\r\n        this.stopped = true;\r\n        this.cancelAnimationFrame();\r\n        this.trigger(E.MOTION_STOP, this.data);\r\n        return this;\r\n    },\r\n\r\n    start: function() {\r\n        this.stop();\r\n        this.stopped = false;\r\n        this.setOption.apply(this, arguments);\r\n        //ready\r\n        this.initCalculation();\r\n        //first time move, start potion\r\n        this.data = this.calculateHandler(0);\r\n        this.trigger(E.MOTION_START, this.data);\r\n        //if call stop in start callback\r\n        if (this.stopped) {\r\n            return this;\r\n        }\r\n        //init start time\r\n        this.time = Date.now();\r\n        this.requestAnimationFrame(this.moveHandler);\r\n        return this;\r\n    },\r\n\r\n    requestAnimationFrame: function(callback) {\r\n        this.requestId = window.requestAnimationFrame(() => {\r\n            callback.apply(this);\r\n        });\r\n    },\r\n\r\n    cancelAnimationFrame: function() {\r\n        window.cancelAnimationFrame(this.requestId);\r\n    },\r\n\r\n    getEasing: function(easing) {\r\n        if (typeof easing !== 'function') {\r\n            easing = Util.getValue(Easing, easing, Easing.Linear.None);\r\n        }\r\n        return easing;\r\n    },\r\n\r\n    moveHandler: function() {\r\n        //move\r\n        const now = Date.now();\r\n        const t = now - this.time;\r\n        const d = this.duration;\r\n        if (t < d) {\r\n            const k = t / d;\r\n            this.data = this.calculateHandler(k);\r\n            this.trigger(E.MOTION_MOVE, this.data);\r\n            this.requestAnimationFrame(this.moveHandler);\r\n            return;\r\n        }\r\n        //====================================\r\n        //end\r\n        this.cancelAnimationFrame();\r\n        //require last time move\r\n        this.data = this.calculateHandler(1);\r\n        this.trigger(E.MOTION_MOVE, this.data);\r\n        //end\r\n        this.trigger(E.MOTION_END, this.data);\r\n    },\r\n\r\n    //================================================================================\r\n\r\n    initCalculation: function() {\r\n\r\n        const o = this.option;\r\n        this.duration = Util.toNum(o.duration, true) || 100;\r\n        this.easing = this.getEasing(o.easing);\r\n        //console.log(this.easing);\r\n\r\n        //for object keys cache\r\n        this.calculateKeys = null;\r\n\r\n        const from = o.from;\r\n        const till = o.till;\r\n\r\n        if (Util.isNum(from) && Util.isNum(till)) {\r\n            this.calculateType = this.calculateNumber;\r\n            return;\r\n        }\r\n\r\n        if (from && typeof from === 'object' && till && typeof till === 'object') {\r\n            this.calculateType = this.calculateObject;\r\n            return;\r\n        }\r\n\r\n        this.calculateType = this.calculateNone;\r\n    },\r\n\r\n    calculateHandler: function(k) {\r\n        const p = this.easing(k);\r\n        const o = this.option;\r\n        return this.calculateType(p, o.from, o.till);\r\n    },\r\n\r\n    calculateObject: function(p, from, till) {\r\n        const d = {};\r\n        if (this.calculateKeys) {\r\n            this.calculateKeys.forEach((k) => {\r\n                d[k] = this.calculateNumber(p, from[k], till[k]);\r\n            });\r\n            return d;\r\n        }\r\n        //first time cache calculate keys\r\n        this.calculateKeys = [];\r\n        Object.keys(from).forEach((k) => {\r\n            const fv = from[k];\r\n            const tv = till[k];\r\n            //first time number checking\r\n            if (Util.isNum(fv) && Util.isNum(tv)) {\r\n                d[k] = this.calculateNumber(p, fv, tv);\r\n                this.calculateKeys.push(k);\r\n            }\r\n        });\r\n        return d;\r\n    },\r\n\r\n    calculateNumber: function(p, from, till) {\r\n        return (till - from) * p + from;\r\n    },\r\n\r\n    calculateNone: function(p, from, till) {\r\n        return from;\r\n    },\r\n\r\n    //================================================================================\r\n\r\n    destroy: function() {\r\n        this.stop();\r\n        this.unbind();\r\n    }\r\n\r\n}, E);\r\n\r\n","import Util from './util.js';\r\nimport CONST from './const.js';\r\nimport Motion from './motion.js';\r\nimport EventBase from './event-base.js';\r\n\r\nconst E = {\r\n    TOUCH_START: 'touch_start',\r\n    TOUCH_MOVE: 'touch_move',\r\n    TOUCH_END: 'touch_end',\r\n    TOUCH_INERTIA: 'touch_inertia'\r\n};\r\n\r\nexport default EventBase.extend({\r\n\r\n    createOption: function(data) {\r\n        return {\r\n\r\n            type: 'touch',\r\n\r\n            startX: 0,\r\n            startY: 0,\r\n\r\n            previousX: 0,\r\n            previousY: 0,\r\n\r\n            currentX: 0,\r\n            currentY: 0,\r\n\r\n            moveX: 0,\r\n            moveY: 0,\r\n\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            changed: false,\r\n\r\n            touchLength: 0,\r\n            direction: '',\r\n\r\n            inertia: false,\r\n            inertiaTime: 200,\r\n\r\n            ... data\r\n        };\r\n    },\r\n\r\n    //============================================================================\r\n\r\n    start: function(e, data) {\r\n        if (!e) {\r\n            return;\r\n        }\r\n        this.unbindEvents();\r\n        this.bindEvents();\r\n        this.option = this.createOption(data);\r\n        this.startHandler(e);\r\n    },\r\n\r\n    bindEvents: function() {\r\n        this.touchEvents = {\r\n            touchmove: {\r\n                handler: (e) => {\r\n                    this.touchMoveHandler(e);\r\n                },\r\n                options: {\r\n                    passive: false\r\n                }\r\n            },\r\n            touchend: {\r\n                handler: (e) => {\r\n                    this.touchEndHandler(e);\r\n                },\r\n                options: {\r\n                    passive: false,\r\n                    once: true\r\n                }\r\n            },\r\n            touchcancel: {\r\n                handler: (e) => {\r\n                    this.touchCancelHandler(e);\r\n                },\r\n                options: {\r\n                    passive: false,\r\n                    once: true\r\n                }\r\n            }\r\n        };\r\n        //safari use window has issue\r\n        Util.bindEvents(this.touchEvents, document.body);\r\n    },\r\n\r\n    unbindEvents: function() {\r\n        this.motionStop();\r\n        Util.unbindEvents(this.touchEvents);\r\n        this.touchEvents = null;\r\n    },\r\n\r\n    //============================================================================\r\n\r\n    startHandler: function(e) {\r\n\r\n        this.trackingPoints = [];\r\n\r\n        const touches = e.touches;\r\n        const touchItem = touches[0];\r\n        if (!touchItem) {\r\n            //console.log('Not found touch item');\r\n            return;\r\n        }\r\n\r\n        const o = this.option;\r\n        o.e = e;\r\n        //start position\r\n        o.startX = touchItem.clientX;\r\n        o.startY = touchItem.clientY;\r\n        o.currentX = o.startX;\r\n        o.currentY = o.startY;\r\n        o.touchLength = touches.length;\r\n\r\n        this.addTrackingPoint(o);\r\n\r\n        //console.log(E.TOUCH_START);\r\n        this.trigger(E.TOUCH_START, o);\r\n    },\r\n\r\n    touchMoveHandler: function(e) {\r\n        const touches = e.touches;\r\n        const touchItem = touches[0];\r\n        if (!touchItem) {\r\n            //console.log('Not found touch item');\r\n            return;\r\n        }\r\n\r\n        const o = this.option;\r\n        o.e = e;\r\n        //keep previous position\r\n        o.previousX = o.currentX;\r\n        o.previousY = o.currentY;\r\n        //current position\r\n        o.currentX = touchItem.clientX;\r\n        o.currentY = touchItem.clientY;\r\n\r\n        //current move offset from previous\r\n        o.moveX = o.currentX - o.previousX;\r\n        o.moveY = o.currentY - o.previousY;\r\n\r\n        //current offset from start\r\n        o.offsetX = o.currentX - o.startX;\r\n        o.offsetY = o.currentY - o.startY;\r\n        o.changed = !(o.offsetX === 0 && o.offsetY === 0);\r\n\r\n        o.touchLength = touches.length;\r\n\r\n        o.direction = this.getDirection(o);\r\n        //console.log('direction', o.direction);\r\n\r\n        this.addTrackingPoint(o);\r\n\r\n        //console.log(E.TOUCH_MOVE);\r\n        this.trigger(E.TOUCH_MOVE, o);\r\n\r\n    },\r\n\r\n    touchEndHandler: function(e) {\r\n        this.unbindEvents();\r\n\r\n        const o = this.option;\r\n        o.e = e;\r\n        //console.log(E.TOUCH_END);\r\n        this.trigger(E.TOUCH_END, o);\r\n\r\n        const changedTouches = e.changedTouches;\r\n        const touchItem = changedTouches[0];\r\n        if (!touchItem) {\r\n            //console.log('Not found touch item');\r\n            return;\r\n        }\r\n\r\n        const touches = e.touches;\r\n        o.touchLength = touches.length;\r\n\r\n        //should no touches when leave, multiple and not all leave\r\n        if (o.touchLength > 0) {\r\n            return;\r\n        }\r\n\r\n        o.currentX = touchItem.clientX;\r\n        o.currentY = touchItem.clientY;\r\n\r\n        this.addTrackingPoint(o);\r\n\r\n        this.motionStart();\r\n\r\n    },\r\n\r\n    touchCancelHandler: function(e) {\r\n\r\n        console.log(e.type, e);\r\n\r\n        this.unbindEvents();\r\n        //end for cancel\r\n        this.trigger(E.TOUCH_END, this.option);\r\n    },\r\n\r\n    //============================================================================\r\n\r\n    getMotionInfo: function() {\r\n        const points = this.trackingPoints;\r\n        if (points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        this.filterTrackingPoints(points);\r\n        if (points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        const fp = points[0];\r\n        const lp = points[points.length - 1];\r\n\r\n        const offsetTime = lp.t - fp.t;\r\n        if (offsetTime <= 0) {\r\n            return;\r\n        }\r\n\r\n        //calculate inertia\r\n\r\n        let offsetX = lp.x - fp.x;\r\n        let offsetY = lp.y - fp.y;\r\n\r\n        const ax = Math.abs(offsetX);\r\n        const ay = Math.abs(offsetY);\r\n\r\n        //inertia only for one direction\r\n        if (ax > ay) {\r\n            offsetY = 0;\r\n        } else {\r\n            offsetX = 0;\r\n        }\r\n\r\n        //max offset distance\r\n        const offsetDistance = Math.max(ax, ay);\r\n\r\n        return {\r\n            offsetDistance,\r\n            offsetTime,\r\n            offsetX,\r\n            offsetY\r\n        };\r\n\r\n    },\r\n\r\n    motionStart: function() {\r\n        const o = this.option;\r\n        if (!o.inertia) {\r\n            return;\r\n        }\r\n\r\n        const motionInfo = this.getMotionInfo();\r\n        if (!motionInfo) {\r\n            return;\r\n        }\r\n\r\n        //one time avg touch distance\r\n        const baseDistance = 50;\r\n        const baseDuration = 500;\r\n        const expectDuration = baseDuration * motionInfo.offsetDistance / baseDistance;\r\n\r\n        const minDuration = 20;\r\n        const maxDuration = 2000;\r\n        const duration = Util.clamp(expectDuration, minDuration, maxDuration);\r\n\r\n        //speed, px/ms\r\n        const speedX = motionInfo.offsetX / motionInfo.offsetTime;\r\n        const speedY = motionInfo.offsetY / motionInfo.offsetTime;\r\n\r\n        //console.log('sx', sx, 'sy', sy, 'duration', duration);\r\n\r\n        //fps 60/s = 1000/60 = 16.7ms / frame\r\n        //fps 50/s = 20ms / frame\r\n        const s = 20;\r\n\r\n        //one frame offset\r\n        const from = {\r\n            x: speedX * s,\r\n            y: speedY * s\r\n        };\r\n        const till = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n\r\n        this.motion = new Motion();\r\n        this.motion.bind(Motion.MOTION_MOVE, (e, d) => {\r\n            o.touchInertiaX = d.x;\r\n            o.touchInertiaY = d.y;\r\n            this.trigger(E.TOUCH_INERTIA, o);\r\n        });\r\n        this.motion.start({\r\n            duration: duration,\r\n            from: from,\r\n            till: till\r\n        });\r\n    },\r\n\r\n    motionStop: function() {\r\n        if (this.motion) {\r\n            this.motion.destroy();\r\n            this.motion = null;\r\n        }\r\n    },\r\n\r\n    //============================================================================\r\n\r\n    getDirection: function(o) {\r\n        const ox = o.offsetX;\r\n        const oy = o.offsetY;\r\n\r\n        const ax = Math.abs(ox);\r\n        const ay = Math.abs(oy);\r\n\r\n        const minV = Math.min(ax, ay);\r\n        const maxV = Math.max(ax, ay);\r\n\r\n        //the direction slope\r\n        const getSlope = function() {\r\n            if (maxV < 5) {\r\n                return 0.5;\r\n            }\r\n            if (maxV < 10) {\r\n                return 0.4;\r\n            }\r\n            if (maxV < 20) {\r\n                return 0.3;\r\n            }\r\n            return 0.2;\r\n        };\r\n        const slope = getSlope();\r\n        //console.log(slope);\r\n\r\n        const s = minV / maxV;\r\n        //console.log(s);\r\n\r\n        //mixing direction\r\n        if (s > slope) {\r\n            return '';\r\n        }\r\n\r\n        //single direction\r\n        if (ax < ay) {\r\n            if (oy > 0) {\r\n                return CONST.UP;\r\n            }\r\n            if (oy < 0) {\r\n                return CONST.DOWN;\r\n            }\r\n        }\r\n\r\n        if (ax > ay) {\r\n            if (ox > 0) {\r\n                return CONST.LEFT;\r\n            }\r\n            if (ox < 0) {\r\n                return CONST.RIGHT;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    filterTrackingPoints: function(points) {\r\n        points.reverse();\r\n        const len = points.length;\r\n        const t = Date.now();\r\n        const inertiaTime = this.option.inertiaTime;\r\n        for (let i = 0; i < len; i++) {\r\n            //remove time > inertiaTime\r\n            if (t - points[i].t > inertiaTime) {\r\n                points.length = i;\r\n                break;\r\n            }\r\n        }\r\n        points.reverse();\r\n        //console.log(points.length, points.map((it) => `${it.t - t}`));\r\n    },\r\n\r\n    addTrackingPoint: function(o) {\r\n\r\n        if (!o.inertia) {\r\n            return;\r\n        }\r\n\r\n        const x = o.currentX;\r\n        const y = o.currentY;\r\n        const t = Date.now();\r\n\r\n        const points = this.trackingPoints;\r\n\r\n        points.push({\r\n            x, y, t\r\n        });\r\n\r\n        //cache 100 points\r\n        if (points.length > 100) {\r\n            this.filterTrackingPoints(points);\r\n        }\r\n\r\n    },\r\n\r\n    //============================================================================\r\n\r\n    destroy: function() {\r\n        this.unbindEvents();\r\n        this.unbind();\r\n    }\r\n\r\n}, E);\r\n\r\n","import $ from '../core/query.js';\r\nimport Util from '../core/util.js';\r\nimport CONST from '../core/const.js';\r\nimport E, { Types } from '../core/event-types.js';\r\nimport Drag from '../core/drag.js';\r\nimport Touch from '../core/touch.js';\r\n\r\nexport default {\r\n\r\n    getAllEvents: function() {\r\n        return [].concat(Types);\r\n    },\r\n\r\n    bindEvents: function() {\r\n\r\n        this.unbindEvents();\r\n\r\n        this.containerEvents = {\r\n\r\n            mousedown: {\r\n                handler: (e) => {\r\n                    this.containerMouseDownHandler(e);\r\n                },\r\n                options: true\r\n            },\r\n\r\n            mousemove: {\r\n                handler: (e) => {\r\n                    this.containerMouseMoveHandler(e);\r\n                },\r\n                options: true\r\n            },\r\n            mouseover: {\r\n                handler: (e) => {\r\n                    this.containerMouseOverOutHandler(e, true);\r\n                },\r\n                options: true\r\n            },\r\n            mouseout: {\r\n                handler: (e) => {\r\n                    this.containerMouseOverOutHandler(e, false);\r\n                },\r\n                options: true\r\n            },\r\n            mouseenter: {\r\n                handler: (e) => {\r\n                    this.containerMouseEnterLeaveHandler(e, true);\r\n                },\r\n                options: true\r\n            },\r\n            mouseleave: {\r\n                handler: (e) => {\r\n                    this.containerMouseEnterLeaveHandler(e, false);\r\n                },\r\n                options: true\r\n            },\r\n\r\n            touchstart: {\r\n                handler: (e) => {\r\n                    this.containerTouchStartHandler(e);\r\n                },\r\n                options: {\r\n                    passive: false\r\n                }\r\n            },\r\n\r\n            wheel: {\r\n                handler: (e) => {\r\n                    this.containerWheelHandler(e);\r\n                },\r\n                options: {\r\n                    passive: false\r\n                }\r\n            },\r\n\r\n            click: {\r\n                handler: (e) => {\r\n                    this.containerClickHandler(e);\r\n                },\r\n                options: true\r\n            },\r\n\r\n            dblclick: {\r\n                handler: (e) => {\r\n                    this.containerDblClickHandler(e);\r\n                },\r\n                options: true\r\n            },\r\n\r\n            contextmenu: {\r\n                handler: (e) => {\r\n                    this.containerContextMenuHandler(e);\r\n                },\r\n                options: true\r\n            },\r\n\r\n            selectstart: {\r\n                handler: (e) => {\r\n                    this.containerSelectStartHandler(e);\r\n                },\r\n                options: true\r\n            },\r\n\r\n            keydown: {\r\n                handler: (e) => {\r\n                    this.containerKeyDownHandler(e);\r\n                },\r\n                options: true\r\n            }\r\n\r\n        };\r\n\r\n        Util.bindEvents(this.containerEvents, this.container);\r\n\r\n        //==============================================================\r\n\r\n        //column drag events\r\n        this.columnWidthDrag = new Drag();\r\n        this.columnWidthDrag.bind(Drag.DRAG_START, (e, d) => {\r\n            this.columnWidthDragStartHandler(e, d);\r\n        }).bind(Drag.DRAG_MOVE, (e, d) => {\r\n            this.columnWidthDragMoveHandler(e, d);\r\n        }).bind(Drag.DRAG_END, (e, d) => {\r\n            this.columnWidthDragEndHandler(e, d);\r\n        });\r\n\r\n        //column width touch\r\n        this.columnWidthTouch = new Touch();\r\n        this.columnWidthTouch.bind(Touch.TOUCH_START, (e, d) => {\r\n            this.columnWidthTouchStartHandler(e, d);\r\n        }).bind(Touch.TOUCH_MOVE, (e, d) => {\r\n            this.columnWidthTouchMoveHandler(e, d);\r\n        }).bind(Touch.TOUCH_END, (e, d) => {\r\n            this.columnWidthTouchEndHandler(e, d);\r\n        });\r\n\r\n        //row drag events\r\n        this.rowDrag = new Drag();\r\n        this.rowDrag.bind(Drag.DRAG_START, (e, d) => {\r\n            this.rowDragStartHandler(e, d);\r\n        }).bind(Drag.DRAG_MOVE, (e, d) => {\r\n            this.rowDragMoveHandler(e, d);\r\n        }).bind(Drag.DRAG_END, (e, d) => {\r\n            this.rowDragEndHandler(e, d);\r\n        });\r\n\r\n        this.rowTouch = new Touch();\r\n        this.rowTouch.bind(Touch.TOUCH_START, (e, d) => {\r\n            this.rowDragStartHandler(e, d);\r\n        }).bind(Touch.TOUCH_MOVE, (e, d) => {\r\n            this.rowDragMoveHandler(e, d);\r\n        }).bind(Touch.TOUCH_END, (e, d) => {\r\n            this.rowDragEndHandler(e, d);\r\n        });\r\n\r\n        //scroll touch events\r\n        this.scrollTouch = new Touch();\r\n        this.scrollTouch.bind(Touch.TOUCH_START, (e, d) => {\r\n            this.scrollTouchStartHandler(e, d);\r\n        }).bind(Touch.TOUCH_MOVE, (e, d) => {\r\n            this.scrollTouchMoveHandler(e, d);\r\n        }).bind(Touch.TOUCH_END, (e, d) => {\r\n            this.scrollTouchEndHandler(e, d);\r\n        }).bind(Touch.TOUCH_INERTIA, (e, d) => {\r\n            this.scrollTouchInertiaHandler(e, d);\r\n        });\r\n\r\n    },\r\n\r\n    //=============================================================================================\r\n    //event api\r\n\r\n    //check native event\r\n    isDefaultPrevented: function(e) {\r\n        if (e) {\r\n            return e.defaultPrevented;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    getEventClosestNode: function(target, className) {\r\n        if (!target || target === this.container) {\r\n            return;\r\n        }\r\n        if (target.classList.contains(className)) {\r\n            return target;\r\n        }\r\n        return this.getEventClosestNode(target.parentNode, className);\r\n    },\r\n\r\n    getEventClosestData: function(target) {\r\n        if (!target || target === this.container) {\r\n            return;\r\n        }\r\n        const d = this.getNodeDataCache(target);\r\n        if (!d) {\r\n            return this.getEventClosestData(target.parentNode);\r\n        }\r\n        return d;\r\n    },\r\n\r\n    getEventData: function(e) {\r\n        const d = this.getEventClosestData(e.target);\r\n        if (d) {\r\n            d.e = e;\r\n            return d;\r\n        }\r\n    },\r\n\r\n    getWheelDelta: function(e, lineHeight, pageHeight) {\r\n\r\n        //New wheel delta (wheel event)\r\n        let deltaX = e.deltaX;\r\n        let deltaY = e.deltaY;\r\n\r\n\r\n        //wheelDeltaX/wheelDeltaY is old property\r\n        if (!Util.isNum(deltaX)) {\r\n            deltaX = Util.toNum(e.wheelDeltaX);\r\n        }\r\n\r\n        if (!Util.isNum(deltaY)) {\r\n            deltaY = Util.toNum(e.wheelDeltaY || e.wheelDelta);\r\n        }\r\n\r\n        //deltaMode fixing to px\r\n        // 0 is by pixel, nothing to do\r\n        // 1 is by line\r\n        // 2 is by page\r\n        if (e.deltaMode === 1) {\r\n            deltaY *= lineHeight;\r\n            deltaX *= lineHeight;\r\n        } else if (e.deltaMode === 2) {\r\n            deltaY *= pageHeight;\r\n            deltaX *= pageHeight;\r\n        }\r\n\r\n        return {\r\n            deltaX: deltaX,\r\n            deltaY: deltaY\r\n        };\r\n    },\r\n\r\n    stabilizeTouchX: function(d) {\r\n        const direction = d.direction;\r\n        if (!this.hasVScroll && this.hasHScroll) {\r\n            if ([CONST.UP, CONST.DOWN].includes(direction)) {\r\n                return true;\r\n            }\r\n        }\r\n        if (this.scrollTouchTop === 0 && direction === CONST.UP) {\r\n            return true;\r\n        }\r\n        if (this.scrollTouchTop === this.scrollMaxTouchTop && direction === CONST.DOWN) {\r\n            return true;\r\n        }\r\n\r\n    },\r\n\r\n    stabilizeTouchY: function(d) {\r\n        const direction = d.direction;\r\n        if (this.hasVScroll && !this.hasHScroll) {\r\n            if ([CONST.LEFT, CONST.RIGHT].includes(direction)) {\r\n                return true;\r\n            }\r\n        }\r\n        if (this.scrollTouchLeft === 0 && direction === CONST.LEFT) {\r\n            return true;\r\n        }\r\n        if (this.scrollTouchLeft === this.scrollMaxTouchLeft && direction === CONST.RIGHT) {\r\n            return true;\r\n        }\r\n    },\r\n\r\n    //======================================================================================\r\n\r\n    columnResizingMouseDownHandler: function(e) {\r\n        const d = this.getEventData(e);\r\n        if (!d) {\r\n            return;\r\n        }\r\n        this.columnWidthDrag.start(e, {\r\n            columnItem: d.columnItem\r\n        });\r\n    },\r\n\r\n    columnResizingTouchStartHandler: function(e) {\r\n        const d = this.getEventData(e);\r\n        if (!d) {\r\n            return;\r\n        }\r\n        this.columnWidthTouch.start(e, {\r\n            columnItem: d.columnItem\r\n        });\r\n    },\r\n\r\n    columnResizingMouseEnterLeaveHandler: function(e, enter) {\r\n        const d = this.getEventData(e);\r\n        if (!d) {\r\n            return;\r\n        }\r\n        if (enter) {\r\n            this.showColumnLine(d.columnItem);\r\n        } else {\r\n            this.hideColumnLine();\r\n        }\r\n    },\r\n\r\n    rowDragMouseDownHandler: function(e) {\r\n        const d = this.getEventData(e);\r\n        if (!d) {\r\n            return;\r\n        }\r\n        this.rowDrag.start(e, {\r\n            rowItem: d.rowItem\r\n        });\r\n    },\r\n\r\n    rowDragTouchStartHandler: function(e) {\r\n        const d = this.getEventData(e);\r\n\r\n        //required touch row\r\n        if (!d) {\r\n            return;\r\n        }\r\n\r\n        this.protectedItem = d;\r\n\r\n        this.rowTouch.start(e, {\r\n            rowItem: d.rowItem\r\n        });\r\n    },\r\n\r\n    //======================================================================================\r\n\r\n    scrollPaneTouchStartHandler: function(e) {\r\n        //just for touch scroll pane, separate with header touchstart\r\n        if (!this.hasHScroll && !this.hasVScroll) {\r\n            //console.log('no need touch scroll');\r\n            return;\r\n        }\r\n\r\n        //keep touched row and column for viewport\r\n        //do NOT remove touching element, otherwise will NOT dispatch touchmove and touchend events\r\n        const d = this.getEventData(e);\r\n\r\n        //not required, can touch header scroll\r\n        // if (!d) {\r\n        //     return;\r\n        // }\r\n\r\n        this.protectedItem = d;\r\n\r\n        //require in pane because body maybe not full height\r\n        this.scrollTouch.start(e, {\r\n            inertia: true\r\n        });\r\n    },\r\n\r\n    //======================================================================================\r\n\r\n    sortHandler: function(e, d) {\r\n\r\n        const columnItem = d.columnItem;\r\n        if (!this.isColumnSortable(columnItem)) {\r\n            return;\r\n        }\r\n\r\n        // is on name or sort place holder\r\n        const $columnName = this.getEventClosestNode(e.target, 'tg-column-name');\r\n        const $columnSort = this.getEventClosestNode(e.target, 'tg-column-sort');\r\n        if (!$columnName && !$columnSort) {\r\n            return;\r\n        }\r\n\r\n        this.trigger(E.onSort, d);\r\n        if (this.isDefaultPrevented(e)) {\r\n            return;\r\n        }\r\n\r\n        this.setSortColumn(columnItem);\r\n\r\n    },\r\n\r\n    selectIconAllClickHandler: function(node) {\r\n        const $electIconAll = $(node);\r\n        //toggle selected state\r\n        let selected = false;\r\n        if ($electIconAll.hasClass('tg-selected') || $electIconAll.hasClass('tg-mixed')) {\r\n            selected = true;\r\n        }\r\n        selected = !selected;\r\n        this.selectAll(selected);\r\n    },\r\n\r\n    //======================================================================================\r\n\r\n    cellOverOutHandler: function(e, over) {\r\n        const d = this.getEventData(e);\r\n        if (!d) {\r\n            return;\r\n        }\r\n        if (over) {\r\n            this.trigger(E.onCellMouseOver, d);\r\n        } else {\r\n            this.trigger(E.onCellMouseOut, d);\r\n        }\r\n    },\r\n\r\n    cellEnterLeaveHandler: function(e, hover) {\r\n        const d = this.getEventData(e);\r\n        if (!d) {\r\n            return;\r\n        }\r\n        if (hover) {\r\n            this.trigger(E.onCellMouseEnter, d);\r\n        } else {\r\n            this.trigger(E.onCellMouseLeave, d);\r\n        }\r\n\r\n    },\r\n\r\n    rowEnterLeaveHandler: function(e, enter) {\r\n        const d = this.getEventData(e);\r\n        //console.log('row enter leave', hover, position);\r\n        if (!d) {\r\n            return;\r\n        }\r\n        if (enter) {\r\n            this.trigger(E.onRowMouseEnter, d);\r\n        } else {\r\n            this.trigger(E.onRowMouseLeave, d);\r\n        }\r\n        if (this.isDefaultPrevented(e)) {\r\n            return;\r\n        }\r\n        //row class handler\r\n        this.renderRowHover(d.rowItem, enter);\r\n\r\n        return this;\r\n    },\r\n\r\n    //=============================================================================================\r\n    //container handlers\r\n\r\n    containerMouseDownHandler: function(e) {\r\n\r\n        const $columnResizing = this.getEventClosestNode(e.target, 'tg-column-resizing');\r\n        if ($columnResizing) {\r\n            this.columnResizingMouseDownHandler(e);\r\n            return;\r\n        }\r\n\r\n        if (this.option.rowDragVisible) {\r\n            const $rowDragIcon = this.getEventClosestNode(e.target, 'tg-row-drag-icon');\r\n            if ($rowDragIcon) {\r\n                this.rowDragMouseDownHandler(e);\r\n            }\r\n        }\r\n    },\r\n\r\n    containerMouseMoveHandler: function(e) {\r\n        this.scrollbarFadeInOutHandler(e, true);\r\n    },\r\n\r\n    containerMouseOverOutHandler: function(e, over) {\r\n        const $cell = this.getEventClosestNode(e.target, 'tg-cell');\r\n        if ($cell) {\r\n            this.cellOverOutHandler(e, over);\r\n        }\r\n    },\r\n\r\n    containerMouseEnterLeaveHandler: function(e, enter) {\r\n\r\n        this.scrollbarFadeInOutHandler(e, enter);\r\n\r\n        const $columnResizing = $(e.target).hasClass('tg-column-resizing');\r\n        if ($columnResizing) {\r\n            this.columnResizingMouseEnterLeaveHandler(e, enter);\r\n            return;\r\n        }\r\n\r\n        const $cell = $(e.target).hasClass('tg-cell');\r\n        if ($cell) {\r\n            //console.log(e.type, 'cell');\r\n            this.cellEnterLeaveHandler(e, enter);\r\n            return;\r\n        }\r\n\r\n        const $row = $(e.target).hasClass('tg-row');\r\n        if ($row) {\r\n            //console.log(e.type, 'row');\r\n            this.rowEnterLeaveHandler(e, enter);\r\n        }\r\n\r\n    },\r\n\r\n    containerTouchStartHandler: function(e) {\r\n        //stop motion if have\r\n        this.scrollTouch.motionStop();\r\n\r\n        const $columnResizing = this.getEventClosestNode(e.target, 'tg-column-resizing');\r\n        if ($columnResizing) {\r\n            this.columnResizingTouchStartHandler(e);\r\n            return;\r\n        }\r\n\r\n        if (this.option.rowDragVisible) {\r\n            const $rowDragIcon = this.getEventClosestNode(e.target, 'tg-row-drag-icon');\r\n            if ($rowDragIcon) {\r\n                this.rowDragTouchStartHandler(e);\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.scrollPaneTouchStartHandler(e);\r\n\r\n    },\r\n\r\n    containerWheelHandler: function(e) {\r\n        //init mouse wheel data\r\n        const lineHeight = this.getRowHeight();\r\n        const pageHeight = this.bodyHeight;\r\n        const wd = this.getWheelDelta(e, lineHeight, pageHeight);\r\n\r\n        //e.deltaMode = 0;\r\n        //console.log('delta', wd);\r\n\r\n        this.trigger(E.onMouseWheel, {\r\n            e: e,\r\n            deltaX: wd.deltaX,\r\n            deltaY: wd.deltaY,\r\n            delta: wd\r\n        });\r\n        if (this.isDefaultPrevented(e)) {\r\n            return;\r\n        }\r\n\r\n        let handledFrozen = false;\r\n        if (this.scrollPaneHidden) {\r\n            handledFrozen = this.scrollPaneFrozen.setOffsetH(wd.deltaX);\r\n            wd.deltaX = 0;\r\n        }\r\n\r\n        const handled = this.scrollPane.mouseWheelHandler(wd);\r\n        if (handled || handledFrozen) {\r\n            //require to prevent default for MAC OS\r\n            //it's very different default handler between windows and Mac\r\n            Util.preventDefault(e);\r\n        }\r\n\r\n    },\r\n\r\n    containerClickHandler: function(e) {\r\n\r\n        //tree icon all\r\n        const $treeIconAll = this.getEventClosestNode(e.target, 'tg-tree-icon-all');\r\n        if ($treeIconAll) {\r\n            this.toggleAllRows();\r\n            return;\r\n        }\r\n\r\n        //select icon all\r\n        const $electIconAll = this.getEventClosestNode(e.target, 'tg-select-icon-all');\r\n        if ($electIconAll) {\r\n            this.selectIconAllClickHandler($electIconAll);\r\n            return;\r\n        }\r\n\r\n        const d = this.getEventData(e);\r\n        if (!d) {\r\n            return;\r\n        }\r\n\r\n        const $headerItem = this.getEventClosestNode(e.target, 'tg-header-item');\r\n        if ($headerItem) {\r\n            this.trigger(E.onClick, d);\r\n            if (this.isDefaultPrevented(e)) {\r\n                return;\r\n            }\r\n            this.sortHandler(e, d);\r\n            return;\r\n        }\r\n\r\n        //tree icon\r\n        const $treeIcon = this.getEventClosestNode(e.target, 'tg-tree-icon');\r\n        if ($treeIcon) {\r\n            this.toggleRow(d.rowItem);\r\n            return;\r\n        }\r\n\r\n        //select icon\r\n        const $electIcon = this.getEventClosestNode(e.target, 'tg-select-icon');\r\n        if ($electIcon) {\r\n            this.setRowSelected(d.rowItem, e);\r\n            return;\r\n        }\r\n\r\n        this.trigger(E.onClick, d);\r\n\r\n    },\r\n\r\n\r\n    containerDblClickHandler: function(e) {\r\n        const d = this.getEventData(e) || {\r\n            e\r\n        };\r\n        this.trigger(E.onDblClick, d);\r\n    },\r\n\r\n    containerContextMenuHandler: function(e) {\r\n        const d = this.getEventData(e) || {\r\n            e\r\n        };\r\n        this.trigger(E.onContextMenu, d);\r\n    },\r\n\r\n    containerSelectStartHandler: function(e) {\r\n        if (this.option.textSelectable) {\r\n            return;\r\n        }\r\n        const selectable = $(e.target).is('input,textarea,code');\r\n        if (selectable) {\r\n            return;\r\n        }\r\n        Util.preventDefault(e);\r\n    },\r\n\r\n    containerKeyDownHandler: function(e) {\r\n\r\n        //console.log('onKeyDown', this.id, e.keyCode);\r\n\r\n        this.trigger(E.onKeyDown, {\r\n            e: e\r\n        });\r\n        if (this.isDefaultPrevented(e)) {\r\n            return;\r\n        }\r\n\r\n        const keyCode = e.keyCode;\r\n        //console.log(keyCode);\r\n        //9: tab\r\n        //13: enter\r\n        //27: esc\r\n        //33,34: page up,page down\r\n        //35,36: end,home\r\n        //37,38,39,40: left,up,right,down\r\n        const keyCodeList = {\r\n            '9': this.keyTabHandler,\r\n            '13': this.keyEnterHandler,\r\n            '27': this.keyEscHandler,\r\n\r\n            '33': this.keyPageUpHandler,\r\n            '34': this.keyPageDownHandler,\r\n            '35': this.keyEndHandler,\r\n            '36': this.keyHomeHandler,\r\n\r\n            '37': this.keyLeftHandler,\r\n            '38': this.keyUpHandler,\r\n            '39': this.keyRightHandler,\r\n            '40': this.keyDownHandler\r\n        };\r\n\r\n        const handler = keyCodeList[keyCode];\r\n        if (!handler) {\r\n            return;\r\n        }\r\n\r\n        const handled = handler.call(this, e);\r\n        if (handled) {\r\n            Util.preventDefault(e);\r\n        }\r\n    },\r\n\r\n    //=============================================================================================\r\n\r\n    unbindEvents: function() {\r\n\r\n        Util.unbindEvents(this.containerEvents);\r\n        this.containerEvents = null;\r\n\r\n        if (this.columnWidthDrag) {\r\n            this.columnWidthDrag.destroy();\r\n            this.columnWidthDrag = null;\r\n        }\r\n\r\n        if (this.columnWidthTouch) {\r\n            this.columnWidthTouch.destroy();\r\n            this.columnWidthTouch = null;\r\n        }\r\n\r\n        if (this.rowDrag) {\r\n            this.rowDrag.destroy();\r\n            this.rowDrag = null;\r\n        }\r\n\r\n        if (this.rowTouch) {\r\n            this.rowTouch.destroy();\r\n            this.rowTouch = null;\r\n        }\r\n\r\n        if (this.scrollTouch) {\r\n            this.scrollTouch.destroy();\r\n            this.scrollTouch = null;\r\n        }\r\n\r\n        //for all touch\r\n        this.protectedItem = null;\r\n\r\n    }\r\n\r\n\r\n};\r\n","import Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //data snapshot for export excel\r\n    exportData: function(keysSettings) {\r\n        const data = this.getData();\r\n\r\n        const columns = this.getTreeSnapshot(data.columns, keysSettings);\r\n        const rows = this.getTreeSnapshot(data.rows, keysSettings);\r\n\r\n        return {\r\n            columns: columns,\r\n            rows: rows\r\n        };\r\n    },\r\n\r\n    isItemExportable: function(item) {\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        if (!Util.hasOwn(item, 'exportable')) {\r\n            return true;\r\n        }\r\n        return Boolean(item.exportable);\r\n    },\r\n\r\n    getTreeSnapshot: function(tree, keysSettings) {\r\n        const snapshotAll = (newLs, ls) => {\r\n            if (!Util.isList(ls)) {\r\n                return;\r\n            }\r\n            ls.forEach((item) => {\r\n                if (!this.isItemExportable(item)) {\r\n                    return;\r\n                }\r\n                const newItem = this.getItemSnapshot(item, keysSettings);\r\n                const subs = item.subs;\r\n                if (Array.isArray(subs)) {\r\n                    newItem.subs = [];\r\n                    snapshotAll(newItem.subs, subs);\r\n                }\r\n                newLs.push(newItem);\r\n            });\r\n        };\r\n        const newList = [];\r\n        snapshotAll(newList, tree);\r\n        return newList;\r\n    },\r\n\r\n\r\n    getItemSnapshot: function(item, keysSettings = {}) {\r\n        const newItem = {};\r\n        Object.keys(item).forEach((k) => {\r\n            //user custom keys settings\r\n            if (keysSettings[k] === true) {\r\n                newItem[k] = item[k];\r\n                return;\r\n            }\r\n            if (keysSettings[k] === false) {\r\n                return;\r\n            }\r\n\r\n            //ignore subs and all tg_ properties\r\n            if (k === 'subs' || k.indexOf('tg_') === 0) {\r\n                return;\r\n            }\r\n            newItem[k] = item[k];\r\n        });\r\n        return newItem;\r\n    }\r\n\r\n};\r\n","import Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //all using tg_view_index\r\n\r\n    flushRow: function(rowInfo) {\r\n        const rowList = Util.toList(rowInfo);\r\n        rowList.forEach((row) => {\r\n            this.deleteRowCache(row);\r\n        });\r\n    },\r\n\r\n    flushRowFrom: function(fromIndex) {\r\n        if (!Util.isNum(fromIndex)) {\r\n            return;\r\n        }\r\n        if (fromIndex === 0) {\r\n            this.flushBody();\r\n            return;\r\n        }\r\n\r\n        this.forEachBodyCache((row, rowNodes, cellNodes) => {\r\n            if (row >= fromIndex) {\r\n                this.deleteRowCache(row);\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    flushBody: function() {\r\n        this.forEachBodyCache((row, rowNodes, cellNodes) => {\r\n            this.deleteRowCache(row);\r\n        });\r\n    },\r\n\r\n    flushSort: function() {\r\n        if (this.frozenInfo.rows) {\r\n            this.flushRowFrom(this.frozenInfo.rows);\r\n        } else {\r\n            this.flushBody();\r\n        }\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    flushColumn: function(columnInfo) {\r\n        const columnList = Util.toList(columnInfo);\r\n        this.forEachBodyCache((row, rowNodes, cellNodes) => {\r\n            columnList.forEach((column) => {\r\n                this.deleteCellCache(cellNodes, column);\r\n            });\r\n        });\r\n    },\r\n\r\n    flushColumnFrom: function(fromIndex) {\r\n        if (!Util.isNum(fromIndex)) {\r\n            return;\r\n        }\r\n        this.forEachBodyCache((row, rowNodes, cellNodes) => {\r\n            cellNodes.forEach((cellNode, column) => {\r\n                if (column >= fromIndex) {\r\n                    this.deleteCellCache(cellNodes, column);\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    flushCell: function(rowInfo, columnInfo) {\r\n        const rowList = Util.toList(rowInfo);\r\n        const columnList = Util.toList(columnInfo);\r\n        rowList.forEach((row) => {\r\n            const rowCache = this.getRowCache(row);\r\n            if (!rowCache) {\r\n                return;\r\n            }\r\n            const cellNodes = rowCache.cellNodes;\r\n            columnList.forEach((column) => {\r\n                this.deleteCellCache(cellNodes, column);\r\n            });\r\n        });\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n\r\n    //clean handler, remove out of viewport\r\n    flushWithViewport: function() {\r\n        const { rows, columns } = this.viewport;\r\n        this.forEachBodyCache((row, rowNodes, cellNodes) => {\r\n            if (!rows.includes(row)) {\r\n                //remove out of rows (include all columns)\r\n                this.deleteRowCache(row);\r\n                return;\r\n            }\r\n            //remove out of columns\r\n            cellNodes.forEach((cellNode, column) => {\r\n                if (!columns.includes(column)) {\r\n                    this.deleteCellCache(cellNodes, column);\r\n                }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n","\r\nconst sortH = `\r\n<svg class=\"tg-icon-sort-h\" pointer-events=\"none\" viewBox=\"0 0 19 6\">\r\n    <path class=\"tg-icon-item tg-icon-item-light tg-asc\" fill=\"currentColor\" d=\"M0 0h10l-5 6z\" />\r\n    <path class=\"tg-icon-item tg-asc\" fill=\"currentColor\" d=\"M9 6h10l-5 -6z\" />\r\n    <path class=\"tg-icon-item tg-desc\" fill=\"currentColor\" d=\"M0 0h10l-5 6z\" />\r\n    <path class=\"tg-icon-item tg-icon-item-light tg-desc\" fill=\"currentColor\" d=\"M9 6h10l-5 -6z\" />\r\n</svg>\r\n`;\r\n\r\nconst sortV = `\r\n<svg class=\"tg-icon-sort-v\" pointer-events=\"none\" viewBox=\"0 0 10 16\">\r\n    <path class=\"tg-icon-item tg-icon-item-light tg-asc\" fill=\"currentColor\" d=\"M0 9h10l-5 6z\" />\r\n    <path class=\"tg-icon-item tg-asc\" fill=\"currentColor\" d=\"M0 7h10l-5 -6z\" />\r\n    <path class=\"tg-icon-item tg-desc\" fill=\"currentColor\" d=\"M0 9h10l-5 6z\" />\r\n    <path class=\"tg-icon-item tg-icon-item-light tg-desc\" fill=\"currentColor\" d=\"M0 7h10l-5 -6z\" />\r\n</svg>\r\n`;\r\n\r\nconst tree = `\r\n<svg class=\"tg-icon-tree\" pointer-events=\"none\" viewBox=\"0 0 20 20\">\r\n    <path class=\"tg-tree-item tg-tree-collapsed\" fill=\"currentColor\" d=\"M0,0 l20,10 l-20,10 z\" />\r\n    <path class=\"tg-tree-item tg-tree-expanded\" fill=\"currentColor\" d=\"M0,0 l10,20 l10,-20 z\" />\r\n</svg>\r\n`;\r\n\r\nconst checkbox = `\r\n<svg class=\"tg-icon-checkbox\" pointer-events=\"none\" viewBox=\"0 0 16 16\">\r\n    <path class=\"tg-checkbox-item tg-checkbox-none\" fill=\"currentColor\" d=\"M0,3 q0,-3 3,-3 h9 q3,0 3,3 v9 q0,3 -3,3 h-9 q-3,0 -3,-3 v-9 zM1,3,v9,q0,2 2,2,h9,q2,0 2,-2,v-9,q0,-2 -2,-2,h-9,q-2,0 -2,2,z\" />\r\n    <path class=\"tg-checkbox-item tg-checkbox-selected\" fill=\"currentColor\" d=\"M0,3 q0,-3 3,-3 h9 q3,0 3,3 v9 q0,3 -3,3 h-9 q-3,0 -3,-3 v-9 zM12,2.5 l-6,8 l-3,-3 l-1,1 l4,4 l7,-9 z\" />\r\n    <path class=\"tg-checkbox-item tg-checkbox-mixed\" fill=\"currentColor\" d=\"M0,3 q0,-3 3,-3 h9 q3,0 3,3 v9 q0,3 -3,3 h-9 q-3,0 -3,-3 v-9 zM2.5,7 v1 h10 v-1 h-10 z\" />\r\n</svg>\r\n`;\r\n\r\nconst radio = '<div class=\"tg-icon-radio\"><div>';\r\n\r\nconst drag = `\r\n<svg class=\"tg-icon-row-drag\" pointer-events=\"none\" viewBox=\"0 0 32 32\">\r\n    <path fill=\"currentColor\" d=\"M10 6h4v4h-4zm8 0h4v4h-4zm-8 8h4v4h-4zm8 0h4v4h-4zm-8 8h4v4h-4zm8 0h4v4h-4z\"/>\r\n</svg>\r\n`;\r\n\r\nconst icons = {\r\n    'sort-h': sortH,\r\n    'sort-v': sortV,\r\n\r\n    'checkbox': checkbox,\r\n    'radio': radio,\r\n\r\n    'drag': drag,\r\n\r\n    'tree': tree\r\n};\r\n\r\nexport default {\r\n\r\n    icons: icons,\r\n\r\n    getIcon: function(name) {\r\n        let str = icons[name];\r\n        str = String(str).trim();\r\n        return str;\r\n    }\r\n\r\n};\r\n","export default {\r\n\r\n    //header formatter\r\n    header: function(value, rowItem, columnItem, cellNode) {\r\n        return value;\r\n    },\r\n\r\n    //====================================================================================\r\n    //cell formatter by type\r\n\r\n    null: function(value, rowItem, columnItem, cellNode) {\r\n        if (rowItem && rowItem.tg_group) {\r\n            return value;\r\n        }\r\n        if (value === null || typeof value === 'undefined') {\r\n            return '—';\r\n        }\r\n        return value;\r\n    },\r\n\r\n    blank: function(value, rowItem, columnItem, cellNode) {\r\n        return '';\r\n    },\r\n\r\n    //default\r\n    string: function(value, rowItem, columnItem, cellNode) {\r\n        return value;\r\n    },\r\n\r\n    number: function(value, rowItem, columnItem, cellNode) {\r\n        //for Negative Number Align\r\n        if (value) {\r\n            const reg = /^\\(.*\\)$/g;\r\n            const isNegative = reg.test(`${value}`);\r\n            if (isNegative && cellNode) {\r\n                cellNode.className += ' tg-cell-negative';\r\n            }\r\n        }\r\n        return value;\r\n    },\r\n\r\n    //default to font-family:Webdings;\r\n    icon: function(value, rowItem, columnItem, cellNode) {\r\n        return `<span class=\"tg-symbols\">${value}</span>`;\r\n    },\r\n\r\n    //====================================================================================\r\n\r\n    select: function(value, rowItem, columnItem, cellNode) {\r\n        if (!this.isRowSelectable(rowItem)) {\r\n            return '';\r\n        }\r\n        return this.getSelectFormatterContent(rowItem);\r\n    },\r\n\r\n    rowDrag: function(value, rowItem, columnItem, cellNode) {\r\n        return this.getRowDragFormatterContent(rowItem);\r\n    },\r\n\r\n    rowNumber: function(value, rowItem, columnItem, cellNode) {\r\n        return rowItem.tg_row_number || '';\r\n    },\r\n\r\n    //====================================================================================\r\n\r\n    tree: function(value, rowItem, columnItem, cellNode) {\r\n        return this.getTreeFormatterContent(value, rowItem);\r\n    }\r\n\r\n};\r\n","import CONST from '../core/const.js';\r\nimport Icon from '../core/icon.js';\r\nimport Util from '../core/util.js';\r\n\r\nimport defaultFormatters from '../config/default-formatters.js';\r\n\r\nexport default {\r\n\r\n    //formatter API\r\n    setFormatter: function() {\r\n        this.renderType = 'all';\r\n        const args = Array.from(arguments);\r\n        if (args.length === 0) {\r\n            this.formatters = Util.merge(defaultFormatters);\r\n            return this;\r\n        }\r\n        const firstArg = args[0];\r\n        if (args.length === 1) {\r\n            this.formatters = Util.merge(defaultFormatters, firstArg);\r\n            return this;\r\n        }\r\n        if (typeof firstArg === 'string') {\r\n            //keep formatters for single formatter change\r\n            this.formatters[firstArg] = args[1];\r\n            return this;\r\n        }\r\n        //multiple formatters, concat require Array type\r\n        const list = [defaultFormatters].concat(args);\r\n        this.formatters = Util.merge.apply(null, list);\r\n        return this;\r\n    },\r\n\r\n    getFormatter: function(name) {\r\n        if (!name) {\r\n            return;\r\n        }\r\n        const formatter = this.formatters[name];\r\n        if (typeof formatter !== 'function') {\r\n            return;\r\n        }\r\n        return formatter.bind(this);\r\n    },\r\n\r\n    getDefaultFormatter: function(name) {\r\n        const formatter = defaultFormatters[name] || defaultFormatters.string;\r\n        return formatter.bind(this);\r\n    },\r\n\r\n    //======================================================================================\r\n    //checkbox and radio\r\n\r\n    getSelectFormatterContent: function(rowItem) {\r\n        let type = 'radio';\r\n        if (this.option.selectMultiple) {\r\n            type = 'checkbox';\r\n        }\r\n\r\n        const icon = Icon.getIcon(type);\r\n\r\n        const className = Util.classMap(['tg-select-icon', `tg-${type}`, {\r\n            'tg-selected': rowItem.selected\r\n        }]);\r\n\r\n        return `<div class=\"${className}\">${icon}</div>`;\r\n    },\r\n\r\n    getRowDragFormatterContent: function(rowItem) {\r\n        if (rowItem.tg_frozen) {\r\n            return '';\r\n        }\r\n\r\n        const icon = Icon.getIcon('drag');\r\n        return `<div class=\"tg-row-drag-icon\">${icon}</div>`;\r\n    },\r\n\r\n    //======================================================================================\r\n    //tree\r\n\r\n    getTreeIndentWidth: function(isTree, isGroup, rowLevel) {\r\n\r\n        if (!isTree) {\r\n            return 0;\r\n        }\r\n\r\n        // 15 + 5 = 20px first indent\r\n        let indentWidth = 5;\r\n\r\n        //first level fix, group tree icon is 15px\r\n        if (!isGroup) {\r\n            indentWidth += CONST.TREE_INDENT;\r\n        }\r\n\r\n        indentWidth += rowLevel * CONST.TREE_INDENT;\r\n\r\n        return indentWidth;\r\n    },\r\n\r\n    getTreeFormatterContent: function(value, rowItem) {\r\n        const isTree = this.rowsInfo.isTree;\r\n        const isGroup = rowItem.tg_group;\r\n        const isEmptyGroup = this.isEmptyGroup(rowItem);\r\n        if (isEmptyGroup) {\r\n            rowItem.collapsed = true;\r\n        }\r\n        const isCollapsed = rowItem.collapsed;\r\n        const rowLevel = Util.toNum(rowItem.tg_level);\r\n        const indentWidth = this.getTreeIndentWidth(isTree, isGroup, rowLevel);\r\n\r\n        //console.log('isGroup', isGroup, 'isEmptyGroup', isEmptyGroup, 'isCollapsed', isCollapsed);\r\n\r\n        const list = [];\r\n\r\n        list.push(`<div class=\"tg-tree\" style=\"padding-left:${indentWidth}px;\">`);\r\n\r\n        if (isGroup) {\r\n            const classMap = {\r\n                'tg-tree-icon': true,\r\n                'tg-tree-icon-collapsed': isCollapsed,\r\n                'tg-tree-icon-expanded': !isCollapsed,\r\n                'tg-tree-icon-empty': isEmptyGroup\r\n            };\r\n            const icon = Icon.getIcon('tree');\r\n            const iconElem = `<div class=\"${Util.classMap(classMap)}\">${icon}</div>`;\r\n            list.push(iconElem);\r\n        }\r\n\r\n        list.push(`<div class=\"tg-tree-name\">${value}</div>`);\r\n\r\n        list.push('</div>');\r\n\r\n        return list.join('');\r\n    }\r\n\r\n};\r\n","import Icon from '../core/icon.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //render headers\r\n    renderHeaderTables: function() {\r\n\r\n        //remove header items only\r\n        this.clearHeaderCache();\r\n\r\n        const columns = this.viewColumns;\r\n        const fcs = this.frozenInfo.columns;\r\n\r\n        this.hasTreeColumn = false;\r\n        this.hasSortColumn = false;\r\n        let columnsL = [];\r\n        let columnsR = [];\r\n\r\n        for (let i = 0, l = columns.length; i < l; i++) {\r\n            const columnItem = columns[i];\r\n            if (this.isColumnSortable(columnItem)) {\r\n                this.hasSortColumn = true;\r\n            }\r\n            if (fcs && i >= fcs) {\r\n                columnsR.push(columnItem);\r\n            } else {\r\n                columnsL.push(columnItem);\r\n            }\r\n        }\r\n\r\n        //console.log(this.hasSortColumn);\r\n\r\n        if (this.frozenInfo.right) {\r\n            const columnsTemp = columnsL;\r\n            columnsL = columnsR;\r\n            columnsR = columnsTemp;\r\n        }\r\n\r\n        this.renderHeaderTable(columnsL, this.$headerL);\r\n        this.renderHeaderTable(columnsR, this.$headerR);\r\n\r\n    },\r\n\r\n    renderHeaderTable: function(columns, container) {\r\n\r\n        const headerTable = document.createElement('div');\r\n\r\n        const list = ['tg-header-table'];\r\n        if (this.hasSortColumn) {\r\n            list.push('tg-header-sortable');\r\n            list.push(`tg-header-sort-${this.option.sortIndicator}`);\r\n        }\r\n        headerTable.className = Util.classMap(list);\r\n\r\n        columns.forEach((columnItem) => {\r\n            this.renderHeaderItem(columnItem, headerTable);\r\n        });\r\n\r\n        container.append(headerTable);\r\n\r\n    },\r\n\r\n    renderHeaderItem: function(columnItem, container) {\r\n\r\n        const column = columnItem.tg_view_index;\r\n        const hasHeaderNode = this.getHeaderCache(column);\r\n        if (hasHeaderNode) {\r\n            return;\r\n        }\r\n\r\n        const className = this.getHeaderItemClass(columnItem);\r\n        const cssText = Util.styleMap(columnItem.headerStyleMap);\r\n\r\n        const attr = {\r\n            'column': column,\r\n            'class': className,\r\n            'data': columnItem.id\r\n        };\r\n\r\n        if (cssText) {\r\n            attr.style = cssText;\r\n        }\r\n\r\n        const columnHeader = this.createColumnHeader(columnItem);\r\n        const children = [columnHeader];\r\n        if (this.isColumnResizable(columnItem)) {\r\n            const columnResizing = this.createColumnResizing(columnItem);\r\n            children.push(columnResizing);\r\n        }\r\n\r\n        const headerNode = this.createElement('div', attr, children);\r\n        container.appendChild(headerNode);\r\n\r\n        //cache\r\n        this.setHeaderCache(column, headerNode);\r\n        this.setNodeDataCache(headerNode, {\r\n            rowItem: this.headerRowItem,\r\n            column,\r\n            columnItem,\r\n            headerNode\r\n        });\r\n\r\n        //render group\r\n        if (columnItem.tg_parent) {\r\n            this.renderHeaderItem(columnItem.tg_parent, container);\r\n        }\r\n\r\n    },\r\n\r\n    createColumnHeader: function(columnItem) {\r\n\r\n        const className = this.getHeaderClass(columnItem);\r\n        const cssText = this.getHeaderStyle(columnItem);\r\n\r\n        const attr = {\r\n            'class': className,\r\n            'style': cssText\r\n        };\r\n\r\n        const columnName = this.createColumnName(columnItem);\r\n        const children = [columnName];\r\n\r\n        if (this.hasSortColumn && !columnItem.tg_group) {\r\n            const columnSort = this.createColumnSort(columnItem);\r\n            children.push(columnSort);\r\n        }\r\n\r\n        return this.createElement('div', attr, children);\r\n    },\r\n\r\n    createColumnName: function(columnItem) {\r\n\r\n        const list = ['tg-column-name'];\r\n        if (columnItem.tg_group) {\r\n            list.push('tg-header-group-name');\r\n        }\r\n        const className = list.join(' ');\r\n\r\n        const attr = {\r\n            'class': className\r\n        };\r\n\r\n        const value = columnItem.name;\r\n        let content = value;\r\n\r\n        const formatter = columnItem.tg_headerFormatter;\r\n        //formatter\r\n        if (typeof formatter === 'function') {\r\n            //value, rowItem, columnItem, cellNode\r\n            content = formatter.call(this, content, this.headerRowItem, columnItem);\r\n        }\r\n\r\n        if (columnItem.formatter === 'tree') {\r\n            content = this.createHeaderTreeName(content);\r\n        } else if (columnItem === this.selectColumn && this.isSelectAllVisible()) {\r\n            content = this.createHeaderSelectName();\r\n        }\r\n\r\n        return this.createElement('div', attr, content);\r\n    },\r\n\r\n    //created tree no matter isTree\r\n    createHeaderTreeName: function(content) {\r\n        this.hasTreeColumn = true;\r\n\r\n        const children = [];\r\n\r\n        if (this.option.collapseAllVisible) {\r\n\r\n            const icon = Icon.getIcon('tree');\r\n            const treeIcon = this.createElement('div', {\r\n                'class': 'tg-tree-icon tg-tree-icon-all'\r\n            }, icon);\r\n\r\n            children.push(treeIcon);\r\n\r\n        } else {\r\n\r\n            const treeIconEmpty = this.createElement('div', {\r\n                'class': 'tg-tree-icon'\r\n            });\r\n            children.push(treeIconEmpty);\r\n        }\r\n\r\n        const headerName = this.createElement('div', {\r\n            'class': 'tg-tree-name'\r\n        }, content);\r\n\r\n        children.push(headerName);\r\n\r\n        const attr = {\r\n            'class': 'tg-tree'\r\n        };\r\n        return this.createElement('div', attr, children);\r\n    },\r\n\r\n    createHeaderSelectName: function() {\r\n        const icon = Icon.getIcon('checkbox');\r\n        const attr = {\r\n            'class': 'tg-select-icon-all tg-checkbox'\r\n        };\r\n        return this.createElement('div', attr, icon);\r\n    },\r\n\r\n    //================================================================================================\r\n\r\n    createColumnSort: function(columnItem) {\r\n        const attr = {\r\n            'class': 'tg-column-sort'\r\n        };\r\n        let content;\r\n        if (this.isColumnSortable(columnItem)) {\r\n            if (this.option.sortIndicator === 'h') {\r\n                content = this.createSortIndicatorH(columnItem);\r\n            } else {\r\n                content = this.createSortIndicatorV(columnItem);\r\n            }\r\n        }\r\n        return this.createElement('div', attr, content);\r\n    },\r\n\r\n    createSortIndicatorH: function(columnItem) {\r\n        const attr = {\r\n            'class': 'tg-sort-indicator'\r\n        };\r\n        const icon = Icon.getIcon('sort-h');\r\n        const children = [\r\n            this.createElement('div', {\r\n                'class': 'tg-sort-indicator-line'\r\n            }),\r\n            this.createElement('div', {\r\n                'class': 'tg-sort-indicator-icon'\r\n            }, icon)\r\n        ];\r\n        return this.createElement('div', attr, children);\r\n    },\r\n\r\n    createSortIndicatorV: function(columnItem) {\r\n        const attr = {\r\n            'class': 'tg-sort-indicator'\r\n        };\r\n        const icon = Icon.getIcon('sort-v');\r\n        const children = [\r\n            this.createElement('div', {\r\n                'class': 'tg-sort-indicator-icon'\r\n            }, icon)\r\n        ];\r\n        return this.createElement('div', attr, children);\r\n    },\r\n\r\n    //=================================================================================================\r\n\r\n    createColumnResizing: function() {\r\n        const attr = {\r\n            'class': 'tg-column-resizing'\r\n        };\r\n        return this.createElement('div', attr);\r\n    },\r\n\r\n    //=================================================================================================\r\n    getHeaderItemClass: function(columnItem) {\r\n\r\n        const list = ['tg-header-item'];\r\n        if (columnItem.tg_group) {\r\n            list.push('tg-header-group-item');\r\n        }\r\n\r\n        list.push(`tg-c-${columnItem.tg_view_index}`);\r\n        list.push(`tg-h-${columnItem.tg_layer}`);\r\n        if (columnItem.tg_combination) {\r\n            list.push(`tg-h-${columnItem.tg_combination}`);\r\n        }\r\n\r\n        //custom class, last append\r\n        list.push(Util.classMap(columnItem.headerClassMap));\r\n\r\n        return Util.classMap(list);\r\n    },\r\n\r\n    //=================================================================================================\r\n\r\n    getHeaderClass: function(columnItem) {\r\n\r\n        const list = ['tg-column-header'];\r\n\r\n        if (columnItem.formatter === 'tree') {\r\n            list.push('tg-tree-header');\r\n            if (this.rowsInfo.isTree) {\r\n                list.push('tg-tree-header-indent');\r\n            }\r\n        }\r\n\r\n        if (this.isColumnSortable(columnItem)) {\r\n            list.push(`tg-column-sortable tg-column-sort-${this.option.sortIndicator}`);\r\n        }\r\n\r\n        if (columnItem.align) {\r\n            list.push(`tg-align-${columnItem.align}`);\r\n        }\r\n\r\n        return list.join(' ');\r\n    },\r\n\r\n    getHeaderStyle: function(columnItem) {\r\n        const cssText = Util.styleMap(columnItem.headerStyleMap);\r\n        const list = [cssText];\r\n        const w = columnItem.tg_width;\r\n        if (this.isInvisible(columnItem) || w <= 0) {\r\n            list.push('display:none;');\r\n        } else {\r\n            list.push(`width:${w}px;`);\r\n        }\r\n        return list.join('');\r\n    }\r\n\r\n};\r\n","import E from '../core/event-types.js';\r\n//import Util from '../core/util.js';\r\nconst Headers = {\r\n\r\n    renderHeader: function() {\r\n\r\n        //update css always\r\n        this.cssRulesInvalid = true;\r\n\r\n        //remove header table\r\n        this.$headerL.empty();\r\n        this.$headerR.empty();\r\n\r\n        this.resetCssDisplay();\r\n\r\n        this.renderHeaderTables();\r\n\r\n        //header sort and resize\r\n        this.renderHeaderSort();\r\n\r\n        //header created\r\n        this.headerCreated = true;\r\n        //console.log('headerCreated');\r\n\r\n        //column rendered\r\n        this.trigger(E.onHeaderUpdated, {\r\n            node: this.$headerFrame.get(0)\r\n        });\r\n\r\n    },\r\n\r\n    //call from resize\r\n    initHeaderLayerHeight: function() {\r\n\r\n        this.updateScrollPaneHiddenState();\r\n\r\n        this.resetCssDisplay();\r\n\r\n        this.viewAllColumns.forEach((column) => {\r\n            this.updateColumnHeaderHeight(column);\r\n        });\r\n\r\n        this.resetCssDisplay('none');\r\n\r\n        this.updateHeaderLayerHeight();\r\n\r\n    },\r\n\r\n    //use max height column as layer height\r\n    //combination column need handler\r\n    updateHeaderLayerHeight: function() {\r\n        const headerLayerHeight = {};\r\n        const maxLevel = this.columnsInfo.maxLevel;\r\n        for (let i = 0; i <= maxLevel; i++) {\r\n            headerLayerHeight[i] = 0;\r\n        }\r\n\r\n        const combinationList = [];\r\n\r\n        this.viewAllColumns.forEach(function(column) {\r\n            if (column.tg_combination) {\r\n                combinationList.push(column);\r\n            } else {\r\n                const ch = column.tg_height;\r\n                const layer = column.tg_layer;\r\n                headerLayerHeight[layer] = Math.max(headerLayerHeight[layer], ch);\r\n            }\r\n        });\r\n\r\n        //last layer\r\n        combinationList.forEach(function(column) {\r\n            let ch = column.tg_height;\r\n            //210\r\n            const combination = column.tg_combination;\r\n            const list = combination.split('');\r\n            const layer = list.pop();\r\n            list.forEach(function(k) {\r\n                ch -= headerLayerHeight[k] || 0;\r\n            });\r\n            headerLayerHeight[layer] = Math.max(headerLayerHeight[layer], ch);\r\n\r\n        });\r\n\r\n        const str = JSON.stringify(headerLayerHeight);\r\n        //console.log(`headerLayerHeight: ${str}`);\r\n\r\n        if (this.previousHeaderLayerHeight === str) {\r\n            return;\r\n        }\r\n        this.previousHeaderLayerHeight = str;\r\n\r\n        this.headerLayerHeight = headerLayerHeight;\r\n\r\n        this.cssRulesInvalid = true;\r\n\r\n    }\r\n\r\n};\r\n\r\nexport default Headers;\r\n","import $ from '../core/query.js';\r\nimport CONST from '../core/const.js';\r\nimport Util from '../core/util.js';\r\n\r\nimport globalStyle from '../theme/theme.scss';\r\nimport templateHtml from '../template.html';\r\n\r\nexport default {\r\n\r\n    create: function(holder) {\r\n\r\n        this.id = Util.uid(4, 'tg-');\r\n\r\n        this.createCache();\r\n        this.createView(holder);\r\n\r\n        //default\r\n        this.setOption();\r\n        this.setFormatter();\r\n\r\n    },\r\n\r\n    createView: function(holder) {\r\n        this.createHolder(holder);\r\n        if (!this.$holder) {\r\n            console.error('Grid requires a container');\r\n            return;\r\n        }\r\n        this.createGlobalStyle();\r\n        this.createContainer();\r\n    },\r\n\r\n    createHolder: function(holder) {\r\n        const $holder = $(holder);\r\n        if (!$holder.length) {\r\n            return;\r\n        }\r\n        this.$holder = $holder;\r\n        this.$holder.empty();\r\n        this.holder = this.$holder.get(0);\r\n\r\n        //created in shadow DOM\r\n        //https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\r\n        const rootNode = this.holder.getRootNode();\r\n        this.shadowRoot = null;\r\n        //in shadow dom\r\n        if (rootNode && rootNode.host) {\r\n            this.shadowRoot = rootNode;\r\n        }\r\n\r\n    },\r\n\r\n    createGlobalStyle: function() {\r\n        const root = this.shadowRoot || document.head;\r\n\r\n        //already appended\r\n        const prevStyle = root.querySelector(`style[context=\"${CONST.ID}\"]`);\r\n        if (prevStyle) {\r\n            return;\r\n        }\r\n\r\n        //append global css to shadow root\r\n        const $style = document.createElement('style');\r\n        $style.setAttribute('context', CONST.ID);\r\n        $style.innerHTML = globalStyle.toString();\r\n        root.appendChild($style);\r\n\r\n    },\r\n\r\n    createContainer: function() {\r\n\r\n        this.$container = $(templateHtml).appendTo(this.$holder);\r\n\r\n        //init id for container in order to keep instance, do NOT remove by gc\r\n        this.$container.attr('id', this.id);\r\n        this.$container.addClass(`${CONST.NS} ${this.id}`);\r\n\r\n        //cache instance for automation test\r\n        this.container = this.$container.get(0);\r\n        Util.setInstance(this.container, this);\r\n\r\n        //===============================================================\r\n\r\n        this.$headerFrame = this.$container.find('.tg-header-frame');\r\n\r\n        //===============================================================\r\n        //for header scrollPane container\r\n        this.$paneHL = this.$headerFrame.find('.tg-pane-header-left');\r\n        this.$paneHR = this.$headerFrame.find('.tg-pane-header-right');\r\n\r\n        // Append the column to the headers\r\n        this.$headerL = this.$paneHL.find('.tg-header-left');\r\n        this.$headerR = this.$paneHR.find('.tg-header-right');\r\n\r\n        // Cache the header columns\r\n        this.$header = $().add(this.$headerL).add(this.$headerR);\r\n\r\n        //===============================================================\r\n\r\n        this.$bodyFrame = this.$container.find('.tg-body-frame');\r\n\r\n        //===============================================================\r\n        //for body scrollPane container\r\n        this.$paneTL = this.$bodyFrame.find('.tg-pane-top-left');\r\n        this.$paneTR = this.$bodyFrame.find('.tg-pane-top-right');\r\n        this.$paneBL = this.$bodyFrame.find('.tg-pane-bottom-left');\r\n        this.$paneBR = this.$bodyFrame.find('.tg-pane-bottom-right');\r\n\r\n        //===============================================================\r\n        this.$bodyTL = this.$paneTL.find('.tg-body-top-left');\r\n        this.$bodyTR = this.$paneTR.find('.tg-body-top-right');\r\n        this.$bodyBL = this.$paneBL.find('.tg-body-bottom-left');\r\n        this.$bodyBR = this.$paneBR.find('.tg-body-bottom-right');\r\n\r\n        this.$body = $().add(this.$bodyTL).add(this.$bodyTR).add(this.$bodyBL).add(this.$bodyBR);\r\n\r\n        //===============================================================\r\n\r\n        this.$columnLineContainer = this.$container.find('.tg-column-line');\r\n        this.$columnLineItem = this.$columnLineContainer.find('.tg-column-line-item');\r\n        this.$columnLineItemL = this.$columnLineContainer.find('.tg-column-line-l');\r\n        this.$columnLineItemR = this.$columnLineContainer.find('.tg-column-line-r');\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n","import Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //create columns and viewColumns\r\n    initColumnsHandler: function() {\r\n        this.columns = this.data.columns;\r\n        // init data columns, need check null and undefined before concat\r\n        // because this.columns could be used lot directly\r\n        this.columns.forEach((item, i) => {\r\n            if (!item || typeof item !== 'object') {\r\n                this.columns[i] = {};\r\n            }\r\n        });\r\n\r\n        //need cache own columns too, but any column related change should be data columns\r\n        const privateColumns = this.getPrivateColumns();\r\n        this.columnsInfo = this.initTreeInfo(privateColumns, this.frozenInfo.column);\r\n\r\n        // no dependence, so create view columns directly\r\n        //view columns\r\n        const viewColumns = [];\r\n        const viewGroupColumns = [];\r\n\r\n        const digList = (ls, parent) => {\r\n            if (!Util.isList(ls)) {\r\n                return;\r\n            }\r\n\r\n            let list_index = 0;\r\n            let list_item;\r\n            ls.forEach((columnItem) => {\r\n\r\n                if (this.isInvisible(columnItem)) {\r\n                    return;\r\n                }\r\n\r\n                if (columnItem.tg_group) {\r\n\r\n                    //no empty for column, can not resize width\r\n                    if (this.isEmptyGroup(columnItem)) {\r\n                        return;\r\n                    }\r\n\r\n                    viewGroupColumns.push(columnItem);\r\n                    digList(columnItem.subs, columnItem);\r\n\r\n                } else {\r\n\r\n                    //update list index, not for column group (not in list)\r\n                    columnItem.tg_list_index = list_index;\r\n                    list_index += 1;\r\n\r\n                    columnItem.tg_list_last = false;\r\n                    list_item = columnItem;\r\n\r\n                    viewColumns.push(columnItem);\r\n\r\n                }\r\n\r\n            });\r\n\r\n            if (list_item) {\r\n                list_item.tg_list_last = true;\r\n            }\r\n\r\n        };\r\n\r\n        digList(privateColumns);\r\n\r\n        //init item\r\n        viewColumns.forEach((columnItem) => {\r\n            this.initColumnItemHandler(columnItem);\r\n        });\r\n\r\n        this.viewColumns = viewColumns;\r\n        this.viewGroupColumns = viewGroupColumns;\r\n\r\n        //grid column list include all columns and groups\r\n        this.viewAllColumns = [].concat(viewColumns).concat(viewGroupColumns);\r\n\r\n        this.initViewList(this.viewAllColumns, (item, i) => {\r\n\r\n        });\r\n\r\n        //init column header data\r\n        this.initHeaderHandler(privateColumns);\r\n\r\n        this.initSortColumn();\r\n    },\r\n\r\n    getPrivateColumns: function() {\r\n        const o = this.option;\r\n\r\n        //own columns and remove from user columns\r\n        this.selectColumn = o.selectColumn;\r\n        this.rowDragColumn = o.rowDragColumn;\r\n        this.rowNumberColumn = o.rowNumberColumn;\r\n        this.blankColumn = o.blankColumn;\r\n\r\n        let privateColumns = [];\r\n\r\n        const appendPrivateColumns = () => {\r\n            //first, add select column if option selectVisible\r\n            if (o.selectVisible) {\r\n                privateColumns.push(this.selectColumn);\r\n            }\r\n            // row drag\r\n            if (o.rowDragVisible) {\r\n                privateColumns.push(this.rowDragColumn);\r\n            }\r\n            // row number\r\n            if (o.rowNumberVisible) {\r\n                this.rowNumberColumn.width = o.rowNumberWidth;\r\n                privateColumns.push(this.rowNumberColumn);\r\n            }\r\n        };\r\n\r\n        //do not move private columns to right, should after frozen column\r\n        if (this.frozenInfo.right) {\r\n            const fc = this.frozenInfo.column;\r\n            this.columns.forEach((item, i) => {\r\n                privateColumns.push(item);\r\n                if (i === fc) {\r\n                    appendPrivateColumns();\r\n                }\r\n            });\r\n        } else {\r\n            appendPrivateColumns();\r\n            privateColumns = privateColumns.concat(this.columns);\r\n        }\r\n\r\n        //last, add blank column always\r\n        privateColumns.push(this.blankColumn);\r\n\r\n        return privateColumns;\r\n    },\r\n\r\n    // change columns dynamic, outer operation\r\n    setColumns: function(inputColumns) {\r\n        this.data.columns = Util.toList(inputColumns);\r\n        this.rerender();\r\n    },\r\n\r\n    getColumns: function() {\r\n        return this.columns;\r\n    },\r\n\r\n    getViewColumns: function(all) {\r\n        if (all) {\r\n            return this.viewAllColumns;\r\n        }\r\n        return this.viewColumns;\r\n    },\r\n\r\n    initColumnItemHandler: function(columnItem) {\r\n        //option handler\r\n        this.initColumnProps(columnItem);\r\n        //formatter handler\r\n        this.initColumnFormatter(columnItem);\r\n        //width handler\r\n        this.initColumnWidth(columnItem);\r\n    },\r\n\r\n    //=============================================================================\r\n    initColumnProps: function(columnItem) {\r\n\r\n        const columnTypes = this.option.columnTypes;\r\n\r\n        //1, id type\r\n        if (!Util.hasOwn(columnItem, 'type')) {\r\n            const idType = columnTypes[columnItem.id];\r\n            if (typeof idType === 'string') {\r\n                columnItem.type = idType;\r\n            }\r\n        }\r\n\r\n        // copy to column with default props\r\n        let defaultProps = this.option.columnProps;\r\n\r\n        //2, type props\r\n        const typeProps = columnTypes[columnItem.type];\r\n        if (typeProps && typeof typeProps === 'object') {\r\n            defaultProps = Util.merge(defaultProps, typeProps);\r\n        }\r\n\r\n        //update column with default props\r\n        for (const k in defaultProps) {\r\n            if (!Util.hasOwn(columnItem, k)) {\r\n                columnItem[k] = defaultProps[k];\r\n            }\r\n        }\r\n    },\r\n\r\n    //=============================================================================\r\n    //formatter handler\r\n    initColumnFormatter: function(columnItem) {\r\n\r\n        //header formatter, name is header\r\n        this.initColumnFormatterByName(columnItem, 'headerFormatter', 'header');\r\n\r\n        //cell formatter, user custom name\r\n        //using formatter string first, then type\r\n        let formatterName = columnItem.type;\r\n        const formatter = columnItem.formatter;\r\n        if (typeof formatter === 'string') {\r\n            formatterName = formatter;\r\n        }\r\n\r\n        this.initColumnFormatterByName(columnItem, 'formatter', formatterName);\r\n\r\n    },\r\n\r\n    initColumnFormatterByName: function(columnItem, key, formatterName) {\r\n\r\n        let formatter = columnItem[key];\r\n        //already is function\r\n        if (typeof formatter === 'function') {\r\n            columnItem[`tg_${key}`] = formatter.bind(this);\r\n            return;\r\n        }\r\n\r\n        formatter = this.getFormatter(formatterName);\r\n        if (formatter) {\r\n            //already bind this\r\n            columnItem[`tg_${key}`] = formatter;\r\n            return;\r\n        }\r\n\r\n        //default string formatter\r\n        columnItem[`tg_${key}`] = this.getFormatter('string');\r\n\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    initColumnWidth: function(columnItem) {\r\n        //do NOT change blank column width\r\n        if (columnItem === this.blankColumn) {\r\n            columnItem.tg_width = 0;\r\n            return;\r\n        }\r\n\r\n        //read custom width\r\n        if (Util.isNum(columnItem.width) && columnItem.width >= 0) {\r\n            columnItem.tg_width = columnItem.width;\r\n            //fix min and max width\r\n            columnItem.minWidth = Math.min(columnItem.minWidth, columnItem.tg_width);\r\n            columnItem.maxWidth = Math.max(columnItem.maxWidth, columnItem.tg_width);\r\n            return;\r\n        }\r\n\r\n        //calculate width by text\r\n        this.initColumnWidthByName(columnItem);\r\n\r\n    },\r\n\r\n    initColumnWidthByName: function(columnItem) {\r\n        const width = this.getComputedColumnWidth(columnItem);\r\n        if (!Util.isNum(width)) {\r\n            return;\r\n        }\r\n        columnItem.tg_width = width;\r\n    },\r\n\r\n    getComputedColumnWidth: function(columnItem) {\r\n        const str = columnItem.name || '';\r\n        const len = Util.getCharLen(str);\r\n        //font size: 14px, single char width:\r\n        const charWidth = 10;\r\n        let width = Math.round(len * charWidth);\r\n        //min width: 73\r\n        if (width > 103) {\r\n            //2 lines\r\n            width = Math.max(103, Math.round(len * charWidth / 2));\r\n            if (width > 133) {\r\n                //3 lines\r\n                width = Math.max(133, Math.round(len * charWidth / 3));\r\n                if (width > 163) {\r\n                    //4 lines\r\n                    width = Math.max(163, Math.round(len * charWidth / 4));\r\n                    //max width: 300\r\n                }\r\n            }\r\n        }\r\n        return Util.clamp(width, columnItem.minWidth, columnItem.maxWidth);\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    initSortColumn: function() {\r\n\r\n        //for sort on init every time\r\n        this.sortColumn = null;\r\n\r\n        const o = this.option;\r\n        const sortField = o.sortField;\r\n        if (!sortField) {\r\n            return;\r\n        }\r\n\r\n        const columnItem = this.getColumnItemById(sortField);\r\n        if (!columnItem) {\r\n            return;\r\n        }\r\n\r\n        if (!this.isColumnSortable(columnItem)) {\r\n            return;\r\n        }\r\n\r\n        if (!Util.hasOwn(columnItem, 'sortAsc')) {\r\n            columnItem.sortAsc = o.sortAsc;\r\n        }\r\n\r\n        //for sort data every time\r\n        this.sortColumn = columnItem;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n","import Util from '../core/util.js';\r\n\r\n\r\n/*\r\ndata define:\r\n\r\ndata.rows:\r\nrows: [1,2[subs],3]   //for tree, add/delete/setRows/export, reference to data.rows\r\nviewRows: [ 1,2(group),sub1,sub2,3 ]   //for view rows, flat list\r\n\r\ndata.columns:\r\ncolumns: [1,2[subs],3]   //for tree, add/delete/setColumns/export(no select/blank), reference to data.columns\r\nviewColumns: [ select,1,sub1,sub2,3,blank ]   //for view columns, flat list\r\nviewGroupColumns: \\[ 2(group) \\]   //for view columns group, flat list\r\nviewAllColumns: \\[ 1,sub1,sub2,3,2(group) \\]   //for view header\r\n\r\n*/\r\n\r\n\r\nexport default {\r\n\r\n    initDataHandler: function() {\r\n\r\n        // reset all\r\n        this.reset();\r\n\r\n        // init option/formatter, some of options from data.option, data.rows, data.columns\r\n        this.initOptionHandler();\r\n        this.initFormatterHandler();\r\n\r\n        // create columns and viewColumns\r\n        this.initColumnsHandler();\r\n        // create rows only, different from columns\r\n        this.initRowsHandler();\r\n\r\n\r\n        // option xxxOnInit handler, after columns and rows\r\n        this.initSortOnInitHandler();\r\n        this.initSelectAllOnInitHandler();\r\n        this.initCollapseAllOnInitHandler();\r\n\r\n        this.initScrollPane();\r\n\r\n        this.bindEvents();\r\n\r\n    },\r\n\r\n    updateViewRowsAndSize: function() {\r\n        //before create view rows need init rows tree like rowFilter, sort ...\r\n        this.createViewRows();\r\n\r\n        //update view after render\r\n        //depends row number, row tree, option\r\n        this.renderCollapseAllState();\r\n        this.renderSelectAllState();\r\n\r\n        //view rows changed alway resize for scrollPane\r\n        this.resizeHandler();\r\n\r\n        return this;\r\n    },\r\n\r\n    // global null formatter cache to this\r\n    initFormatterHandler: function() {\r\n        this.nullFormatter = this.getFormatter('null');\r\n    },\r\n\r\n\r\n    initSortOnInitHandler: function() {\r\n        if (!this.option.sortOnInit) {\r\n            return;\r\n        }\r\n\r\n        this.updateRowsSort();\r\n        // not need update index\r\n    },\r\n\r\n    initSelectAllOnInitHandler: function() {\r\n\r\n        //init global order for multi selection sorting\r\n        this.globalSelectedIndex = 0;\r\n\r\n        if (!this.option.selectMultiple) {\r\n            //single select, init data only selected first one\r\n            let selectedItem;\r\n            this.forEachSelectableRow((rowItem) => {\r\n                if (rowItem.selected) {\r\n                    if (selectedItem) {\r\n                        rowItem.selected = false;\r\n                        return;\r\n                    }\r\n                    selectedItem = rowItem;\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const selectAllOnInit = this.option.selectAllOnInit;\r\n        //specified true\r\n        if (selectAllOnInit === true) {\r\n            this.updateAllRowsSelected(true);\r\n            return;\r\n        }\r\n        //specified false\r\n        if (selectAllOnInit === false) {\r\n            this.updateAllRowsSelected(false);\r\n        }\r\n    },\r\n\r\n    // for selectAllOnInit to data rows\r\n    updateAllRowsSelected: function(selected) {\r\n        this.forEachSelectableRow((rowItem) => {\r\n            rowItem.selected = selected;\r\n        });\r\n    },\r\n\r\n    initCollapseAllOnInitHandler: function() {\r\n        const collapseAllOnInit = this.option.collapseAllOnInit;\r\n        //collapse all tree, only handle true and false\r\n        if (collapseAllOnInit === true) {\r\n            this.updateAllRowsCollapsed(true);\r\n            return;\r\n        }\r\n        if (collapseAllOnInit === false) {\r\n            this.updateAllRowsCollapsed(false);\r\n        }\r\n    },\r\n\r\n    //===============================================================================================\r\n\r\n    getToBeAddedItemList: function(rowInfo) {\r\n        const list = [];\r\n        const rowList = Util.toList(rowInfo);\r\n        rowList.forEach((rowItem) => {\r\n            //object\r\n            if (rowItem && typeof rowItem === 'object') {\r\n                // TODO should create snapshot ?\r\n                list.push(rowItem);\r\n                return;\r\n            }\r\n            //string, number, boolean\r\n            if (typeof rowItem !== 'undefined') {\r\n                list.push({\r\n                    name: rowItem\r\n                });\r\n            }\r\n        });\r\n        return list;\r\n    },\r\n\r\n    getToBeAddedParentSubs: function(parentItem, rootList) {\r\n        if (parentItem) {\r\n            //update row to group\r\n            if (!parentItem.subs) {\r\n                parentItem.subs = [];\r\n            }\r\n            return parentItem.subs;\r\n        }\r\n        //root\r\n        return rootList;\r\n    },\r\n\r\n    getToBeAddedPositionIndex: function(position, subs) {\r\n        const len = subs.length;\r\n\r\n        if (Util.isNum(position) && position >= 0 && position <= len) {\r\n            return position | 0;\r\n        }\r\n\r\n        return len;\r\n    },\r\n\r\n    //===============================================================================================\r\n\r\n    //for input data, check exportData from output data\r\n    getDataSnapshot: function(data) {\r\n        if (!data || typeof data !== 'object') {\r\n            return data;\r\n        }\r\n\r\n        const rows = this.cleanTreeList(data.rows);\r\n        const columns = this.cleanTreeList(data.columns);\r\n\r\n        //convert number type\r\n        this.convertNumberType(rows, columns);\r\n\r\n        data.rows = rows;\r\n        data.columns = columns;\r\n\r\n        return data;\r\n    },\r\n\r\n    // correct tree item, remove tg_, init null item\r\n    cleanTreeList: function(list) {\r\n\r\n        if (!Util.isList(list)) {\r\n            return [];\r\n        }\r\n\r\n        const generateTreeList = (newLs, ls) => {\r\n\r\n            ls.forEach((item) => {\r\n                if (!item || typeof item !== 'object') {\r\n                    newLs.push({});\r\n                    return;\r\n                }\r\n                const newItem = this.getItemSnapshot(item);\r\n                const subs = item.subs;\r\n                if (Array.isArray(subs)) {\r\n                    newItem.subs = [];\r\n                    generateTreeList(newItem.subs, subs);\r\n                }\r\n                newLs.push(newItem);\r\n            });\r\n\r\n        };\r\n\r\n        const newList = [];\r\n        generateTreeList(newList, list);\r\n\r\n        return newList;\r\n    },\r\n\r\n    convertNumberType: function(rows, columns) {\r\n\r\n        const idList = [];\r\n        Util.forEachTree(columns, function(column) {\r\n            if (column.type === 'number' && column.id) {\r\n                idList.push(column.id);\r\n            }\r\n        });\r\n\r\n        if (!idList.length) {\r\n            return;\r\n        }\r\n\r\n        Util.forEachTree(rows, function(row) {\r\n            idList.forEach(function(key) {\r\n                row[key] = Util.convertNum(row[key]);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n};\r\n","import Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //grid column header\r\n    //after initColumnItemHandler\r\n    initHeaderHandler: function(privateColumns) {\r\n\r\n        this.initHeaderRowItem();\r\n        //from last to first, for best performance\r\n        this.viewGroupColumns.reverse();\r\n\r\n        //update width and layer\r\n        this.initGroupColumnsWidth();\r\n        this.initGroupColumnsLayer(privateColumns);\r\n    },\r\n\r\n    initHeaderRowItem: function() {\r\n        //for header formatter rowItem argument\r\n        this.headerRowItem = {\r\n            tg_index: -1,\r\n            tg_view_index: -1\r\n        };\r\n        this.viewAllColumns.forEach((c) => {\r\n            if (Util.hasOwn(c, 'id')) {\r\n                this.headerRowItem[c.id] = c.name;\r\n            }\r\n        });\r\n    },\r\n\r\n    //==============================================================================\r\n\r\n    initGroupColumnsWidth: function() {\r\n        this.viewGroupColumns.forEach((groupColumn) => {\r\n            let w = 0;\r\n            groupColumn.subs.forEach((item) => {\r\n                //do not include invisible column\r\n                if (this.isInvisible(item)) {\r\n                    return;\r\n                }\r\n                w += item.tg_width;\r\n            });\r\n            groupColumn.tg_width = w;\r\n        });\r\n    },\r\n\r\n    //==============================================================================\r\n\r\n    initGroupColumnsLayer: function(privateColumns) {\r\n\r\n        //tg_layer: reverse level, tg-h-3\r\n        //tg_combination: multiple layer, tg-h-3210\r\n\r\n        const maxLevel = this.columnsInfo.maxLevel;\r\n        //console.log(`maxLevel：${maxLevel}`);\r\n\r\n        //init column\r\n        this.viewColumns.forEach(function(columnItem) {\r\n            columnItem.tg_layer = maxLevel;\r\n            if (columnItem.tg_parent) {\r\n                columnItem.tg_parent.tg_layer = maxLevel - 1;\r\n            }\r\n        });\r\n\r\n        //sort from last to first\r\n        this.viewGroupColumns.forEach(function(groupColumn) {\r\n            const groupLayer = groupColumn.tg_layer;\r\n            const groupParent = groupColumn.tg_parent;\r\n            if (groupParent) {\r\n                let parentLayer = groupLayer - 1;\r\n                if (Util.isNum(groupParent.tg_layer)) {\r\n                    parentLayer = Math.min(parentLayer, groupParent.tg_layer);\r\n                }\r\n                groupParent.tg_layer = parentLayer;\r\n            }\r\n        });\r\n\r\n        //console.log(this.viewColumns, this.viewGroupColumns);\r\n\r\n        this.initColumnRowspanHandler(privateColumns, 0);\r\n\r\n    },\r\n\r\n    initColumnRowspanHandler: function(columns, minLayer) {\r\n        columns.forEach((columnItem) => {\r\n            const rowspan = this.initColumnCombinationHandler(columnItem, minLayer);\r\n            if (columnItem.tg_group) {\r\n                this.initColumnRowspanHandler(columnItem.subs, minLayer + rowspan);\r\n            }\r\n        });\r\n    },\r\n\r\n    initColumnCombinationHandler: function(columnItem, minLayer) {\r\n        const list = [];\r\n        const maxLayer = columnItem.tg_layer;\r\n        while (minLayer <= maxLayer) {\r\n            list.push(minLayer);\r\n            minLayer += 1;\r\n        }\r\n        //tg-h-3210\r\n        list.reverse();\r\n        const rowspan = list.length;\r\n\r\n        //combination must be string\r\n        let combination = '';\r\n        if (rowspan > 1) {\r\n            combination = list.join('');\r\n        }\r\n        columnItem.tg_combination = combination;\r\n\r\n        return rowspan;\r\n    }\r\n\r\n};\r\n","import CONST from '../core/const.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    initOptionHandler: function() {\r\n\r\n        //merge option from data.option first\r\n        this.initOptionFromData();\r\n\r\n        //must be h or v\r\n        if (this.option.sortIndicator !== 'v') {\r\n            this.option.sortIndicator = 'h';\r\n        }\r\n\r\n        this.initOptionFrozen();\r\n        this.initOptionScrollbar();\r\n        this.initOptionContainer();\r\n\r\n        this.initBindWindowResize();\r\n        this.initBindContainerResize();\r\n\r\n        return this;\r\n    },\r\n\r\n    initOptionFromData() {\r\n        const dataOption = this.data.option;\r\n        if (!dataOption) {\r\n            return;\r\n        }\r\n        const list = [this.option, dataOption];\r\n        const t = this.getThemeOptions(dataOption.theme);\r\n        if (t) {\r\n            list.push(t);\r\n        }\r\n        this.option = Util.merge.apply(Util, list);\r\n    },\r\n\r\n    initOptionFrozen: function() {\r\n        const o = this.option;\r\n\r\n        this.frozenInfo = {\r\n            //index\r\n            column: -1,\r\n            row: -1,\r\n            //length\r\n            columns: 0,\r\n            rows: 0,\r\n            //position\r\n            bottom: Boolean(o.frozenBottom),\r\n            right: Boolean(o.frozenRight)\r\n        };\r\n\r\n        //init frozen column\r\n        let fc = Util.toNum(o.frozenColumn, true);\r\n        fc = Util.clamp(fc, -1, o.frozenColumnMax);\r\n        //left private columns fixing, not for right\r\n        if (fc > -1 && !this.frozenInfo.right) {\r\n            if (o.selectVisible) {\r\n                fc += 1;\r\n            }\r\n            if (o.rowDragVisible) {\r\n                fc += 1;\r\n            }\r\n            if (o.rowNumberVisible) {\r\n                fc += 1;\r\n            }\r\n        }\r\n        this.frozenInfo.column = fc;\r\n\r\n        if (fc > -1) {\r\n            this.frozenInfo.columns = fc + 1;\r\n        } else {\r\n            this.frozenInfo.columns = 0;\r\n            this.frozenInfo.right = false;\r\n        }\r\n\r\n\r\n        //init frozen row\r\n        let fr = Util.toNum(o.frozenRow, true);\r\n        fr = Util.clamp(fr, -1, o.frozenRowMax);\r\n        this.frozenInfo.row = fr;\r\n\r\n        if (fr > -1) {\r\n            this.frozenInfo.rows = fr + 1;\r\n        } else {\r\n            this.frozenInfo.rows = 0;\r\n            this.frozenInfo.bottom = false;\r\n        }\r\n\r\n    },\r\n\r\n    initOptionScrollbar: function() {\r\n        const o = this.option;\r\n\r\n        if ((o.scrollbarType === 'auto' && Util.isMobile()) || ['mobile', 'touch'].includes(o.scrollbarType)) {\r\n            o.scrollbarFade = true;\r\n            o.scrollbarSize = 6;\r\n            o.scrollbarRound = true;\r\n        }\r\n\r\n        const size = Util.toNum(o.scrollbarSize);\r\n        this.scrollbarSizeH = size;\r\n        if (Util.isNum(o.scrollbarSizeH)) {\r\n            this.scrollbarSizeH = o.scrollbarSizeH;\r\n        }\r\n\r\n        this.scrollbarSizeV = size;\r\n        if (Util.isNum(o.scrollbarSizeV)) {\r\n            this.scrollbarSizeV = o.scrollbarSizeV;\r\n        }\r\n\r\n    },\r\n\r\n    initOptionContainer: function() {\r\n\r\n        this.$container.attr('id', this.id);\r\n\r\n        const o = this.option;\r\n\r\n        // remove previous first\r\n        this.$container.removeClass();\r\n\r\n        const list = [CONST.NS, this.id, `tg-${o.theme}`, o.className];\r\n\r\n        if (!o.textSelectable) {\r\n            list.push('tg-text-unselectable');\r\n        }\r\n\r\n        //console.log(list);\r\n        this.$container.addClass(Util.classMap(list));\r\n\r\n    }\r\n\r\n};\r\n\r\n","\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    initBindWindowResize: function() {\r\n        //require unbind first\r\n        this.unbindWindowResize();\r\n        if (!this.option.bindWindowResize) {\r\n            return;\r\n        }\r\n        this.windowResizeEvents = {\r\n            resize: {\r\n                handler: (e) => {\r\n                    this.resize();\r\n                }\r\n            }\r\n            //no options for resize\r\n        };\r\n        Util.bindEvents(this.windowResizeEvents, window);\r\n    },\r\n\r\n    unbindWindowResize: function() {\r\n        Util.unbindEvents(this.windowResizeEvents);\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    initBindContainerResize: function() {\r\n        this.unbindContainerResize();\r\n        if (!this.option.bindContainerResize || !this.holder) {\r\n            return;\r\n        }\r\n        //failed in chrome v63\r\n        if (typeof ResizeObserver === 'undefined') {\r\n            return;\r\n        }\r\n        const isVisible = function(elem) {\r\n            return Boolean(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\r\n        };\r\n        this.resizeObserver = new ResizeObserver((entries) => {\r\n            //console.log(entries);\r\n            if (!isVisible(this.holder)) {\r\n                return;\r\n            }\r\n\r\n            this.resize();\r\n        });\r\n        this.resizeObserver.observe(this.holder);\r\n    },\r\n\r\n    unbindContainerResize: function() {\r\n        if (this.resizeObserver) {\r\n            this.resizeObserver.disconnect();\r\n            this.resizeObserver = null;\r\n        }\r\n    }\r\n};\r\n","import Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //only create rows, diff with init columns\r\n    initRowsHandler: function() {\r\n        this.rows = this.data.rows;\r\n        this.rowsInfo = this.initTreeInfo(this.rows, this.frozenInfo.row);\r\n        // depends others, can NOT create view rows here\r\n        // do NOT create view rows here\r\n        // do NOT init option here\r\n    },\r\n\r\n    getRows: function() {\r\n        return this.rows;\r\n    },\r\n\r\n    getViewRows: function() {\r\n        return this.viewRows;\r\n    },\r\n\r\n    createViewRows: function() {\r\n\r\n        this.initRowFilterHandler();\r\n\r\n        const viewRows = [];\r\n\r\n        //update row index\r\n        const rowNumberFilter = this.getRowNumberFilter();\r\n\r\n        let rowNumber = 1;\r\n        const rowNumberHandler = (rowItem, i) => {\r\n            if (rowNumberFilter.call(this, rowItem, i)) {\r\n                rowItem.tg_row_number = rowNumber;\r\n                rowNumber += 1;\r\n                return;\r\n            }\r\n            rowItem.tg_row_number = '';\r\n        };\r\n\r\n        const digList = (ls, parent, collapsed) => {\r\n            if (!Util.isList(ls)) {\r\n                return;\r\n            }\r\n\r\n            let list_index = 0;\r\n            let list_item;\r\n            ls.forEach((rowItem) => {\r\n\r\n                if (this.isInvisible(rowItem)) {\r\n                    return;\r\n                }\r\n\r\n                //update list index, both and group (in list)\r\n                rowItem.tg_list_index = list_index;\r\n                list_index += 1;\r\n\r\n                rowItem.tg_list_last = false;\r\n                list_item = rowItem;\r\n\r\n                //only row formatter\r\n                this.gridRowItemHandler(rowItem);\r\n\r\n                //need row number even collapsed, and need frozen info first too\r\n                rowNumberHandler(rowItem, list_index);\r\n\r\n                if (!collapsed) {\r\n                    viewRows.push(rowItem);\r\n                }\r\n\r\n                const rowCollapsed = collapsed || (rowItem.tg_group && rowItem.collapsed);\r\n                digList(rowItem.subs, rowItem, rowCollapsed);\r\n\r\n            });\r\n\r\n            if (list_item) {\r\n                list_item.tg_list_last = true;\r\n            }\r\n\r\n        };\r\n\r\n        digList(this.rows);\r\n\r\n        this.viewRows = viewRows;\r\n        //console.log(this.viewRows, rows);\r\n\r\n        let top = 0;\r\n        let lastItem;\r\n        this.initViewList(this.viewRows, (rowItem, i) => {\r\n            rowItem.tg_top = top;\r\n            this.initRowHeight(rowItem);\r\n            top += this.getRowHeight(rowItem);\r\n\r\n            //fix group line\r\n            rowItem.tg_group_line = false;\r\n            if (rowItem.collapsed) {\r\n                rowItem.tg_group_line = true;\r\n            }\r\n\r\n            if (lastItem) {\r\n                if (rowItem.tg_group || rowItem.tg_level < lastItem.tg_level) {\r\n                    lastItem.tg_group_line = true;\r\n                }\r\n            }\r\n\r\n            lastItem = rowItem;\r\n\r\n        });\r\n\r\n        return this;\r\n    },\r\n\r\n    getRowNumberFilter: function() {\r\n        const rowNumberFilter = this.option.rowNumberFilter;\r\n        if (typeof rowNumberFilter === 'function') {\r\n            return rowNumberFilter;\r\n        }\r\n        return function(rowItem, i) {\r\n            if (rowItem.tg_group || rowItem.tg_frozen) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n    },\r\n\r\n    //current for formatter\r\n    gridRowItemHandler: function(row) {\r\n\r\n        let formatter = row.formatter;\r\n        if (!formatter) {\r\n            return;\r\n        }\r\n        if (typeof formatter === 'function') {\r\n            row.tg_formatter = formatter.bind(this);\r\n            return;\r\n        }\r\n\r\n        // default string formatter is not required\r\n        formatter = this.getFormatter(formatter);\r\n        if (formatter) {\r\n            row.tg_formatter = formatter;\r\n        }\r\n\r\n    },\r\n\r\n    //========================================================================================\r\n\r\n    initRowHeight: function(item) {\r\n        if (!Util.hasOwn(item, 'height')) {\r\n            return;\r\n        }\r\n        if (Util.isNum(item.height)) {\r\n            item.tg_height = item.height | 0;\r\n            return;\r\n        }\r\n        //console.log('item.height', item.height);\r\n        //height is column id, using this column value to compute height\r\n        const column = this.getColumnItem(item.height);\r\n        if (column) {\r\n            const h = this.getComputedRowHeight(item, column);\r\n            if (Util.isNum(h)) {\r\n                item.tg_height = h;\r\n            }\r\n        }\r\n    },\r\n\r\n    getComputedRowHeight: function(rowItem, columnItem) {\r\n        const dh = this.option.rowHeight;\r\n        const str = rowItem[columnItem.id] || '';\r\n        const len = (`${str}`).length;\r\n        //a char average width 5px\r\n        const width = len * 5;\r\n        if (width <= columnItem.tg_width) {\r\n            return dh;\r\n        }\r\n        //text line height is 16 when font size is 14px\r\n        //padding top and bottom is 6\r\n        return Math.ceil(width / columnItem.tg_width) * 16 + 6;\r\n    },\r\n\r\n    setRowHeight: function(rowInfo, heightInfo) {\r\n\r\n        const rowList = Util.toList(rowInfo);\r\n        if (!rowList.length) {\r\n            return this;\r\n        }\r\n\r\n        const heightList = Util.toList(heightInfo);\r\n        heightList.length = rowList.length;\r\n\r\n        const defaultHeight = this.option.rowHeight;\r\n        rowList.forEach((rowIndex, i) => {\r\n            const rowItem = this.getRowItem(rowIndex);\r\n            if (!rowItem) {\r\n                return;\r\n            }\r\n            const h = heightList[i] || defaultHeight;\r\n            rowItem.height = h;\r\n            delete rowItem.tg_height;\r\n            this.initRowHeight(rowItem);\r\n            this.flushRowFrom(rowItem.tg_view_index);\r\n        });\r\n\r\n        this.render('rows');\r\n\r\n        return this;\r\n    },\r\n\r\n    //=============================================================================\r\n    //filter handler\r\n\r\n    initRowFilterHandler: function() {\r\n\r\n        const rowFilter = this.option.rowFilter;\r\n        if (typeof rowFilter !== 'function') {\r\n            return;\r\n        }\r\n        //return true:visible or false:invisible\r\n        this.forEachRow(function(rowItem, i, parent) {\r\n\r\n            //already invisible\r\n            if (rowItem.tg_invisible) {\r\n                return;\r\n            }\r\n\r\n            //visible rows for filter only\r\n            const filtered = !rowFilter.call(this, rowItem, i, parent);\r\n            rowItem.tg_filtered = filtered;\r\n\r\n            //parent should be visible if any sub is visible\r\n            if (!filtered) {\r\n                let current = rowItem;\r\n                while (current.tg_parent) {\r\n                    current.tg_parent.tg_filtered = false;\r\n                    current = current.tg_parent;\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    //row subs\r\n    setRowSubs: function(rowIndex, subs) {\r\n        const item = this.getRowItem(rowIndex);\r\n        if (!item) {\r\n            return this;\r\n        }\r\n        //update data\r\n        if (Util.isList(subs)) {\r\n            //open subs default\r\n            item.collapsed = false;\r\n        }\r\n        item.subs = subs;\r\n        this.initRowsHandler();\r\n        //render\r\n        this.flushRowFrom(item.tg_view_index);\r\n        this.render('rows');\r\n        return this;\r\n    },\r\n\r\n    //dynamic set new row list\r\n    setRows: function(rows) {\r\n        this.data.rows = Util.toList(rows);\r\n        this.initRowsHandler();\r\n        this.flushBody();\r\n        this.render('rows');\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    getRowParentSubs: function(rowItem) {\r\n        return rowItem.tg_parent ? rowItem.tg_parent.subs : this.rows;\r\n    }\r\n\r\n};\r\n","import Util from '../core/util.js';\r\nimport $ from '../core/query.js';\r\n\r\nexport default {\r\n\r\n    setDefaultLoading: function(defaultLoading, option = {}) {\r\n        if (!defaultLoading) {\r\n            return;\r\n        }\r\n\r\n        const loadingStyle = defaultLoading.style;\r\n\r\n        if (option.size) {\r\n            loadingStyle.width = option.size;\r\n            loadingStyle.height = option.size;\r\n        }\r\n        if (option.color) {\r\n            loadingStyle.color = option.color;\r\n        }\r\n\r\n        if (!option.size && !option.color) {\r\n            defaultLoading.removeAttribute('style');\r\n        }\r\n\r\n        if (option.fast) {\r\n            defaultLoading.classList.add('tg-loading-fast');\r\n        } else {\r\n            defaultLoading.classList.remove('tg-loading-fast');\r\n        }\r\n\r\n    },\r\n\r\n    getDefaultLoading: function(option) {\r\n        if (!this.defaultLoading) {\r\n            this.defaultLoading = this.$container.find('.tg-loading-default').get(0);\r\n        }\r\n        this.setDefaultLoading(this.defaultLoading, option);\r\n        return this.defaultLoading;\r\n    },\r\n\r\n    getLoadingHolder: function() {\r\n        if (this.$container) {\r\n            return this.$container.find('.tg-loading');\r\n        }\r\n        return $();\r\n    },\r\n\r\n    setLoading: function($elem) {\r\n        if (!this.$container) {\r\n            return this;\r\n        }\r\n\r\n        const holder = this.getLoadingHolder().get(0);\r\n\r\n        if (typeof $elem === 'function') {\r\n            $elem = $elem.call(this, holder);\r\n        }\r\n\r\n        if (Util.isObject($elem)) {\r\n            $elem = this.getDefaultLoading($elem);\r\n        }\r\n\r\n        if (!$elem) {\r\n            $elem = this.getDefaultLoading();\r\n        }\r\n\r\n        this.renderNodeContent(holder, $elem);\r\n\r\n        return this;\r\n    },\r\n\r\n    showLoading: function() {\r\n        this.getLoadingHolder().show();\r\n        return this;\r\n    },\r\n\r\n    hideLoading: function() {\r\n        this.getLoadingHolder().hide();\r\n        return this;\r\n    }\r\n};\r\n","import $ from '../core/query.js';\r\nimport Util from '../core/util.js';\r\nconst Node = {\r\n\r\n    //high performance render node content\r\n    renderNodeContent: function(node, content) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //support DOM\r\n        if (content && content.nodeType) {\r\n            this.emptyNode(node);\r\n            node.appendChild(content);\r\n            return;\r\n        }\r\n\r\n        //support array DOM\r\n        if (Array.isArray(content)) {\r\n            this.emptyNode(node);\r\n            content.forEach((item) => {\r\n                if (item && item.nodeType) {\r\n                    node.appendChild(item);\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (typeof content === 'undefined') {\r\n            content = '';\r\n        }\r\n\r\n        //fast render html\r\n        node.innerHTML = content;\r\n\r\n    },\r\n\r\n    emptyNode: function(node) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n        //fast empty children, 400 times faster than innerHTML = ''\r\n        while (node.firstChild) {\r\n            node.removeChild(node.firstChild);\r\n        }\r\n    },\r\n\r\n    removeNode: function(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n    },\r\n\r\n    appendNode: function(parentNode, node) {\r\n        if (parentNode && node) {\r\n            parentNode.appendChild(node);\r\n        }\r\n    },\r\n\r\n    createElement: function(name, attr, children) {\r\n        const elem = document.createElement(name);\r\n\r\n        if (attr) {\r\n            Object.keys(attr).forEach(function(k) {\r\n                const v = attr[k];\r\n                if (typeof v !== 'undefined') {\r\n                    elem.setAttribute(k, v);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (!Util.isArray(children)) {\r\n            children = [children];\r\n        }\r\n\r\n        //must be same type in list\r\n        let html = '';\r\n        children.forEach(function(child) {\r\n            //append DOM\r\n            if (child && child.nodeType) {\r\n                elem.appendChild(child);\r\n                return;\r\n            }\r\n\r\n            //append string, number, 0, true/false, null\r\n            if (typeof child !== 'undefined') {\r\n                html += child;\r\n            }\r\n\r\n        });\r\n\r\n        if (html) {\r\n            elem.innerHTML = html;\r\n        }\r\n\r\n        return elem;\r\n    },\r\n\r\n    //=========================================================================================================\r\n    //node api\r\n\r\n    find: function(context, container) {\r\n        return $(container || this.$container).find(context);\r\n    },\r\n\r\n    //return Query\r\n    getRowNodes: function(rowIndex) {\r\n        const item = this.getRowItem(rowIndex);\r\n        if (!item) {\r\n            return;\r\n        }\r\n        return this.getRowNodesByIndex(item.tg_view_index);\r\n    },\r\n\r\n    //return Element\r\n    getCellNode: function(rowIndex, columnIndex) {\r\n        const rowItem = this.getRowItem(rowIndex);\r\n        if (!rowItem) {\r\n            return;\r\n        }\r\n        const columnItem = this.getColumnItem(columnIndex);\r\n        if (!columnItem) {\r\n            return;\r\n        }\r\n        return this.getCellNodeByIndex(rowItem.tg_view_index, columnItem.tg_view_index);\r\n    },\r\n\r\n    getHeaderItemNode: function(columnInfo) {\r\n        const columnItem = this.getColumnItem(columnInfo);\r\n        if (!columnItem) {\r\n            return;\r\n        }\r\n        return this.getHeaderCache(columnItem.tg_view_index);\r\n    },\r\n\r\n    getColumnHeaderNode: function(columnIndex) {\r\n        const headerItemNode = this.getHeaderItemNode(columnIndex);\r\n        if (!headerItemNode) {\r\n            return;\r\n        }\r\n        return headerItemNode.querySelector('.tg-column-header');\r\n    }\r\n\r\n};\r\n\r\nexport default Node;\r\n","import E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    render: function() {\r\n        if (!this.asyncRender) {\r\n            this.asyncRender = Util.microtask(this.renderSync);\r\n        }\r\n        this.asyncRender.apply(this, arguments);\r\n    },\r\n\r\n    renderSync: function() {\r\n\r\n        this.renderStartedTimestamp = Date.now();\r\n\r\n        const renderSettings = this.getRenderSettings.apply(this, arguments);\r\n        // the render type determines the scope\r\n        this.renderSettings = renderSettings;\r\n        //console.log('renderSettings', renderSettings);\r\n\r\n        // rerender header and body\r\n        // rerender(), setData(), setOption(), setFormatter()\r\n        if (renderSettings.type === 'all') {\r\n            this.flushBody();\r\n            //reset + init option/formatter/columns/viewColumns/rows/onInit/scrollPane/columnLine/events\r\n            this.initDataHandler();\r\n            this.renderHeader();\r\n            this.updateViewRowsAndSize();\r\n            this.renderBody(renderSettings);\r\n            return this;\r\n        }\r\n\r\n\r\n        // columns changed\r\n        // column collapsed\r\n        if (renderSettings.type === 'columns') {\r\n            this.flushBody();\r\n            this.initColumnsHandler();\r\n            this.renderHeader();\r\n            this.updateViewRowsAndSize();\r\n            this.renderBody(renderSettings);\r\n            return this;\r\n        }\r\n\r\n\r\n        // rows === flush rows self partly + update view rows + resize\r\n        // update but self flush (partly)\r\n        // rows changed\r\n        if (renderSettings.type === 'rows') {\r\n            this.updateViewRowsAndSize();\r\n            this.renderBody(renderSettings);\r\n            return this;\r\n        }\r\n\r\n\r\n        // resize() only resize, no data update\r\n        if (renderSettings.type === 'resize') {\r\n            this.resizeHandler();\r\n            this.renderBody(renderSettings);\r\n            return this;\r\n        }\r\n\r\n\r\n        // default mini render\r\n        // render scroll area, no data update, no resize\r\n        this.renderBody(renderSettings);\r\n\r\n        return this;\r\n    },\r\n\r\n    getRenderSettings: function(settings) {\r\n\r\n        const renderSettings = {\r\n            type: this.renderType,\r\n            scrollRow: null,\r\n            scrollColumn: null\r\n        };\r\n\r\n        // reset to default nothing\r\n        this.renderType = '';\r\n\r\n        if (typeof settings === 'string') {\r\n            renderSettings.type = settings;\r\n        } else if (settings) {\r\n            Object.assign(renderSettings, settings);\r\n        }\r\n\r\n        if (!this.headerCreated) {\r\n            renderSettings.type = 'all';\r\n        }\r\n\r\n        return renderSettings;\r\n    },\r\n\r\n    renderPositionHandler: function(scrollRow, scrollColumn) {\r\n        //console.log(scrollRow, scrollColumn);\r\n        this.scrollIntoViewChanged = false;\r\n        if (scrollRow) {\r\n            this.scrollRowIntoViewHandler(scrollRow);\r\n        }\r\n        if (scrollColumn) {\r\n            this.scrollColumnIntoViewHandler(scrollColumn);\r\n        }\r\n        if (this.scrollIntoViewChanged) {\r\n            this.scrollPane.setPosition(this.scrollLeft, this.scrollTop);\r\n        }\r\n    },\r\n\r\n    renderBody: function(renderSettings) {\r\n\r\n        this.renderPositionHandler(renderSettings.scrollRow, renderSettings.scrollColumn);\r\n\r\n        //update row offset first\r\n        this.scrollTopOffset = this.scrollPane.getScrollTopOffset();\r\n\r\n        const viewport = this.getViewport();\r\n\r\n        //keep for current viewport property\r\n        this.viewport = viewport;\r\n\r\n        //clean out of viewport\r\n        this.flushWithViewport();\r\n\r\n        //update top after clear row cache\r\n        if (this.previousScrollTopOffset !== this.scrollTopOffset) {\r\n            this.previousScrollTopOffset = this.scrollTopOffset;\r\n            this.updateRowCacheTopOffset();\r\n        }\r\n\r\n        //console.log('viewport rows/columns:', viewport.rows, viewport.columns);\r\n        this.renderRows(viewport.rows);\r\n        this.renderCells(viewport.rows, viewport.columns);\r\n\r\n        this.renderUpdatedTimestamp = Date.now();\r\n        this.renderDuration = this.renderUpdatedTimestamp - this.renderStartedTimestamp;\r\n        //console.log(this.renderDuration);\r\n\r\n        // updated every time\r\n        // first triggered, because onNextUpdated could be in next events with side effects\r\n        this.trigger(E.onUpdated, viewport);\r\n\r\n        //complete only one time\r\n        if (!this.firstUpdated) {\r\n            this.firstUpdated = true;\r\n            this.trigger(E.onFirstUpdated, viewport);\r\n        }\r\n\r\n        //update internal layout and outside size if changed\r\n        this.layoutEventHandler();\r\n        this.resizeEventHandler();\r\n\r\n        return this;\r\n    },\r\n\r\n    rerender: function() {\r\n        this.render('all');\r\n        return this;\r\n    }\r\n\r\n};\r\n","import E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    resize: function() {\r\n        // starts with \"async\" for cancel all together\r\n        if (!this.asyncResize) {\r\n            this.asyncResize = Util.throttle(this.resizeSync, 100);\r\n        }\r\n        this.asyncResize.apply(this, arguments);\r\n        return this;\r\n    },\r\n\r\n    // holder\r\n    // container\r\n    // header/body\r\n    // pane\r\n    // scrollPane\r\n    // css rules\r\n    resizeSync: function() {\r\n\r\n        if (!this.headerCreated) {\r\n            return this;\r\n        }\r\n\r\n        //console.log('resize');\r\n\r\n        this.resizeHolderHandler.apply(this, arguments);\r\n\r\n        //do not check if render not complete,\r\n        if (this.firstUpdated && this.isHolderInvisible()) {\r\n            //console.log('holder size 0, ignore resize');\r\n            return this;\r\n        }\r\n\r\n        this.render('resize');\r\n\r\n        return this;\r\n    },\r\n\r\n    resizeHolderHandler(w, h) {\r\n        if (arguments.length === 0) {\r\n            return;\r\n        }\r\n        if (arguments.length === 1) {\r\n            if (w && typeof w === 'object') {\r\n                this.$holder.css(w);\r\n                return;\r\n            }\r\n            this.$holder.css({\r\n                width: w\r\n            });\r\n            return;\r\n        }\r\n        this.$holder.css({\r\n            width: w,\r\n            height: h\r\n        });\r\n    },\r\n\r\n    isHolderInvisible() {\r\n        const hw = this.$holder.width();\r\n        const hh = this.$holder.height();\r\n        if (hw && hh) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n\r\n    //===================================================================================\r\n\r\n    resizeHandler: function() {\r\n        // update global container size\r\n        this.containerWidth = this.$container.width();\r\n        this.containerHeight = this.$container.height();\r\n        //same width\r\n        this.headerWidth = this.containerWidth;\r\n        this.bodyWidth = this.containerWidth;\r\n\r\n        //reset column width and update width for both header and body size\r\n        this.updateTotalColumnsWidth();\r\n\r\n        //then update DOM size\r\n        this.resizeHeaderHandler();\r\n        this.resizeBodyHandler();\r\n\r\n    },\r\n\r\n    //===================================================================================\r\n\r\n    layoutEventHandler: function() {\r\n        const previousLayout = this.previousLayout || {};\r\n        const layout = {\r\n            headerWidth: this.headerWidth,\r\n            headerHeight: this.headerHeight,\r\n            bodyWidth: this.bodyWidth,\r\n            bodyHeight: this.bodyHeight\r\n        };\r\n\r\n        if (Object.values(layout).join('') === Object.values(previousLayout).join('')) {\r\n            return;\r\n        }\r\n\r\n        this.previousLayout = layout;\r\n        this.trigger(E.onLayout, Util.merge({\r\n            previous: previousLayout\r\n        }, layout));\r\n\r\n    },\r\n\r\n    resizeEventHandler: function() {\r\n        const previousSize = this.previousSize || {};\r\n        const size = {\r\n            width: this.containerWidth,\r\n            height: this.containerHeight\r\n        };\r\n\r\n        if (Object.values(size).join('') === Object.values(previousSize).join('')) {\r\n            return;\r\n        }\r\n\r\n        this.previousSize = size;\r\n        this.trigger(E.onResize, Util.merge({\r\n            previous: previousSize\r\n        }, size));\r\n\r\n    },\r\n\r\n    //==========================================================================================\r\n    //only height need update, width is same as container always\r\n    resizeHeaderHandler: function() {\r\n\r\n        this.initHeaderLayerHeight();\r\n\r\n        //fix auto height before first using\r\n        const o = this.option;\r\n        //auto close autoHeight when rows length > 5000\r\n        if (o.autoHeight && this.viewRows.length > 5000) {\r\n            o.autoHeight = false;\r\n        }\r\n\r\n        //update height\r\n        this.headerHeight = 0;\r\n        //require a valid container height\r\n        if (o.headerVisible && (this.containerHeight > 0 || o.autoHeight)) {\r\n            this.updateHeaderTableHeight();\r\n        }\r\n\r\n        //update width/height\r\n        this.$headerFrame.css({\r\n            width: this.headerWidth,\r\n            height: this.headerHeight\r\n        });\r\n\r\n    },\r\n\r\n    updateHeaderTableHeight: function() {\r\n\r\n        let totalLayerHeight = 0;\r\n        Object.keys(this.headerLayerHeight).forEach((k) => {\r\n            totalLayerHeight += this.headerLayerHeight[k];\r\n        });\r\n\r\n        const TL = this.$headerL.find('.tg-header-table');\r\n        const TR = this.$headerR.find('.tg-header-table');\r\n\r\n        TL.css({\r\n            height: totalLayerHeight\r\n        });\r\n        TR.css({\r\n            height: totalLayerHeight\r\n        });\r\n\r\n        this.headerHeight = totalLayerHeight;\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    // update pane height for all rows\r\n    // for collapse and expand too\r\n    resizeBodyHandler: function() {\r\n\r\n        //update 3 state: h/v scrollbar and hide scrollPane\r\n        this.updateScrollState();\r\n\r\n        //update body size\r\n        //body height depends on header height and auto height\r\n        this.bodyHeight = this.containerHeight - this.headerHeight;\r\n        this.$bodyFrame.css({\r\n            width: this.bodyWidth,\r\n            height: this.bodyHeight\r\n        });\r\n\r\n        //update pane size\r\n        this.updatePaneWidth();\r\n        this.updatePaneHeight();\r\n\r\n        // update width first\r\n        this.updateCanvasWidth();\r\n        // then update height\r\n        this.updateCanvasHeight();\r\n\r\n        // update scrollPane\r\n        this.updateScrollPane();\r\n\r\n        this.updateCssRules();\r\n\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    updatePaneWidth: function() {\r\n\r\n        //no frozen pane\r\n        let paneWidthL = this.bodyWidth;\r\n        let paneWidthR = 0;\r\n\r\n        //has frozen pane\r\n        if (this.frozenInfo.columns) {\r\n\r\n            const scrollbarW = this.getScrollbarWidth();\r\n            if (this.frozenInfo.right) {\r\n                paneWidthR = this.columnsWidthR + scrollbarW;\r\n                paneWidthL = this.bodyWidth - paneWidthR;\r\n            } else {\r\n                paneWidthL = this.columnsWidthL;\r\n                paneWidthR = this.bodyWidth - paneWidthL;\r\n            }\r\n\r\n            if (this.scrollPaneHidden) {\r\n                if (this.frozenInfo.right) {\r\n                    if (paneWidthL <= 0) {\r\n                        paneWidthL = 0;\r\n                    }\r\n                    paneWidthR = Math.max(0, this.bodyWidth - paneWidthL);\r\n                } else {\r\n                    if (paneWidthR < scrollbarW) {\r\n                        paneWidthR = scrollbarW;\r\n                    }\r\n                    paneWidthL = Math.max(0, this.bodyWidth - paneWidthR);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.paneWidthL = paneWidthL;\r\n        this.paneWidthR = paneWidthR;\r\n\r\n        //console.log(\"paneWidthL: \" + paneWidthL, \"paneWidthR: \" + paneWidthR);\r\n\r\n        this.$paneHL.css({\r\n            left: 0,\r\n            width: this.paneWidthL\r\n        });\r\n        this.$paneHR.css({\r\n            left: this.paneWidthL,\r\n            width: this.paneWidthR\r\n        });\r\n\r\n        this.$paneTL.css({\r\n            left: 0,\r\n            width: this.paneWidthL\r\n        });\r\n        this.$paneTR.css({\r\n            left: this.paneWidthL,\r\n            width: this.paneWidthR\r\n        });\r\n\r\n        this.$paneBL.css({\r\n            left: 0,\r\n            width: this.paneWidthL\r\n        });\r\n        this.$paneBR.css({\r\n            left: this.paneWidthL,\r\n            width: this.paneWidthR\r\n        });\r\n\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    updatePaneHeight: function() {\r\n\r\n        let paneHeightT = this.bodyHeight;\r\n        let paneHeightB = 0;\r\n\r\n        if (this.frozenInfo.rows) {\r\n            if (this.frozenInfo.bottom) {\r\n                const scrollbarH = this.getScrollbarHeight();\r\n                paneHeightT = this.bodyHeight - this.frozenRowsHeight - scrollbarH;\r\n                paneHeightB = this.frozenRowsHeight + scrollbarH;\r\n            } else {\r\n                paneHeightT = this.frozenRowsHeight;\r\n                paneHeightB = this.bodyHeight - this.frozenRowsHeight;\r\n            }\r\n        }\r\n\r\n        this.paneHeightT = paneHeightT;\r\n        this.paneHeightB = paneHeightB;\r\n\r\n        //resize pane\r\n        this.$paneTL.css({\r\n            top: 0,\r\n            height: this.paneHeightT\r\n        });\r\n        this.$paneTR.css({\r\n            top: 0,\r\n            height: this.paneHeightT\r\n        });\r\n        this.$paneBL.css({\r\n            top: this.paneHeightT,\r\n            height: this.paneHeightB\r\n        });\r\n        this.$paneBR.css({\r\n            top: this.paneHeightT,\r\n            height: this.paneHeightB\r\n        });\r\n\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    updateCanvasWidth: function() {\r\n\r\n        //new width\r\n        const bodyWidthL = this.columnsWidthL;\r\n        const bodyWidthR = this.columnsWidthR;\r\n\r\n        this.bodyWidthChanged = false;\r\n        if (bodyWidthL !== this.bodyWidthL || bodyWidthR !== this.bodyWidthR) {\r\n            this.bodyWidthL = bodyWidthL;\r\n            this.bodyWidthR = bodyWidthR;\r\n            this.bodyWidthChanged = true;\r\n            this.cssRulesInvalid = true;\r\n        }\r\n\r\n        //console.log(\"bodyWidthL: \" + this.bodyWidthL, \"bodyWidthR: \" + this.bodyWidthR);\r\n\r\n        //scrollStateChanged to fix frozen row right blank\r\n        if (this.bodyWidthChanged || this.scrollStateChanged) {\r\n            this.updateHeaderCanvasWidth();\r\n            this.updateBodyCanvasWidth();\r\n        }\r\n\r\n    },\r\n\r\n    updateCanvasHeight: function() {\r\n\r\n        //new height\r\n        let bodyHeightT;\r\n        let bodyHeightB;\r\n\r\n        if (this.frozenInfo.rows) {\r\n            if (this.frozenInfo.bottom) {\r\n                bodyHeightT = this.scrollRowsHeight;\r\n                bodyHeightB = this.frozenRowsHeight;\r\n            } else {\r\n                bodyHeightT = this.frozenRowsHeight;\r\n                bodyHeightB = this.scrollRowsHeight;\r\n            }\r\n        } else {\r\n            bodyHeightT = this.totalRowsHeight;\r\n            bodyHeightB = 0;\r\n        }\r\n\r\n        this.bodyHeightT = bodyHeightT;\r\n        this.bodyHeightB = bodyHeightB;\r\n\r\n        this.updateBodyCanvasHeight();\r\n\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    updateHeaderCanvasWidth: function() {\r\n        const l = this.maxLimitSize(this.bodyWidthL);\r\n        const r = this.maxLimitSize(this.bodyWidthR);\r\n        //always add scroll bar width\r\n        this.$headerL.width(l);\r\n        this.$headerR.width(r);\r\n    },\r\n\r\n    updateBodyCanvasWidth: function() {\r\n        const l = this.maxLimitSize(this.bodyWidthL);\r\n        const r = this.maxLimitSize(this.bodyWidthR);\r\n        this.$bodyTL.width(l);\r\n        this.$bodyBL.width(l);\r\n        this.$bodyTR.width(r);\r\n        this.$bodyBR.width(r);\r\n    },\r\n\r\n    updateBodyCanvasHeight: function() {\r\n        const t = this.maxLimitSize(this.bodyHeightT);\r\n        const b = this.maxLimitSize(this.bodyHeightB);\r\n        this.$bodyTL.height(t);\r\n        this.$bodyTR.height(t);\r\n        this.$bodyBL.height(b);\r\n        this.$bodyBR.height(b);\r\n    },\r\n\r\n    maxLimitSize: function(size) {\r\n        //Browser Max size limitation\r\n        //IE 1,533,917px\r\n        //Chrome 33,554,428px\r\n        //Firefox 17,895,000px\r\n        const maxSize = 1533000;\r\n        //max height fixing, IE will be blank if height is great than max size\r\n        size = Math.min(size, maxSize);\r\n        return size;\r\n    }\r\n\r\n};\r\n\r\n","import E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    addRow: function(rowInfo, parent, position, scrollTo = true) {\r\n\r\n        const rowList = this.getToBeAddedItemList(rowInfo);\r\n        if (!rowList.length) {\r\n            return false;\r\n        }\r\n\r\n        let parentItem;\r\n        if (typeof parent !== 'undefined' && parent !== null) {\r\n            parentItem = this.getRowItem(parent);\r\n            // if defined parent but not found parent item, should be invalid operation\r\n            if (!parentItem) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const subs = this.getToBeAddedParentSubs(parentItem, this.rows);\r\n        const positionIndex = this.getToBeAddedPositionIndex(position, subs);\r\n\r\n        //console.log('addRow', parentItem, positionIndex);\r\n\r\n        const args = [positionIndex, 0].concat(rowList);\r\n        subs.splice.apply(subs, args);\r\n\r\n        this.initRowsHandler();\r\n\r\n        if (parentItem) {\r\n            //force to open for scroll to render\r\n            parentItem.collapsed = false;\r\n            this.flushRowFrom(parentItem.tg_view_index + positionIndex);\r\n        } else {\r\n            //do not from 0, frozen row can not flush\r\n            this.flushRowFrom(positionIndex);\r\n        }\r\n\r\n        this.onNextUpdated(function() {\r\n            this.trigger(E.onRowAdded, rowList);\r\n        });\r\n\r\n        const renderSettings = {\r\n            type: 'rows'\r\n        };\r\n\r\n        if (scrollTo) {\r\n            renderSettings.scrollRow = rowList[rowList.length - 1];\r\n        }\r\n\r\n        this.render(renderSettings);\r\n\r\n        return true;\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    deleteRow: function(rowInfo) {\r\n        const rowList = Util.toList(rowInfo);\r\n        const deletedRowsList = [];\r\n        rowList.forEach((rowIndex) => {\r\n            const rowItem = this.getRowItem(rowIndex);\r\n            if (!rowItem) {\r\n                return;\r\n            }\r\n            // for \"onRowRemoved\" event\r\n            deletedRowsList.push(rowItem);\r\n        });\r\n\r\n        if (!deletedRowsList.length) {\r\n            return false;\r\n        }\r\n\r\n        const sortedRows = this.removeRowsHandler(deletedRowsList);\r\n\r\n        this.initRowsHandler();\r\n\r\n        const minIndex = this.getRemovedMinIndex(sortedRows);\r\n\r\n        this.flushRowFrom(minIndex);\r\n\r\n        this.onNextUpdated(function() {\r\n            this.trigger(E.onRowRemoved, deletedRowsList);\r\n        });\r\n\r\n        this.render('rows');\r\n\r\n        return true;\r\n    },\r\n\r\n    getRemovedMinIndex: function(sortedRows) {\r\n        //choose min index to flush\r\n        let minIndex = 0;\r\n\r\n        const item = sortedRows[sortedRows.length - 1];\r\n        // flush from 0 if invisible\r\n        if (this.isInvisible(item)) {\r\n            return minIndex;\r\n        }\r\n\r\n        minIndex = item.tg_view_index;\r\n        //refresh for neighbor tg-list-first and tg-list-last\r\n        if (minIndex > 0) {\r\n            minIndex -= 1;\r\n        }\r\n\r\n        //if parent collapsed\r\n        let parent = item.tg_parent;\r\n        while (parent) {\r\n            if (parent.collapsed) {\r\n                minIndex = parent.tg_view_index;\r\n                //no need refresh for neighbor if collapsed\r\n            }\r\n            parent = parent.tg_parent;\r\n        }\r\n\r\n        return minIndex;\r\n    },\r\n\r\n    removeRowsHandler: function(deletedRowsList) {\r\n        //remove with high performance, desc index\r\n        const list = [].concat(deletedRowsList);\r\n        list.sort(function(a, b) {\r\n            return b.tg_index - a.tg_index;\r\n        });\r\n\r\n        //console.log(list);\r\n        const results = [];\r\n        list.forEach((row) => {\r\n            const parentSubs = this.getRowParentSubs(row);\r\n            parentSubs.splice(row.tg_sub_index, 1);\r\n            results.push(row);\r\n        });\r\n\r\n        return results;\r\n    }\r\n\r\n};\r\n\r\n","import E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    renderCollapseAllState: function() {\r\n        if (!this.hasTreeColumn) {\r\n            return;\r\n        }\r\n        if (!this.asyncRenderCollapseAllState) {\r\n            this.asyncRenderCollapseAllState = Util.microtask(this.renderCollapseAllStateSync);\r\n        }\r\n        this.asyncRenderCollapseAllState.apply(this, arguments);\r\n    },\r\n\r\n    renderCollapseAllStateSync: function() {\r\n\r\n        // update tree indent\r\n        // setRows will not create header again\r\n        const $treeHeader = this.$header.find('.tg-tree-header');\r\n        const isTree = this.rowsInfo.isTree;\r\n        if (isTree) {\r\n            $treeHeader.addClass('tg-tree-header-indent');\r\n        } else {\r\n            $treeHeader.removeClass('tg-tree-header-indent');\r\n        }\r\n\r\n        this.renderCollapseAllIcon();\r\n\r\n    },\r\n\r\n    //========================================================================================\r\n\r\n\r\n    checkCollapseAllState: function(collapsed) {\r\n        if (collapsed === this.allRowsCollapsed) {\r\n            return;\r\n        }\r\n\r\n        //for rows first level check all group collapsed\r\n        if (collapsed) {\r\n            let i = 0;\r\n            const l = this.rows.length;\r\n            while (i < l) {\r\n                const rowItem = this.rows[i];\r\n                if (rowItem.tg_group && !rowItem.collapsed) {\r\n                    return;\r\n                }\r\n                i++;\r\n            }\r\n        } else {\r\n            let notAll = false;\r\n            this.forEachRow((rowItem) => {\r\n                if (rowItem.tg_group && rowItem.tg_subs_length && rowItem.collapsed) {\r\n                    notAll = true;\r\n                    return false;\r\n                }\r\n            });\r\n            if (notAll) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.allRowsCollapsed = collapsed;\r\n\r\n        this.renderCollapseAllIcon();\r\n\r\n    },\r\n\r\n    //========================================================================================\r\n    //tree handler collapsed\r\n\r\n    expandAllRows: function() {\r\n        return this.renderAllRowsCollapsed(false);\r\n    },\r\n\r\n    collapseAllRows: function() {\r\n        return this.renderAllRowsCollapsed(true);\r\n    },\r\n\r\n    toggleAllRows: function() {\r\n        if (this.allRowsCollapsed) {\r\n            return this.expandAllRows();\r\n        }\r\n        return this.collapseAllRows();\r\n    },\r\n\r\n    //========================================================================================\r\n\r\n    renderAllRowsCollapsed: function(collapsed) {\r\n\r\n        const toBeCollapsedList = this.updateAllRowsCollapsed(collapsed);\r\n        if (!toBeCollapsedList.length) {\r\n            return this;\r\n        }\r\n\r\n        this.flushBody();\r\n\r\n        this.onNextUpdated(() => {\r\n\r\n            this.renderCollapseAllIcon();\r\n\r\n            if (collapsed) {\r\n                this.trigger(E.onRowCollapsed, toBeCollapsedList);\r\n            } else {\r\n                this.trigger(E.onRowExpanded, toBeCollapsedList);\r\n            }\r\n\r\n        });\r\n\r\n        this.render('rows');\r\n\r\n        return this;\r\n    },\r\n\r\n    updateAllRowsCollapsed: function(collapsed) {\r\n        this.allRowsCollapsed = collapsed;\r\n        const toBeCollapsedList = [];\r\n        this.forEachRow((rowItem) => {\r\n            if (rowItem.subs && rowItem.tg_subs_length) {\r\n                if (this.isCollapsedChanged(rowItem, collapsed)) {\r\n                    rowItem.collapsed = collapsed;\r\n                    toBeCollapsedList.push(rowItem);\r\n                }\r\n            }\r\n        });\r\n        return toBeCollapsedList;\r\n    },\r\n\r\n    //========================================================================================\r\n\r\n    expandRow: function(rowIndex) {\r\n        const rowItem = this.getRowItem(rowIndex);\r\n        if (!rowItem) {\r\n            return this;\r\n        }\r\n\r\n        //empty group\r\n        if (this.isEmptyGroup(rowItem)) {\r\n            this.trigger(E.onRowSubsRequest, rowItem);\r\n            return this;\r\n        }\r\n\r\n        if (!this.isCollapsedChanged(rowItem, false)) {\r\n            return this;\r\n        }\r\n\r\n        rowItem.collapsed = false;\r\n\r\n        this.flushRowFrom(rowItem.tg_view_index);\r\n\r\n        this.renderCollapseIcon(rowItem);\r\n\r\n        this.onNextUpdated(() => {\r\n            this.checkCollapseAllState(false);\r\n            this.trigger(E.onRowExpanded, rowItem);\r\n        });\r\n\r\n        this.render('rows');\r\n\r\n        return this;\r\n    },\r\n\r\n    collapseRow: function(rowIndex) {\r\n        const rowItem = this.getRowItem(rowIndex);\r\n        if (!rowItem) {\r\n            return this;\r\n        }\r\n\r\n        //has subs but length = 0\r\n        if (!rowItem.subs || !rowItem.tg_subs_length) {\r\n            return this;\r\n        }\r\n\r\n        if (!this.isCollapsedChanged(rowItem, true)) {\r\n            return this;\r\n        }\r\n\r\n        rowItem.collapsed = true;\r\n\r\n        this.flushRowFrom(rowItem.tg_view_index);\r\n\r\n        this.renderCollapseIcon(rowItem);\r\n\r\n        this.onNextUpdated(() => {\r\n            this.checkCollapseAllState(true);\r\n            this.trigger(E.onRowCollapsed, rowItem);\r\n        });\r\n\r\n        this.render('rows');\r\n\r\n        return this;\r\n    },\r\n\r\n    toggleRow: function(rowIndex) {\r\n        const rowItem = this.getRowItem(rowIndex);\r\n        if (!rowItem) {\r\n            return this;\r\n        }\r\n        if (rowItem.collapsed) {\r\n            this.expandRow(rowItem);\r\n        } else {\r\n            this.collapseRow(rowItem);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    //========================================================================================\r\n\r\n    expandRowLevel: function(level) {\r\n\r\n        level = Util.toNum(level, true);\r\n\r\n        const collapsedList = [];\r\n        const expandedList = [];\r\n\r\n        this.forEachRow((rowItem) => {\r\n            if (rowItem.subs && rowItem.tg_subs_length) {\r\n                if (rowItem.tg_level <= level) {\r\n\r\n                    if (this.isCollapsedChanged(rowItem, false)) {\r\n                        rowItem.collapsed = false;\r\n                        expandedList.push(rowItem);\r\n                    }\r\n\r\n                } else {\r\n\r\n                    if (this.isCollapsedChanged(rowItem, true)) {\r\n                        rowItem.collapsed = true;\r\n                        collapsedList.push(rowItem);\r\n                    }\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        //console.log(collapsedList, expandedList);\r\n\r\n        if (!collapsedList.length && !expandedList.length) {\r\n            return this;\r\n        }\r\n\r\n        this.flushBody();\r\n\r\n        this.onNextUpdated(() => {\r\n            if (collapsedList.length) {\r\n                this.trigger(E.onRowCollapsed, collapsedList);\r\n            }\r\n            if (expandedList.length) {\r\n                this.trigger(E.onRowExpanded, expandedList);\r\n            }\r\n        });\r\n\r\n        this.render('rows');\r\n\r\n        return this;\r\n    },\r\n\r\n\r\n    //========================================================================================\r\n\r\n    renderCollapseAllIcon: function() {\r\n        if (!this.option.collapseAllVisible || !this.hasTreeColumn) {\r\n            return;\r\n        }\r\n        const $node = this.$header.find('.tg-tree-icon-all');\r\n        this.renderTreeIcon($node, this.allRowsCollapsed);\r\n    },\r\n\r\n    renderCollapseIcon: function(rowItem) {\r\n        if (!this.headerCreated) {\r\n            return;\r\n        }\r\n        const rowNodes = this.getRowNodesByIndex(rowItem.tg_view_index);\r\n        if (!rowNodes) {\r\n            return;\r\n        }\r\n        const $node = rowNodes.find('.tg-tree-icon');\r\n        this.renderTreeIcon($node, rowItem.collapsed);\r\n    },\r\n\r\n    renderTreeIcon: function($node, collapsed) {\r\n        if (!$node) {\r\n            return;\r\n        }\r\n        if (collapsed) {\r\n            $node.removeClass('tg-tree-icon-expanded').addClass('tg-tree-icon-collapsed');\r\n        } else {\r\n            $node.removeClass('tg-tree-icon-collapsed').addClass('tg-tree-icon-expanded');\r\n        }\r\n    }\r\n\r\n};\r\n","import $ from '../core/query.js';\r\nimport E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\nimport Motion from '../core/motion.js';\r\n\r\nexport default {\r\n\r\n    //row drag handler\r\n    rowDragStartHandler: function(e, d) {\r\n\r\n        //console.log(e.type, d);\r\n        const rowItem = d.rowItem;\r\n        //console.log(row);\r\n        if (!rowItem) {\r\n            //console.log('no row item');\r\n            return;\r\n        }\r\n\r\n        const dragNodes = this.getRowNodesByIndex(rowItem.tg_view_index);\r\n        if (!dragNodes) {\r\n            return;\r\n        }\r\n        d.dragCloneNodes = this.getRowDragCloneNodes(dragNodes);\r\n        d.dropPlaceholder = this.getRowDropPlaceholder(dragNodes);\r\n\r\n        //for clone row top\r\n        d.dragStartTop = this.getRowTop(rowItem);\r\n        d.dragRowHeight = this.getRowHeight(rowItem);\r\n\r\n        d.dragStartScrollTop = this.scrollTop;\r\n        d.dragMaxScrollTop = this.scrollPane.getMaxScrollTop();\r\n\r\n        this.trigger(E.onRowDragged, {\r\n            e,\r\n            rowItem\r\n        });\r\n        if (this.isDefaultPrevented(e)) {\r\n            return;\r\n        }\r\n\r\n        if (d.type === 'touch') {\r\n            Util.preventDefault(d.e);\r\n        }\r\n\r\n        this.setRowState(rowItem, 'dragging');\r\n        this.rowDropListHandler(d);\r\n        this.updateDragCloneRowPosition(d);\r\n\r\n    },\r\n\r\n    rowDragMoveHandler: function(e, d) {\r\n        if (d.type === 'touch') {\r\n            Util.preventDefault(d.e);\r\n        }\r\n\r\n        this.updateDragCloneRowPosition(d);\r\n        this.updateDragPlaceholderPosition(d);\r\n        this.rowDragAutoScrollHandler(d);\r\n    },\r\n\r\n    rowDragEndHandler: function(e, d) {\r\n        if (d.type === 'touch') {\r\n            //clean touch anyway\r\n            this.protectedItem = null;\r\n            Util.preventDefault(d.e);\r\n        }\r\n\r\n        this.autoScrollStop();\r\n\r\n        this.setRowState(d.rowItem, 'dragging', false);\r\n        if (d.dragCloneNodes) {\r\n            d.dragCloneNodes.remove();\r\n            d.dragCloneNodes = null;\r\n        }\r\n        if (d.dropPlaceholder) {\r\n            d.dropPlaceholder.remove();\r\n            d.dropPlaceholder = null;\r\n        }\r\n\r\n        if (!d.changed) {\r\n            return;\r\n        }\r\n\r\n        this.rowDropHandler(d);\r\n\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    updateDragCloneRowPosition: function(d) {\r\n        const scrollOffset = this.scrollTop - d.dragStartScrollTop;\r\n        const currentTop = d.dragStartTop + d.offsetY + scrollOffset;\r\n\r\n        const cloneRowTop = currentTop - this.scrollTopOffset;\r\n        //console.log('cloneRowTop', cloneRowTop, 'currentTop', currentTop);\r\n\r\n        //out of viewport will be removed\r\n        if (d.dragCloneNodes) {\r\n            d.dragCloneNodes.css('top', cloneRowTop).show();\r\n        }\r\n\r\n        d.dragCurrentPosition = currentTop + d.dragRowHeight * 0.5;\r\n    },\r\n\r\n    getRowDragCloneNodes: function(dragNodes) {\r\n        const dragCloneNodes = $();\r\n        dragNodes.each(function(elem) {\r\n            const node = $(elem);\r\n            const nodeCopy = node.clone();\r\n            nodeCopy.appendTo(node.parent());\r\n            dragCloneNodes.add(nodeCopy);\r\n        });\r\n        dragCloneNodes.addClass('tg-clone').hide();\r\n        return dragCloneNodes;\r\n    },\r\n\r\n    getRowDropPlaceholder: function(dragNodes) {\r\n        const dropPlaceholder = $();\r\n        dragNodes.each(function(elem) {\r\n            const node = $(elem);\r\n            const holder = $('<div/>').addClass('tg-row-placeholder').hide();\r\n            const container = node.parent();\r\n            //remove previous first\r\n            container.find('.tg-row-placeholder').remove();\r\n            holder.appendTo(container);\r\n            dropPlaceholder.add(holder);\r\n        });\r\n        return dropPlaceholder;\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    updateDragPlaceholderPosition: function(d) {\r\n\r\n        this.rowDropItemHandler(d);\r\n\r\n        const dropItem = d.dropItem;\r\n        if (!dropItem) {\r\n            //console.log('no drop item');\r\n            return;\r\n        }\r\n\r\n        //border fix\r\n        let top = d.dropPosition - 1;\r\n        if (d.dropBottom) {\r\n            if (dropItem.tg_view_last) {\r\n                top = d.dropPosition - 2;\r\n            }\r\n        } else {\r\n            if (dropItem.tg_view_index - this.frozenInfo.rows === 0) {\r\n                top = d.dropPosition;\r\n            }\r\n        }\r\n        const placeholderTop = top - this.scrollTopOffset;\r\n\r\n        //out of viewport will be removed\r\n        if (d.dropPlaceholder) {\r\n            d.dropPlaceholder.css('top', placeholderTop).show();\r\n        }\r\n        //console.log('placeholder', placeholderTop);\r\n\r\n    },\r\n\r\n    rowDragAutoScrollHandler: function(d) {\r\n\r\n        const currentPos = d.dragCurrentPosition;\r\n\r\n        const scrollTop = this.scrollTop;\r\n        const scrollHeight = this.bodyHeight - this.frozenRowsHeight;\r\n        const scrollBottom = scrollTop + scrollHeight;\r\n        //console.log('scrollTop', scrollTop, 'dropPosition', dropPosition, 'scrollBottom', scrollBottom);\r\n\r\n        const rowHeight = this.option.rowHeight;\r\n        const moveAreaHeight = Math.min(rowHeight * 3, scrollHeight * 0.5);\r\n        //console.log('moveAreaHeight', moveAreaHeight);\r\n\r\n        //not enough area\r\n        if (moveAreaHeight < rowHeight) {\r\n            return;\r\n        }\r\n\r\n        //move up\r\n        if (d.offsetY < 0) {\r\n            if (currentPos < scrollTop + moveAreaHeight) {\r\n                //console.log('auto scroll up');\r\n                const posUp = currentPos - (scrollTop + moveAreaHeight);\r\n                const offsetUp = this.getAutoScrollOffset(posUp, moveAreaHeight);\r\n                this.autoScrollStart(offsetUp, d);\r\n                return;\r\n            }\r\n            this.autoScrollStop();\r\n            return;\r\n        }\r\n\r\n        //move down\r\n        if (currentPos > scrollBottom - moveAreaHeight) {\r\n            //console.log('auto scroll down');\r\n            const posDown = currentPos - (scrollBottom - moveAreaHeight);\r\n            const offsetDown = this.getAutoScrollOffset(posDown, moveAreaHeight);\r\n            this.autoScrollStart(offsetDown, d);\r\n            return;\r\n        }\r\n        this.autoScrollStop();\r\n\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    getAutoScrollOffset: function(pos, height) {\r\n        return Math.floor(pos / height * 20);\r\n    },\r\n\r\n    autoScrollStop: function() {\r\n        if (this.autoScrollMotion) {\r\n            this.autoScrollMotion.destroy();\r\n            this.autoScrollMotion = null;\r\n        }\r\n    },\r\n\r\n    autoScrollStart: function(offset, d) {\r\n        this.autoScrollStop();\r\n\r\n        const dragMaxScrollTop = d.dragMaxScrollTop;\r\n\r\n        this.autoScrollMotion = new Motion();\r\n        this.autoScrollMotion.bind(Motion.MOTION_MOVE, () => {\r\n\r\n            const newTop = Util.clamp(this.scrollTop + offset, 0, dragMaxScrollTop);\r\n            if (newTop === this.scrollTop) {\r\n                this.autoScrollStop();\r\n                return;\r\n            }\r\n\r\n            //console.log('scrollTop', newTop);\r\n\r\n            this.setScrollTop(newTop);\r\n            //update position\r\n            this.updateDragCloneRowPosition(d);\r\n            this.updateDragPlaceholderPosition(d);\r\n\r\n        });\r\n        this.autoScrollMotion.once(Motion.MOTION_END, () => {\r\n            this.autoScrollStart(offset, d);\r\n        });\r\n        this.autoScrollMotion.start({\r\n            duration: 200\r\n        });\r\n    },\r\n\r\n\r\n    //=======================================================================================\r\n\r\n    rowDropListHandler: function(d) {\r\n        const list = this.getRowDropList(d);\r\n        //console.log(rows);\r\n        if (!Util.isList(list)) {\r\n            return;\r\n        }\r\n        const rowItem = d.rowItem;\r\n        const drops = list.filter((item) => {\r\n\r\n            if (item === rowItem) {\r\n                return false;\r\n            }\r\n\r\n            //no frozen drag\r\n            if (item.tg_frozen) {\r\n                return false;\r\n            }\r\n\r\n            //filter children\r\n            let parent = item.tg_parent;\r\n            while (parent) {\r\n                if (parent === rowItem) {\r\n                    return false;\r\n                }\r\n                parent = parent.tg_parent;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        if (!Util.isList(drops)) {\r\n            return;\r\n        }\r\n\r\n        const dropList = [];\r\n        drops.forEach((item) => {\r\n\r\n            //for position, using data list top\r\n            const rowTop = this.getRowTop(item);\r\n            const rowHeight = this.getRowHeight(item);\r\n            dropList.push({\r\n                rowItem: item,\r\n                position: rowTop\r\n            });\r\n\r\n            //-1 for less than next top, not equal next top\r\n            dropList.push({\r\n                rowItem: item,\r\n                position: rowTop + rowHeight - 1,\r\n                dropBottom: true\r\n            });\r\n\r\n        });\r\n\r\n        d.dropList = dropList;\r\n    },\r\n\r\n    getRowDropList: function(d) {\r\n        const crossLevel = this.option.rowDragCrossLevel;\r\n\r\n        //default only parent subs\r\n        if (!crossLevel) {\r\n            return this.getRowParentSubs(d.rowItem);\r\n        }\r\n\r\n        //custom filter\r\n        if (typeof crossLevel === 'function') {\r\n            return crossLevel.call(this, d);\r\n        }\r\n\r\n        //all rows\r\n        return this.viewRows;\r\n    },\r\n\r\n    rowDropItemHandler: function(d) {\r\n\r\n        const dropList = d.dropList;\r\n        if (!dropList) {\r\n            //console.log('no drop list');\r\n            return;\r\n        }\r\n\r\n        const currentPos = d.dragCurrentPosition;\r\n\r\n        //find best position\r\n        let distance = Number.MAX_VALUE;\r\n\r\n        for (let i = 0, l = dropList.length; i < l; i++) {\r\n            const item = dropList[i];\r\n            const currentDis = Math.abs(currentPos - item.position);\r\n            //console.log('dTop', dTop, item.rowItem.name);\r\n            if (currentDis > distance) {\r\n                break;\r\n            }\r\n            distance = currentDis;\r\n            d.dropItem = item.rowItem;\r\n            d.dropBottom = item.dropBottom;\r\n            d.dropPosition = item.position;\r\n\r\n        }\r\n\r\n        //console.log(d.rowItem, d.dropItem, d.dropBottom, distance);\r\n\r\n    },\r\n\r\n\r\n    rowDragDropPositionHandler: function(rowItem, dropItem, dropBottom) {\r\n\r\n        const dragFrom = this.getRowParentSubs(rowItem);\r\n        const dragIndex = rowItem.tg_sub_index;\r\n\r\n        let dropInto;\r\n        let dropIndex;\r\n        //add below group first\r\n        if (this.isDropIntoGroupFirstChild(dropItem, dropBottom)) {\r\n            dropInto = dropItem.subs;\r\n            dropIndex = 0;\r\n        } else {\r\n            dropInto = this.getRowParentSubs(dropItem);\r\n            dropIndex = dropItem.tg_sub_index;\r\n            //if remove one before, fix one position\r\n            if (dragFrom === dropInto && dragIndex < dropIndex) {\r\n                dropIndex -= 1;\r\n            }\r\n            if (dropBottom) {\r\n                dropIndex += 1;\r\n            }\r\n        }\r\n\r\n        return this.updateDragDropPosition(dragFrom, dropInto, dragIndex, dropIndex, rowItem);\r\n\r\n    },\r\n\r\n    isDropIntoGroupFirstChild: function(dropItem, dropBottom) {\r\n        if (!dropBottom) {\r\n            return false;\r\n        }\r\n        if (!dropItem.tg_group) {\r\n            return false;\r\n        }\r\n        if (this.isEmptyGroup(dropItem)) {\r\n            //expend it\r\n            dropItem.collapsed = false;\r\n            return true;\r\n        }\r\n        if (!dropItem.collapsed) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    updateDragDropPosition: function(dragFrom, dropInto, dragIndex, dropIndex, rowItem) {\r\n\r\n        //console.log(dragIndex, dropIndex, dragFrom, dropInto);\r\n\r\n        if (dragFrom === dropInto && dragIndex === dropIndex) {\r\n            //console.log('drag drop no change');\r\n            return;\r\n        }\r\n\r\n        //remove from drag subs\r\n        dragFrom.splice(dragIndex, 1);\r\n\r\n        //insert to drop subs\r\n        dropInto.splice(dropIndex, 0, rowItem);\r\n\r\n        return {\r\n            rowItem,\r\n            dragFrom,\r\n            dragIndex,\r\n            dropInto,\r\n            dropIndex\r\n        };\r\n    },\r\n\r\n    rowDropHandler: function(d) {\r\n\r\n        const dropItem = d.dropItem;\r\n        //no change\r\n        if (!dropItem) {\r\n            //console.log('no drop item');\r\n            return;\r\n        }\r\n\r\n        const rowItem = d.rowItem;\r\n        const dropBottom = d.dropBottom;\r\n\r\n        //console.log('dropItem/dropBottom', dropItem.name, dropBottom);\r\n\r\n        const droppedInfo = this.rowDragDropPositionHandler(rowItem, dropItem, dropBottom);\r\n        if (!droppedInfo) {\r\n            //console.log('no change');\r\n            return;\r\n        }\r\n\r\n        //delete and add need init again\r\n        this.initRowsHandler();\r\n\r\n        //flush\r\n        let minIndex = Math.min(rowItem.tg_view_index, dropItem.tg_view_index);\r\n        if (minIndex) {\r\n            //flush up row group line\r\n            minIndex -= 1;\r\n        }\r\n        this.flushRowFrom(minIndex);\r\n\r\n        //fresh data index\r\n        this.removeSortColumn();\r\n\r\n        this.onNextUpdated(() => {\r\n            this.trigger(E.onRowDropped, droppedInfo);\r\n        });\r\n\r\n        this.render({\r\n            type: 'rows',\r\n            scrollRow: rowItem\r\n        });\r\n\r\n    }\r\n\r\n};\r\n\r\n","import E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\nconst RowList = {\r\n\r\n    //private API\r\n\r\n    getMoveFocusRow: function(moveList, offset) {\r\n        //-1 move up, first one\r\n        let focusRow = moveList[0];\r\n        //+1 move down, last one\r\n        if (offset > 0) {\r\n            focusRow = moveList[moveList.length - 1];\r\n        }\r\n        return focusRow;\r\n    },\r\n\r\n    getMoveLengthInList: function(moveList, list) {\r\n        let length = 0;\r\n        moveList.forEach((item) => {\r\n            const ls = this.getRowParentSubs(item);\r\n            if (ls === list) {\r\n                length += 1;\r\n            }\r\n        });\r\n        return length;\r\n    },\r\n\r\n    getMoveInfo: function(moveList, offset, focusRow) {\r\n        const list = this.getRowParentSubs(focusRow);\r\n        let index = focusRow.tg_sub_index + offset;\r\n\r\n        const parent = focusRow.tg_parent;\r\n        if (parent && this.option.rowMoveCrossLevel) {\r\n\r\n            const startIndex = 0;\r\n            const endIndex = parent.tg_subs_length - 1;\r\n\r\n            //up to parent\r\n            if (index < startIndex) {\r\n                //offset 0 = insert before\r\n                const parentUpOffset = index + 1;\r\n                return this.getMoveInfo(moveList, parentUpOffset, parent);\r\n            }\r\n\r\n            //down to parent\r\n            if (index > endIndex) {\r\n                const parentDownOffset = index - endIndex;\r\n                return this.getMoveInfo(moveList, parentDownOffset, parent);\r\n            }\r\n\r\n        }\r\n\r\n        //fix multiple selections if move down\r\n        //reduce the number if exist in current list\r\n        if (offset > 0) {\r\n            const lengthInList = this.getMoveLengthInList(moveList, list);\r\n            index -= lengthInList - 1;\r\n        }\r\n\r\n        index = Util.clamp(index, 0, list.length);\r\n\r\n        return {\r\n            list: list,\r\n            index: index\r\n        };\r\n    },\r\n\r\n    moveRowsHandler: function(moveList, offset) {\r\n\r\n        //remove rows by desc\r\n        moveList = this.removeRowsHandler(moveList);\r\n        //sort by asc\r\n        moveList.reverse();\r\n\r\n        const focusRow = this.getMoveFocusRow(moveList, offset);\r\n        //insert rows\r\n        const info = this.getMoveInfo(moveList, offset, focusRow);\r\n        //console.log(\"focus row: \" + focusRow.name, info);\r\n\r\n        const args = [info.index, 0].concat(moveList);\r\n        info.list.splice.apply(info.list, args);\r\n\r\n        //remove cache\r\n        this.initRowsHandler();\r\n\r\n        //scroll and event\r\n        this.onNextUpdated(function() {\r\n            this.scrollRowIntoView(focusRow);\r\n            this.trigger(E.onRowMoved, moveList);\r\n        });\r\n\r\n        //remove sort state\r\n        this.removeSortColumn();\r\n        //flush all rows\r\n        this.update();\r\n\r\n        return true;\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    moveRows: function(rowList, offset) {\r\n        rowList = Util.toList(rowList);\r\n        const moveList = [];\r\n        rowList.forEach((rowIndex) => {\r\n            const rowItem = this.getRowItem(rowIndex);\r\n            if (!rowItem) {\r\n                return;\r\n            }\r\n            moveList.push(rowItem);\r\n        });\r\n        //no rows\r\n        if (!moveList.length) {\r\n            return false;\r\n        }\r\n        //select all\r\n        if (moveList.length >= this.getRowsLength()) {\r\n            return false;\r\n        }\r\n        offset = Util.toNum(offset, true);\r\n        //no move\r\n        if (offset === 0) {\r\n            return false;\r\n        }\r\n        return this.moveRowsHandler(moveList, offset);\r\n    },\r\n\r\n    moveRowsUp: function(rowList) {\r\n        return this.moveRows(rowList, -1);\r\n    },\r\n\r\n    moveRowsDown: function(rowList) {\r\n        return this.moveRows(rowList, 1);\r\n    },\r\n\r\n    moveRowsToTop: function(rowList) {\r\n        return this.moveRows(rowList, -this.getRowsLength(true));\r\n    },\r\n\r\n    moveRowsToBottom: function(rowList) {\r\n        return this.moveRows(rowList, this.getRowsLength(true));\r\n    },\r\n\r\n    moveSelectedRowsUp: function() {\r\n        return this.moveRows(this.getSelectedRows(), -1);\r\n    },\r\n\r\n    moveSelectedRowsDown: function() {\r\n        return this.moveRows(this.getSelectedRows(), 1);\r\n    },\r\n\r\n    moveSelectedRowsToTop: function() {\r\n        return this.moveRows(this.getSelectedRows(), -this.getRowsLength(true));\r\n    },\r\n\r\n    moveSelectedRowsToBottom: function() {\r\n        return this.moveRows(this.getSelectedRows(), this.getRowsLength(true));\r\n    }\r\n\r\n};\r\nexport default RowList;\r\n","import E from '../core/event-types.js';\r\nimport $ from '../core/query.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //get single/first selected row (no order, need order should call getSelectedRows()[0])\r\n    getSelectedRow: function() {\r\n        let selectedRow = null;\r\n        this.forEachSelectableRow(function(rowItem) {\r\n            if (rowItem.selected) {\r\n                selectedRow = rowItem;\r\n                //break forEach\r\n                return false;\r\n            }\r\n        });\r\n        return selectedRow;\r\n    },\r\n\r\n    //get all selected rows\r\n    getSelectedRows: function() {\r\n        const selectedRows = [];\r\n        this.forEachSelectableRow(function(rowItem) {\r\n            if (rowItem.selected) {\r\n                selectedRows.push(rowItem);\r\n            }\r\n        });\r\n        if (selectedRows.length > 1) {\r\n            //sort by order\r\n            selectedRows.sort(function(a, b) {\r\n                const av = a.tg_selected_index;\r\n                const bv = b.tg_selected_index;\r\n                if (av > bv) {\r\n                    return 1;\r\n                }\r\n                if (av < bv) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        return selectedRows;\r\n    },\r\n\r\n\r\n    //=============================================================================\r\n\r\n    //select/unselect all\r\n    selectAll: function(selected = true) {\r\n        selected = Boolean(selected);\r\n\r\n        this.globalSelectedIndex = 0;\r\n\r\n        if (selected && !this.option.selectMultiple) {\r\n            return this;\r\n        }\r\n\r\n        const changedList = this.getAllSelectedChangedList(selected);\r\n        if (!changedList.length) {\r\n            return this;\r\n        }\r\n\r\n        this.updateRowsSelectedState(changedList);\r\n\r\n        return this;\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    setRowSelected: function() {\r\n        const handler = this.option.selectMultiple ? this.setRowMultipleSelected : this.setRowSingleSelected;\r\n        return handler.apply(this, arguments);\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    // radio single select\r\n    setRowSingleSelected: function(rowInfo) {\r\n        const rowItem = this.getRowItem(rowInfo);\r\n        if (!rowItem) {\r\n            return this;\r\n        }\r\n\r\n        if (!this.isRowSelectable(rowItem)) {\r\n            return this;\r\n        }\r\n\r\n        if (rowItem.selected) {\r\n            return this;\r\n        }\r\n\r\n        const changedList = [];\r\n        //unselected\r\n        const previousRow = this.getSelectedRow();\r\n        if (previousRow && previousRow.selected) {\r\n            changedList.push(previousRow);\r\n        }\r\n        if (!rowItem.selected) {\r\n            changedList.push(rowItem);\r\n        }\r\n\r\n        if (!changedList.length) {\r\n            return this;\r\n        }\r\n\r\n        this.updateRowsSelectedState(changedList);\r\n\r\n        return this;\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    // checkbox multiple select\r\n    // (rowIndex)\r\n    // ([rowIndex1,rowIndex2])\r\n    // (rowIndex, e)\r\n    // (rowIndex, false)\r\n    setRowMultipleSelected: function(rowInfo, settings) {\r\n\r\n        if (arguments.length === 0) {\r\n            return this;\r\n        }\r\n\r\n        if (arguments.length === 1 && arguments[0] === false) {\r\n            return this.selectAll(false);\r\n        }\r\n\r\n        const rowList = this.toRowItemList(rowInfo, (it) => this.isRowSelectable(it));\r\n        if (!rowList.length) {\r\n            return this;\r\n        }\r\n\r\n        //unselected\r\n        if (settings === false) {\r\n            this.setRowListUnselected(rowList);\r\n            return this;\r\n        }\r\n\r\n        //selected\r\n        if (Util.hasShiftKey(settings) && rowList.length === 1) {\r\n            this.setRowBetweenListSelected(rowList[0]);\r\n            return this;\r\n        }\r\n\r\n        this.updateRowsSelectedState(rowList);\r\n        return this;\r\n    },\r\n\r\n    setRowListUnselected: function(rowList) {\r\n        const unselectedChangedList = this.getSelectedChangedList(rowList, false);\r\n        if (!unselectedChangedList.length) {\r\n            return;\r\n        }\r\n        this.updateRowsSelectedState(unselectedChangedList);\r\n    },\r\n\r\n    setRowBetweenListSelected: function(rowItem) {\r\n        const previousSelectedRow = this.previousSelectedRow;\r\n        if (previousSelectedRow && previousSelectedRow !== rowItem) {\r\n            const betweenList = this.getBetweenSelectedChangedList(previousSelectedRow, rowItem);\r\n            if (!betweenList.length) {\r\n                return;\r\n            }\r\n            this.updateRowsSelectedState(betweenList, true);\r\n            return;\r\n        }\r\n        this.updateRowsSelectedState([rowItem]);\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    getAllSelectedChangedList: function(selected) {\r\n        const changedList = [];\r\n        this.forEachSelectableRow((rowItem) => {\r\n            if (this.isSelectedChanged(rowItem, selected)) {\r\n                changedList.push(rowItem);\r\n            }\r\n        });\r\n        return changedList;\r\n    },\r\n\r\n    getSelectedChangedList: function(rowList, selected) {\r\n        const changedList = [];\r\n        rowList.forEach((rowItem) => {\r\n            if (this.isSelectedChanged(rowItem, selected)) {\r\n                changedList.push(rowItem);\r\n            }\r\n        });\r\n        return changedList;\r\n    },\r\n\r\n    getBetweenSelectedChangedList: function(previousItem, currentItem) {\r\n        const previousIndex = previousItem.tg_index;\r\n        const currentIndex = currentItem.tg_index;\r\n        const indexList = [];\r\n        if (previousIndex < currentIndex) {\r\n            let i = previousIndex + 1;\r\n            while (i <= currentIndex) {\r\n                indexList.push(i);\r\n                i++;\r\n            }\r\n        } else {\r\n            let j = previousIndex - 1;\r\n            while (j >= currentIndex) {\r\n                indexList.push(j);\r\n                j--;\r\n            }\r\n        }\r\n        //console.log(indexList);\r\n        return this.toRowItemList(indexList, (it) => this.isRowSelectable(it) && !it.selected);\r\n    },\r\n\r\n    updateRowsSelectedState: function(changedList, shiftKey) {\r\n        let lastSelectedRow;\r\n        changedList.forEach((rowItem) => {\r\n            //toggle selected\r\n            const selected = !rowItem.selected;\r\n            rowItem.selected = selected;\r\n            if (selected) {\r\n                rowItem.tg_selected_index = this.globalSelectedIndex++;\r\n                lastSelectedRow = rowItem;\r\n            }\r\n            this.renderRowSelectedState(rowItem);\r\n        });\r\n\r\n        if (!shiftKey) {\r\n            this.previousSelectedRow = lastSelectedRow;\r\n        }\r\n\r\n        this.renderSelectAllState();\r\n\r\n        this.onNextUpdated(() => {\r\n            this.trigger(E.onSelectChanged, changedList);\r\n        });\r\n\r\n        this.render();\r\n\r\n    },\r\n\r\n    renderRowSelectedState: function(rowItem) {\r\n        // viewport checking\r\n        const row = rowItem.tg_view_index;\r\n        if (!this.viewport.rows.includes(row)) {\r\n            return;\r\n        }\r\n        //row tg-selected\r\n        this.renderRowState(rowItem, 'selected');\r\n        //select column: checkbox or radio\r\n        this.flushCell(row, this.selectColumn.tg_view_index);\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    // async update for checkbox all\r\n    renderSelectAllState: function() {\r\n        if (!this.isSelectAllVisible()) {\r\n            return;\r\n        }\r\n        if (!this.asyncRenderSelectAllState) {\r\n            this.asyncRenderSelectAllState = Util.microtask(this.renderSelectAllStateSync);\r\n        }\r\n        this.asyncRenderSelectAllState.apply(this, arguments);\r\n    },\r\n\r\n    renderSelectAllStateSync: function() {\r\n        const selectAllState = this.getSelectAllState();\r\n        const previousSelectAllState = this.previousSelectAllState;\r\n        if (selectAllState === previousSelectAllState) {\r\n            return;\r\n        }\r\n        this.previousSelectAllState = selectAllState;\r\n\r\n        const columnItem = this.selectColumn;\r\n        const node = this.getColumnHeaderNode(columnItem);\r\n        const $node = $(node);\r\n        const $selectIconAll = $node.find('.tg-select-icon-all');\r\n        if (!$selectIconAll.length) {\r\n            return;\r\n        }\r\n\r\n        $selectIconAll.removeClass('tg-selected tg-mixed');\r\n        if (selectAllState) {\r\n            $selectIconAll.addClass(`tg-${selectAllState}`);\r\n        }\r\n\r\n    },\r\n\r\n    getSelectAllState: function() {\r\n        let total = 0;\r\n        this.forEachSelectableRow((item) => {\r\n            total += 1;\r\n        });\r\n\r\n        const selectedRows = this.getSelectedRows();\r\n        const selectedLength = selectedRows.length;\r\n\r\n        //empty means mixed\r\n        let selectAllState = 'mixed';\r\n        if (selectedLength === 0) {\r\n            selectAllState = '';\r\n            //remove state if noting selected\r\n            this.previousSelectedRow = null;\r\n        } else if (selectedLength === total) {\r\n            selectAllState = 'selected';\r\n        }\r\n\r\n        return selectAllState;\r\n    },\r\n\r\n    isSelectAllVisible: function() {\r\n        const o = this.option;\r\n        if (!o.selectVisible || !o.selectAllVisible || !o.selectMultiple) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n};\r\n","const Row = {\r\n\r\n    //=============================================================================\r\n    //hover single row, by API, no need keep\r\n\r\n    setRowHover: function(rowIndex, hover) {\r\n        const item = this.getRowItem(rowIndex);\r\n        if (!item) {\r\n            return this;\r\n        }\r\n        this.renderRowHover(item, hover);\r\n        return this;\r\n    },\r\n\r\n    // API or from events\r\n    renderRowHover: function(rowItem, hover) {\r\n\r\n        //remove previous hover row, both for left and right pane\r\n        if (this.previousHover) {\r\n            this.previousHover.removeClass('tg-hover');\r\n            this.previousHover = null;\r\n        }\r\n\r\n        if (!hover) {\r\n            return this;\r\n        }\r\n\r\n        //add hover row not frozen, both for left and right pane\r\n        if (rowItem.tg_frozen && !this.option.frozenRowHoverable) {\r\n            return this;\r\n        }\r\n\r\n        //can not do previous cache, because frozen column need keep hover state\r\n\r\n        const row = rowItem.tg_view_index;\r\n        this.previousHover = this.$body.find(`.tg-row[row='${row}']`).addClass('tg-hover');\r\n\r\n        return this;\r\n    },\r\n\r\n    //=============================================================================\r\n    //change row state, the state will be add/remove as className\r\n    //current support: selected\r\n\r\n    setRowState: function(rowIndex, state, value = true) {\r\n        const rowItem = this.getRowItem(rowIndex);\r\n        if (!rowItem) {\r\n            return this;\r\n        }\r\n        //keep state names (may from user) for getRowClass\r\n        if (!rowItem.tg_state_names) {\r\n            rowItem.tg_state_names = new Set();\r\n        }\r\n        rowItem.tg_state_names.add(state);\r\n\r\n        rowItem[state] = value;\r\n\r\n        this.renderRowState(rowItem, state);\r\n\r\n        return this;\r\n    },\r\n\r\n    renderRowState: function(rowItem, state) {\r\n        const rowNodes = this.getRowNodesByIndex(rowItem.tg_view_index);\r\n        if (rowNodes) {\r\n            const hasState = rowItem[state];\r\n            const className = `tg-${state}`;\r\n            if (hasState) {\r\n                rowNodes.addClass(className);\r\n            } else {\r\n                rowNodes.removeClass(className);\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\nexport default Row;\r\n","import $ from '../core/query.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    getRowItem: function(context) {\r\n        if (Util.isNum(context)) {\r\n            if (context < 0) {\r\n                context = this.rowsInfo.length + context;\r\n            }\r\n            return this.rowsInfo.indexCache[context];\r\n        }\r\n        if (!context) {\r\n            return;\r\n        }\r\n        if (Util.isNum(context.tg_index)) {\r\n            return context;\r\n        }\r\n        return this.getRowItemById(context.id || context);\r\n    },\r\n\r\n    getRowItemById: function(id) {\r\n        return this.getRowItemBy('id', id);\r\n    },\r\n\r\n    getRowItemBy: function(key, value) {\r\n        if (typeof value === 'undefined') {\r\n            return;\r\n        }\r\n        return this.rowsInfo.indexCache.find((item) => item[key] === value);\r\n    },\r\n\r\n    getRowsLength: function(total) {\r\n        if (total) {\r\n            return this.rowsInfo.length;\r\n        }\r\n        return this.viewRows.length;\r\n    },\r\n\r\n    getViewRowItem: function(rowIndex) {\r\n        return this.viewRows[rowIndex];\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    getPreRenderRowInfo: function(rows) {\r\n        const info = {\r\n            rows: [],\r\n            rowNotFound: false,\r\n            benchmark: 0\r\n        };\r\n        if (!rows.length) {\r\n            if (this.getRowsLength() === 0) {\r\n                info.rowNotFound = true;\r\n            }\r\n            return info;\r\n        }\r\n        const benchmarks = [];\r\n        const fr = this.frozenInfo.row;\r\n\r\n        rows.forEach((row) => {\r\n            if (this.getRowCache(row)) {\r\n                if (row > fr) {\r\n                    benchmarks.push(row);\r\n                }\r\n                return;\r\n            }\r\n            info.rows.push(row);\r\n        });\r\n        if (benchmarks.length) {\r\n            info.benchmark = Math.min.apply(Math, benchmarks);\r\n        }\r\n\r\n        info.rows.sort(function(a, b) {\r\n            if (a < info.benchmark && b < info.benchmark) {\r\n                return b - a;\r\n            }\r\n            return a - b;\r\n        });\r\n\r\n        return info;\r\n    },\r\n\r\n    rowNotFoundHandler: function(info) {\r\n        let rowNotFound = this.option.rowNotFound;\r\n        if (!rowNotFound) {\r\n            this.hidePaneMessage();\r\n            return;\r\n        }\r\n        if (typeof rowNotFound === 'function') {\r\n            rowNotFound = rowNotFound.call(this, info);\r\n        }\r\n        if (info.rowNotFound) {\r\n            this.showPaneMessage(rowNotFound);\r\n        } else {\r\n            this.hidePaneMessage();\r\n        }\r\n    },\r\n\r\n    showPaneMessage: function(message) {\r\n        this.$bodyFrame.addClass('tg-row-not-found');\r\n        const $elem = this.$bodyFrame.find('.tg-body-message').show();\r\n        this.renderNodeContent($elem.get(0), message);\r\n        this.paneMessageVisible = true;\r\n    },\r\n\r\n    hidePaneMessage: function() {\r\n        if (this.paneMessageVisible) {\r\n            this.$bodyFrame.removeClass('tg-row-not-found');\r\n            this.$bodyFrame.find('.tg-body-message').hide();\r\n            this.paneMessageVisible = false;\r\n        }\r\n    },\r\n\r\n    renderRows: function(rows) {\r\n\r\n        const info = this.getPreRenderRowInfo(rows);\r\n        this.rowNotFoundHandler(info);\r\n        if (info.rowNotFound || !info.rows.length) {\r\n            return;\r\n        }\r\n\r\n        //benchmark for prepend or append\r\n\r\n        //console.log(info);\r\n        info.rows.forEach((row) => {\r\n\r\n            this.renderRowNodes(row, info.benchmark);\r\n\r\n        });\r\n\r\n    },\r\n\r\n    createRowNode: function(row, rowItem, className, cssText, rowTop, rowHeight) {\r\n        const rowNode = document.createElement('div');\r\n        //for event position\r\n        rowNode.setAttribute('row', row);\r\n        rowNode.className = className;\r\n        if (cssText) {\r\n            rowNode.style.cssText = cssText;\r\n        }\r\n        rowNode.style.top = `${rowTop}px`;\r\n        if (rowHeight !== this.option.rowHeight) {\r\n            rowNode.style.height = `${rowHeight}px`;\r\n            rowNode.style.lineHeight = `${rowHeight}px`;\r\n        }\r\n\r\n        this.setNodeDataCache(rowNode, {\r\n            row,\r\n            rowItem,\r\n            rowNode\r\n        });\r\n\r\n        return rowNode;\r\n    },\r\n\r\n    appendRowNode: function($body, rowNode, row, benchmark) {\r\n        if (row < benchmark) {\r\n            $body.prepend(rowNode);\r\n        } else {\r\n            $body.append(rowNode);\r\n        }\r\n    },\r\n\r\n    renderRowNodes: function(row, benchmark) {\r\n\r\n        //from view list\r\n        const rowItem = this.getViewRowItem(row);\r\n        if (!rowItem) {\r\n            return;\r\n        }\r\n\r\n        let rowNodes = $();\r\n\r\n        const vPos = this.getRowVPos(row);\r\n        const className = this.getRowClass(rowItem);\r\n        const cssText = Util.styleMap(rowItem.styleMap);\r\n        const rowTop = this.getViewRowTop(rowItem);\r\n        const rowHeight = this.getRowHeight(rowItem);\r\n\r\n        //left\r\n        const rowNodeL = this.createRowNode(row, rowItem, className, cssText, rowTop, rowHeight);\r\n        const $bodyL = this.getRowCanvas(vPos, 'left');\r\n        this.appendRowNode($bodyL, rowNodeL, row, benchmark);\r\n        rowNodes = rowNodes.add(rowNodeL);\r\n\r\n        //right\r\n        if (this.frozenInfo.columns) {\r\n            const rowNodeR = this.createRowNode(row, rowItem, className, cssText, rowTop, rowHeight);\r\n            const $bodyR = this.getRowCanvas(vPos, 'right');\r\n            this.appendRowNode($bodyR, rowNodeR, row, benchmark);\r\n            rowNodes = rowNodes.add(rowNodeR);\r\n        }\r\n\r\n        this.setRowCache(row, rowNodes);\r\n\r\n    },\r\n\r\n    //==========================================================================\r\n    isGroupLine: function(rowItem) {\r\n        return rowItem && rowItem.tg_group_line && rowItem.tg_view_index !== this.frozenInfo.row;\r\n    },\r\n\r\n    isNoneLine: function(row) {\r\n\r\n        const isBottom = this.frozenInfo.bottom;\r\n\r\n        //last row\r\n        if (row === this.viewRows.length - 1 && this.hasVScroll) {\r\n            if (isBottom || !this.hasHScroll) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        //frozen last row\r\n        if (row === this.frozenInfo.row && isBottom && !this.hasHScroll) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    isTopLine: function(row) {\r\n        if (row === 0 && this.frozenInfo.bottom) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    getRowClass: function(rowItem) {\r\n\r\n        const row = rowItem.tg_view_index;\r\n\r\n        const list = ['tg-row'];\r\n\r\n        const odd = row % 2 === 1;\r\n\r\n        list.push({\r\n            //odd/even line, can NOT use :nth-child(even/odd), because not all rows are rendered\r\n            'tg-odd': odd,\r\n            'tg-even': !odd,\r\n\r\n            //list index first and last\r\n            'tg-list-first': rowItem.tg_list_index === 0,\r\n            'tg-list-last': rowItem.tg_list_last,\r\n\r\n            //group line\r\n            'tg-group-line': this.isGroupLine(rowItem),\r\n            'tg-none-line': this.isNoneLine(row),\r\n            'tg-top-line': this.isTopLine(row),\r\n\r\n            'tg-group': rowItem.tg_group,\r\n            'tg-selected': rowItem.selected\r\n\r\n        });\r\n\r\n        //custom type class name\r\n        if (rowItem.type) {\r\n            list.push(`tg-${rowItem.type}`);\r\n        }\r\n\r\n        //row state from user (not include selected)\r\n        const rowState = rowItem.tg_state_names;\r\n        if (rowState) {\r\n            rowState.forEach(function(state) {\r\n                if (rowItem[state]) {\r\n                    list.push(`tg-${state}`);\r\n                }\r\n            });\r\n        }\r\n\r\n        //custom class name\r\n        list.push(Util.classMap(rowItem.classMap));\r\n\r\n        return Util.classMap(list);\r\n    },\r\n\r\n    getRowHeight: function(rowItem) {\r\n        if (rowItem && Util.isNum(rowItem.tg_height)) {\r\n            return rowItem.tg_height;\r\n        }\r\n        return this.option.rowHeight;\r\n    },\r\n\r\n    getRowsHeight: function() {\r\n        let h = 0;\r\n        const l = this.getRowsLength();\r\n        for (let i = 0; i < l; i++) {\r\n            h += this.getRowHeight(this.viewRows[i]);\r\n        }\r\n        return h;\r\n    },\r\n\r\n    getFrozenRowsHeight: function() {\r\n        let h = 0;\r\n        const l = this.frozenInfo.rows;\r\n        for (let i = 0; i < l; i++) {\r\n            h += this.getRowHeight(this.viewRows[i]);\r\n        }\r\n        return h;\r\n    },\r\n\r\n    //init tg_top from the beginning\r\n\r\n    //with scroll top offset\r\n    getViewRowTop: function(rowItem) {\r\n        let top = rowItem.tg_top;\r\n        const row = rowItem.tg_view_index;\r\n        if (this.frozenInfo.rows) {\r\n            if (row > this.frozenInfo.row) {\r\n                top -= this.frozenRowsHeight;\r\n            } else {\r\n                //frozen row no scroll top offset\r\n                return top;\r\n            }\r\n        }\r\n        //update scroll top offset\r\n        top -= this.scrollTopOffset;\r\n        return top;\r\n    },\r\n\r\n    getRowTop: function(rowItem) {\r\n        let top = rowItem.tg_top;\r\n        if (rowItem.tg_frozen) {\r\n            return top;\r\n        }\r\n        top -= this.frozenRowsHeight;\r\n        return top;\r\n    },\r\n\r\n    getRowVPos: function(row) {\r\n        const isBottom = this.frozenInfo.bottom;\r\n        const fc = this.frozenInfo.row;\r\n        let vPos = 'top';\r\n        //frozen rows\r\n        if (this.frozenInfo.rows) {\r\n            //frozen\r\n            if (row <= fc) {\r\n                if (isBottom) {\r\n                    vPos = 'bottom';\r\n                }\r\n            } else {\r\n                if (!isBottom) {\r\n                    vPos = 'bottom';\r\n                }\r\n            }\r\n        }\r\n        return vPos;\r\n    },\r\n\r\n    getRowCanvas: function(vPos, hPos) {\r\n        if (vPos === 'top') {\r\n            if (hPos === 'left') {\r\n                return this.$bodyTL;\r\n            }\r\n            return this.$bodyTR;\r\n        }\r\n        if (hPos === 'left') {\r\n            return this.$bodyBL;\r\n        }\r\n        return this.$bodyBR;\r\n    }\r\n\r\n};\r\n","import $ from '../../core/query.js';\r\nimport Util from '../../core/util.js';\r\nimport OptionBase from '../../core/option-base.js';\r\nimport Drag from '../../core/drag.js';\r\nimport Motion from '../../core/motion.js';\r\n\r\nconst E = {\r\n    CHANGE: 'change'\r\n};\r\n\r\nexport default OptionBase.extend({\r\n    //v, h\r\n    //mode: \"\",\r\n    //type: {},\r\n\r\n    //final value from option\r\n    size: 0,\r\n    viewSize: 0,\r\n    bodySize: 0,\r\n    trackSize: 0,\r\n\r\n    //scroll position\r\n    position: 0,\r\n\r\n    //thumb scale: thumb size / track size\r\n    scale: 0,\r\n\r\n    thumbPosition: 0,\r\n    thumbScale: 0,\r\n\r\n    constructor: function(holder) {\r\n        this.id = Util.uid(4, `tg-scrollbar-${this.mode}-`);\r\n        this.setOption();\r\n        this.$holder = $(holder);\r\n        //some clean\r\n        this.$holder.find(`.${this.type.className}`).remove();\r\n    },\r\n\r\n    getDefaultOption: function() {\r\n        return {\r\n            //width or height for scrollbar\r\n            //0 means invisible\r\n            size: 15,\r\n\r\n            round: false,\r\n\r\n            //for invisible but takes up space\r\n            //false: without blank (default)\r\n            //true: with blank, without scroll view extension\r\n            //1: with blank, with scroll view extension\r\n            blank: false,\r\n\r\n            //disable event and hover\r\n            //disabled: false,\r\n\r\n            //motion\r\n            motionDuration: 200\r\n\r\n        };\r\n    },\r\n\r\n    //========================================================================\r\n\r\n    create: function() {\r\n\r\n        const template = '<div><div class=\"tg-scrollbar-track\"></div><div class=\"tg-scrollbar-thumb\"></div></div>';\r\n\r\n        this.$container = $(template).appendTo(this.$holder);\r\n        this.$container.attr('id', this.id);\r\n        this.$container.addClass(Util.classMap(['tg-scrollbar', this.type.className, {\r\n            'tg-scrollbar-round': this.option.round\r\n        }]));\r\n\r\n        this.$track = this.$container.find('.tg-scrollbar-track');\r\n        this.$thumb = this.$container.find('.tg-scrollbar-thumb');\r\n\r\n        //thumb drag events\r\n        this.thumbDrag = new Drag();\r\n        this.thumbDrag.bind(Drag.DRAG_START, (e, d) => {\r\n            this.thumbDragStart(d);\r\n        }).bind(Drag.DRAG_MOVE, (e, d) => {\r\n            this.thumbDragMove(d);\r\n        }).bind(Drag.DRAG_END, (e, d) => {\r\n            this.thumbDragEnd(d);\r\n        });\r\n\r\n        const container = this.$container.get(0);\r\n\r\n        this.scrollEvents = {\r\n            mousedown: {\r\n                handler: (e) => {\r\n\r\n                    //click on thumb\r\n                    if (e.target.classList.contains('tg-scrollbar-thumb')) {\r\n                        this.thumbMouseDownHandler(e);\r\n                        return;\r\n                    }\r\n\r\n                    this.trackEvents = {\r\n                        mouseup: {\r\n                            handler: (ee) => {\r\n                                this.trackMouseupHandler(ee);\r\n                            },\r\n                            options: {\r\n                                once: true\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    Util.bindEvents(this.trackEvents, container);\r\n\r\n                    this.trackMousedownHandler(e);\r\n                },\r\n                options: true\r\n            },\r\n            selectstart: {\r\n                handler: (e) => {\r\n                    Util.preventDefault(e);\r\n                },\r\n                options: true\r\n            }\r\n        };\r\n\r\n        Util.bindEvents(this.scrollEvents, container);\r\n\r\n        return this;\r\n    },\r\n\r\n    //========================================================================\r\n    //API\r\n\r\n    getBlank: function() {\r\n        return this.option.blank;\r\n    },\r\n\r\n    getSize: function() {\r\n        return this.size;\r\n    },\r\n\r\n    getViewSize: function() {\r\n        return this.viewSize;\r\n    },\r\n\r\n    getBodySize: function() {\r\n        return this.bodySize;\r\n    },\r\n\r\n    //========================================================================\r\n\r\n    getTrackMouseDirection: function() {\r\n        let direction = 1;\r\n        if (this.trackMousePosition < this.thumbPosition) {\r\n            direction = -1;\r\n        }\r\n        return direction;\r\n    },\r\n\r\n    getTrackMousePos: function(e) {\r\n        const offset = this.$track.offset();\r\n        return e[this.type.page] - offset[this.type.offset];\r\n    },\r\n\r\n    //========================================================================\r\n\r\n    getMaxThumbPosition: function() {\r\n        return this.trackSize - this.thumbSize;\r\n    },\r\n\r\n    setThumbPosition: function(thumbPosition) {\r\n        if (thumbPosition === this.thumbPosition) {\r\n            return this;\r\n        }\r\n        this.thumbPosition = thumbPosition;\r\n        if (this.$thumb) {\r\n            this.$thumb.css(this.type.offset, thumbPosition);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    //update thumb pos\r\n    updateThumbPosition: function() {\r\n        let thumbPosition = 0;\r\n        const maxPosition = this.getMaxPosition();\r\n        if (maxPosition > 0) {\r\n            const maxThumbPosition = this.getMaxThumbPosition();\r\n            thumbPosition = Math.round(maxThumbPosition * this.position / maxPosition);\r\n            thumbPosition = Util.clamp(thumbPosition, 0, maxThumbPosition);\r\n        }\r\n        this.setThumbPosition(thumbPosition);\r\n        return this;\r\n    },\r\n\r\n    //=====================================================================\r\n    //track\r\n\r\n    trackMousedownHandler: function(e) {\r\n        this.motionStop();\r\n        this.trackMousePosition = this.getTrackMousePos(e);\r\n        this.motionStart();\r\n        return this;\r\n    },\r\n\r\n    trackMouseupHandler: function(e) {\r\n        Util.unbindEvents(this.trackEvents);\r\n        this.motionStop();\r\n        if (this.motionStarted) {\r\n            return this;\r\n        }\r\n        this.trackMousePosition = this.getTrackMousePos(e);\r\n        //track click scroll\r\n        this.trackScrollHandler();\r\n        this.triggerEvent();\r\n        return this;\r\n    },\r\n\r\n    trackScrollHandler: function() {\r\n        const viewSize = Math.max(0, this.viewSize - 20);\r\n        //thumb current position\r\n        const direction = this.getTrackMouseDirection();\r\n        const offset = viewSize * direction;\r\n        this.setOffset(offset);\r\n        return this;\r\n    },\r\n\r\n    //===================================================================\r\n    //motion\r\n\r\n    motionStop: function() {\r\n        if (this.motion) {\r\n            this.motion.destroy();\r\n            this.motion = null;\r\n        }\r\n        return this;\r\n    },\r\n\r\n    motionStart: function() {\r\n        const from = this.position;\r\n        const till = Math.round(this.trackMousePosition / this.viewSize * this.getMaxPosition());\r\n        this.motionStarted = false;\r\n\r\n        this.motion = new Motion();\r\n        this.motion.bind(Motion.MOTION_START, (e, d) => {\r\n            this.motionStarted = true;\r\n        });\r\n        this.motion.bind(Motion.MOTION_MOVE, (e, d) => {\r\n            this.motionUpdateHandler(e, d);\r\n        });\r\n        this.motion.start({\r\n            duration: this.option.motionDuration,\r\n            from: from,\r\n            till: till\r\n        });\r\n        return this;\r\n    },\r\n\r\n    motionUpdateHandler: function(e, pos) {\r\n        //update position, change thumb, trigger event\r\n        if (pos === this.position) {\r\n            return;\r\n        }\r\n        this.setPosition(pos);\r\n        this.triggerEvent();\r\n    },\r\n\r\n    //=====================================================================\r\n    //thumb drag\r\n\r\n    thumbMouseDownHandler: function(e) {\r\n        this.$thumb.addClass('tg-scrollbar-thumb-hold');\r\n        this.thumbDrag.start(e, {\r\n            target: this.$thumb\r\n        });\r\n    },\r\n\r\n    thumbDragStart: function(d) {\r\n        this.motionStop();\r\n        d.thumbPositionStart = this.thumbPosition;\r\n    },\r\n\r\n    thumbDragMove: function(d) {\r\n\r\n        //change thumb position\r\n        let thumbPosition = d.thumbPositionStart + d[this.type.offsetName];\r\n        const maxThumbPosition = this.getMaxThumbPosition();\r\n        thumbPosition = Util.clamp(thumbPosition, 0, maxThumbPosition);\r\n        this.setThumbPosition(thumbPosition);\r\n\r\n        //new position\r\n        let newPosition = 0;\r\n        if (maxThumbPosition > 0) {\r\n            newPosition = Util.per(thumbPosition / maxThumbPosition) * this.getMaxPosition();\r\n            newPosition = Math.round(newPosition);\r\n        }\r\n        this.position = newPosition;\r\n        //update position and event change\r\n        this.triggerEvent();\r\n    },\r\n\r\n    thumbDragEnd: function(d) {\r\n        //no matter if d.valid always remove, because added on init not start\r\n        if (this.$thumb) {\r\n            this.$thumb.removeClass('tg-scrollbar-thumb-hold');\r\n        }\r\n    },\r\n\r\n    //===================================================================\r\n\r\n    //from inside change trigger\r\n    triggerEvent: function() {\r\n        this.trigger(E.CHANGE, this.position);\r\n    },\r\n\r\n    //===================================================================\r\n    //px position\r\n\r\n    getPosition: function() {\r\n        return this.position;\r\n    },\r\n\r\n    setPosition: function(position) {\r\n        position = Util.toNum(position, true);\r\n        const maxPosition = this.getMaxPosition();\r\n        position = Util.clamp(position, 0, maxPosition);\r\n        //console.log(this.position, position);\r\n        this.position = position;\r\n        this.updateThumbPosition();\r\n    },\r\n\r\n    getMaxPosition: function() {\r\n        return this.bodySize - this.viewSize;\r\n    },\r\n\r\n    updatePosition: function() {\r\n        const maxPosition = this.getMaxPosition();\r\n        const position = Util.clamp(this.position, 0, maxPosition);\r\n        this.position = position;\r\n    },\r\n\r\n    //offset position +/-\r\n    setOffset: function(offset) {\r\n        offset = Util.toNum(offset);\r\n        const position = this.position + offset;\r\n        this.setPosition(position);\r\n        return this;\r\n    },\r\n\r\n    //===================================================================\r\n    //scale for thumb\r\n\r\n    getScale: function() {\r\n        return this.scale;\r\n    },\r\n\r\n    setScale: function(scale) {\r\n        scale = Util.per(scale);\r\n        this.scale = scale;\r\n        this.scaleChangeHandler();\r\n        return this;\r\n    },\r\n\r\n    scaleChangeHandler: function() {\r\n        let thumbSize = Math.round(this.viewSize * this.scale);\r\n        thumbSize = Math.max(thumbSize, this.option.size);\r\n        thumbSize = Math.min(thumbSize, this.viewSize);\r\n        this.thumbSize = thumbSize;\r\n        if (this.$thumb) {\r\n            const thumbData = {};\r\n            if (this.mode === 'h') {\r\n                thumbData.height = this.size;\r\n                thumbData.width = this.thumbSize;\r\n            } else {\r\n                thumbData.width = this.size;\r\n                thumbData.height = this.thumbSize;\r\n            }\r\n            this.$thumb.css(thumbData);\r\n        }\r\n    },\r\n\r\n    //===================================================================\r\n\r\n    //container and track size\r\n    updateTrackSize: function() {\r\n        const trackData = {};\r\n        if (this.mode === 'h') {\r\n            trackData.width = this.trackSize;\r\n            trackData.height = this.size;\r\n        } else {\r\n            trackData.height = this.trackSize;\r\n            trackData.width = this.size;\r\n        }\r\n        this.$container.css(trackData);\r\n        return this;\r\n    },\r\n\r\n    //thumb size\r\n    updateThumbSize: function() {\r\n        let scale = 0;\r\n        if (this.bodySize) {\r\n            scale = this.trackSize / this.bodySize;\r\n        }\r\n        this.setScale(scale);\r\n        return this;\r\n    },\r\n\r\n    //===================================================================\r\n\r\n    //do twice: calculate size and show size\r\n    updateOption: function(option) {\r\n\r\n        this.setOption(option);\r\n\r\n        //init size\r\n        let size = this.option.size;\r\n        if (!Util.isNum(size)) {\r\n            size = Util.toNum(size);\r\n        }\r\n        size = Math.round(size);\r\n        //range 0 - 30\r\n        size = Math.max(size, 0);\r\n        size = Math.min(size, 30);\r\n        this.size = size;\r\n\r\n\r\n    },\r\n\r\n    parseSize: function(v) {\r\n        v = Util.toNum(v);\r\n        v = Math.round(v);\r\n        v = Math.max(v, 0);\r\n        return v;\r\n    },\r\n\r\n    //for view size and body size\r\n    //track size for fade\r\n    updateSize: function(viewSize, bodySize, trackSize) {\r\n        viewSize = this.parseSize(viewSize);\r\n        this.viewSize = viewSize;\r\n        bodySize = this.parseSize(bodySize);\r\n        this.bodySize = bodySize;\r\n        if (Util.isNum(trackSize)) {\r\n            trackSize = this.parseSize(trackSize);\r\n        } else {\r\n            trackSize = viewSize;\r\n        }\r\n        this.trackSize = trackSize;\r\n        //reset fade state\r\n        this.previousFadeIn = null;\r\n    },\r\n\r\n    fade: function(fadeIn) {\r\n        if (!this.$container || !this.size) {\r\n            return false;\r\n        }\r\n        if (this.previousFadeIn === fadeIn) {\r\n            return false;\r\n        }\r\n        this.previousFadeIn = fadeIn;\r\n        if (fadeIn) {\r\n            if (this.$container.hasClass('tg-fade-out')) {\r\n                this.$container.removeClass('tg-fade-out').addClass('tg-fade-in');\r\n            }\r\n        } else {\r\n            this.$container.removeClass('tg-fade-in').addClass('tg-fade-out');\r\n        }\r\n        return true;\r\n    },\r\n\r\n    show: function() {\r\n        this.updatePosition();\r\n        if (this.getBlank()) {\r\n            this.remove();\r\n            return;\r\n        }\r\n\r\n        if (!this.$container && this.size > 0) {\r\n            this.create();\r\n        }\r\n\r\n        if (!this.$container) {\r\n            return this;\r\n        }\r\n        this.updateTrackSize();\r\n        this.updateThumbSize();\r\n\r\n        return this;\r\n    },\r\n\r\n    hide: function() {\r\n        this.updatePosition();\r\n        this.remove();\r\n        return this;\r\n    },\r\n\r\n    remove: function() {\r\n        this.motionStop();\r\n\r\n        Util.unbindEvents(this.scrollEvents);\r\n        Util.unbindEvents(this.trackEvents);\r\n\r\n        if (this.thumbDrag) {\r\n            this.thumbDrag.destroy();\r\n            this.thumbDrag = null;\r\n        }\r\n\r\n        if (!this.$container) {\r\n            return this;\r\n        }\r\n        this.$thumb = null;\r\n        this.$track = null;\r\n        this.$container.remove();\r\n        this.$container = null;\r\n    },\r\n\r\n    //===================================================================\r\n\r\n    destroy: function() {\r\n        this.remove();\r\n        return this;\r\n    }\r\n\r\n}, E);\r\n","import Scrollbar from './scrollbar.js';\r\nexport default Scrollbar.extend({\r\n    mode: 'v',\r\n    type: {\r\n        className: 'tg-scrollbar-v',\r\n        offset: 'top',\r\n        size: 'height',\r\n        page: 'pageY',\r\n        axis: 'y',\r\n        offsetName: 'offsetY'\r\n    }\r\n});\r\n","import Scrollbar from './scrollbar.js';\r\nexport default Scrollbar.extend({\r\n    mode: 'h',\r\n    type: {\r\n        className: 'tg-scrollbar-h',\r\n        offset: 'left',\r\n        size: 'width',\r\n        page: 'pageX',\r\n        axis: 'x',\r\n        offsetName: 'offsetX'\r\n    }\r\n});\r\n","import $ from '../core/query.js';\r\nimport Util from '../core/util.js';\r\nimport OptionBase from '../core/option-base.js';\r\nimport ScrollbarV from './scrollbar/scrollbar-v.js';\r\nimport ScrollbarH from './scrollbar/scrollbar-h.js';\r\n\r\nconst E = {\r\n    CHANGE: 'change'\r\n};\r\n\r\nexport default OptionBase.extend({\r\n\r\n    visible: true,\r\n\r\n    getDefaultOption: function() {\r\n        return {\r\n            scrollbarH: {},\r\n            scrollbarV: {},\r\n            scrollbarFade: false,\r\n            scrollSizeOnKeyPress: 20,\r\n            gradient: 30\r\n        };\r\n    },\r\n\r\n    constructor: function(container, name) {\r\n        this.id = Util.uid(4, `tg-scroll-pane-${name}-`);\r\n\r\n        this.setOption();\r\n\r\n        this.gradientInfo = [];\r\n\r\n        this.$container = $(container).attr('id', this.id);\r\n        this.$container.addClass('tg-scroll-pane');\r\n        this.$scrollView = this.$container.find('.tg-scroll-view');\r\n        this.$scrollBody = this.$scrollView.find('.tg-scroll-body');\r\n\r\n        //h scrollbar bottom\r\n        this.scrollbarH = new ScrollbarH(this.$container);\r\n        this.scrollbarH.bind(ScrollbarH.CHANGE, (e, d) => {\r\n            this.scrollHChangeHandler();\r\n        });\r\n\r\n        //v scrollbar right\r\n        this.scrollbarV = new ScrollbarV(this.$container);\r\n        this.scrollbarV.bind(ScrollbarV.CHANGE, (e, d) => {\r\n            this.scrollVChangeHandler();\r\n        });\r\n\r\n        return this;\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    show: function() {\r\n        this.$container.show();\r\n        this.visible = true;\r\n        return this;\r\n    },\r\n\r\n    hide: function() {\r\n        this.$container.hide();\r\n        this.visible = false;\r\n        return this;\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    width: function() {\r\n        return this.scrollPaneW;\r\n    },\r\n\r\n    height: function() {\r\n        return this.scrollPaneH;\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    render: function(option) {\r\n        if (!this.visible) {\r\n            return this;\r\n        }\r\n        this.setOption(option);\r\n        this.update();\r\n        return this;\r\n    },\r\n\r\n    update: function() {\r\n        this.scrollPaneW = this.option.scrollPaneW;\r\n        this.scrollPaneH = this.option.scrollPaneH;\r\n        this.scrollBodyW = this.option.scrollBodyW;\r\n        this.scrollBodyH = this.option.scrollBodyH;\r\n\r\n        this.updateScrollbar();\r\n    },\r\n\r\n    //==========================================================================\r\n    //set sync group list\r\n\r\n    setGroupH: function(list) {\r\n        this.groupH = Util.toList(list);\r\n    },\r\n\r\n    setGroupV: function(list) {\r\n        this.groupV = Util.toList(list);\r\n    },\r\n\r\n    //==========================================================================\r\n    //sync to list\r\n\r\n    updateGroupH: function() {\r\n        if (!Util.isList(this.groupH)) {\r\n            return this;\r\n        }\r\n        const positionH = this.scrollbarH.getPosition();\r\n        this.groupH.forEach(function(scrollPane) {\r\n            if (!scrollPane) {\r\n                return;\r\n            }\r\n            scrollPane.updateScrollHFromGroup(positionH);\r\n        });\r\n        return this;\r\n    },\r\n\r\n    updateGroupV: function() {\r\n        if (!Util.isList(this.groupV)) {\r\n            return this;\r\n        }\r\n        const positionV = this.scrollbarV.getPosition();\r\n        this.groupV.forEach(function(scrollPane) {\r\n            if (!scrollPane) {\r\n                return;\r\n            }\r\n            scrollPane.updateScrollVFromGroup(positionV);\r\n        });\r\n        return this;\r\n    },\r\n\r\n    updateGroupList: function() {\r\n        this.updateGroupH();\r\n        this.updateGroupV();\r\n    },\r\n\r\n    //==========================================================================\r\n    //sync from group scrollPane\r\n\r\n    updateScrollHFromGroup: function(positionH) {\r\n        const posH = this.scrollbarH.getPosition();\r\n        if (posH === positionH) {\r\n            return;\r\n        }\r\n        this.scrollbarH.setPosition(positionH);\r\n        this.updateScrollLeft();\r\n        this.triggerEvent();\r\n    },\r\n\r\n    updateScrollVFromGroup: function(positionV) {\r\n        const posV = this.scrollbarV.getPosition();\r\n        if (posV === positionV) {\r\n            return;\r\n        }\r\n        this.scrollbarV.setPosition(positionV);\r\n        this.updateScrollTop();\r\n        this.triggerEvent();\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    //set position from outside\r\n    setPosition: function(scrollLeft, scrollTop) {\r\n        this.scrollbarH.setPosition(scrollLeft);\r\n        this.scrollbarV.setPosition(scrollTop);\r\n\r\n        this.updateScrollLeft();\r\n        this.updateScrollTop();\r\n\r\n        this.updateGroupList();\r\n\r\n        return this;\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    updateScrollbar: function() {\r\n\r\n        //set option for calculation\r\n        this.scrollbarH.updateOption(this.option.scrollbarH);\r\n        this.scrollbarV.updateOption(this.option.scrollbarV);\r\n\r\n        //start to calculate state and size\r\n        this.updateScrollState();\r\n        this.updateScrollView();\r\n        this.updateScrollTrack();\r\n\r\n        //update new size\r\n        this.scrollbarH.updateSize(this.scrollViewW, this.scrollBodyW, this.scrollTrackW);\r\n        this.scrollbarV.updateSize(this.scrollViewH, this.scrollBodyH, this.scrollTrackH);\r\n\r\n        //update visible and set with last position\r\n        if (this.hasScrollH) {\r\n            this.scrollbarH.show();\r\n            this.scrollbarH.setPosition(this.scrollbarH.getPosition());\r\n        } else {\r\n            this.scrollbarH.hide();\r\n        }\r\n        if (this.hasScrollV) {\r\n            this.scrollbarV.show();\r\n            this.scrollbarV.setPosition(this.scrollbarV.getPosition());\r\n        } else {\r\n            this.scrollbarV.hide();\r\n        }\r\n\r\n        this.updateScrollLeft();\r\n        this.updateScrollTop();\r\n\r\n        this.updateGroupList();\r\n\r\n    },\r\n\r\n    updateScrollState: function() {\r\n\r\n        const scrollbarSizeH = this.scrollbarH.getSize();\r\n        const scrollbarSizeV = this.scrollbarV.getSize();\r\n\r\n        const blankH = this.scrollbarH.getBlank();\r\n        const blankV = this.scrollbarV.getBlank();\r\n\r\n        const fade = this.option.scrollbarFade;\r\n\r\n        //========================================\r\n        //scrollH fixing\r\n        let hasScrollH = false;\r\n        let scrollSizeH = 0;\r\n        const scrollHHandler = function() {\r\n            if (this.scrollPaneW < this.scrollBodyW || blankH) {\r\n                hasScrollH = true;\r\n                scrollSizeH = scrollbarSizeH;\r\n                if (fade) {\r\n                    scrollSizeH = 0;\r\n                }\r\n            }\r\n        };\r\n        scrollHHandler.call(this);\r\n\r\n        //========================================\r\n        //scrollV fixing\r\n        let hasScrollV = false;\r\n        let scrollSizeV = 0;\r\n        const scrollVHandler = function() {\r\n            if (this.scrollPaneH < this.scrollBodyH + scrollSizeH || blankV) {\r\n                hasScrollV = true;\r\n                scrollSizeV = scrollbarSizeV;\r\n                if (fade) {\r\n                    scrollSizeV = 0;\r\n                }\r\n                //scrollH fixing again for scrollSizeV change\r\n                if (!hasScrollH && this.scrollPaneW < this.scrollBodyW + scrollSizeV) {\r\n                    hasScrollH = true;\r\n                    scrollSizeH = scrollbarSizeH;\r\n                    if (fade) {\r\n                        scrollSizeH = 0;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        scrollVHandler.call(this);\r\n\r\n        //========================================\r\n        this.hasScrollH = hasScrollH;\r\n        this.hasScrollV = hasScrollV;\r\n\r\n        this.scrollSizeH = scrollSizeH;\r\n        this.scrollSizeV = scrollSizeV;\r\n\r\n    },\r\n\r\n    updateScrollView: function() {\r\n\r\n        this.scrollViewW = this.scrollPaneW;\r\n        if (this.hasScrollV) {\r\n            this.scrollViewW = this.scrollPaneW - this.scrollSizeV;\r\n        }\r\n        this.scrollViewH = this.scrollPaneH;\r\n        if (this.hasScrollH) {\r\n            this.scrollViewH = this.scrollPaneH - this.scrollSizeH;\r\n        }\r\n\r\n        const blankH = this.scrollbarH.getBlank();\r\n        const blankV = this.scrollbarV.getBlank();\r\n\r\n        //blank type fixing\r\n        let width = this.scrollViewW;\r\n        if (blankV && blankV !== true) {\r\n            width = this.scrollPaneW;\r\n        }\r\n\r\n        let height = this.scrollViewH;\r\n        if (blankH && blankH !== true) {\r\n            height = this.scrollPaneH;\r\n        }\r\n\r\n        this.$scrollView.css({\r\n            width: `${width}px`,\r\n            height: `${height}px`\r\n        });\r\n\r\n        return this;\r\n    },\r\n\r\n    updateScrollTrack: function() {\r\n        this.scrollTrackW = this.scrollViewW;\r\n        this.scrollTrackH = this.scrollViewH;\r\n        if (!this.option.scrollbarFade) {\r\n            return;\r\n        }\r\n        //only for both visible\r\n        if (this.hasScrollH && this.hasScrollV) {\r\n            this.scrollTrackW -= this.scrollbarV.getSize();\r\n            this.scrollTrackH -= this.scrollbarH.getSize();\r\n        }\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    fade: function(fadeIn) {\r\n        const doneH = this.scrollbarH.fade(fadeIn);\r\n        const doneV = this.scrollbarV.fade(fadeIn);\r\n        //all need call\r\n        return doneH || doneV;\r\n    },\r\n\r\n    hasScrollbar: function() {\r\n        if (!this.visible) {\r\n            return false;\r\n        }\r\n        if (!this.hasScrollH && !this.hasScrollV) {\r\n            return false;\r\n        }\r\n        if (!this.scrollbarV.getSize() && !this.scrollbarH.getSize()) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    updateScrollLeft: function() {\r\n        const scrollLeft = this.getScrollLeft();\r\n\r\n        this.$scrollBody.css('left', `${-scrollLeft}px`);\r\n\r\n        this.updateGradient();\r\n        return this;\r\n    },\r\n\r\n    updateScrollTop: function() {\r\n        const scrollTop = this.getScrollTop();\r\n\r\n        const scrollTopOffset = this.getScrollTopOffset();\r\n        const top = scrollTop - scrollTopOffset;\r\n\r\n        this.$scrollBody.css('top', `${-top}px`);\r\n\r\n        this.updateGradient();\r\n        return this;\r\n    },\r\n\r\n    updateGradient: function() {\r\n        const o = this.option;\r\n        if (!o.scrollbarFade) {\r\n            return;\r\n        }\r\n        const gradient = o.gradient;\r\n        if (!gradient) {\r\n            return;\r\n        }\r\n        if (!this.asyncUpdateGradient) {\r\n            this.asyncUpdateGradient = Util.microtask(this.updateGradientSync);\r\n        }\r\n        this.asyncUpdateGradient.apply(this, arguments);\r\n    },\r\n\r\n    updateGradientSync: function() {\r\n        const gradientInfo = [];\r\n\r\n        const gradient = this.option.gradient;\r\n        const scrollLeft = this.getScrollLeft();\r\n        const scrollTop = this.getScrollTop();\r\n\r\n        const maxLeft = this.getMaxScrollLeft();\r\n        const maxTop = this.getMaxScrollTop();\r\n\r\n        if (this.hasScrollH) {\r\n            if (scrollLeft > gradient) {\r\n                gradientInfo.push('left');\r\n            }\r\n            if (scrollLeft < maxLeft - gradient) {\r\n                gradientInfo.push('right');\r\n            }\r\n        }\r\n\r\n        if (this.hasScrollV) {\r\n            if (scrollTop > gradient) {\r\n                gradientInfo.push('top');\r\n            }\r\n            if (scrollTop < maxTop - gradient) {\r\n                gradientInfo.push('bottom');\r\n            }\r\n        }\r\n\r\n        if (gradientInfo.join('') === this.gradientInfo.join('')) {\r\n            return;\r\n        }\r\n        this.gradientInfo = gradientInfo;\r\n\r\n        //remove and add tg-gradient class\r\n        ['left', 'right', 'top', 'bottom'].forEach((item) => {\r\n            const className = `tg-gradient-${item}`;\r\n            if (gradientInfo.includes(item)) {\r\n                this.$container.addClass(className);\r\n            } else {\r\n                this.$container.removeClass(className);\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    getScrollLeft: function() {\r\n        return this.scrollbarH.getPosition();\r\n    },\r\n\r\n    getScrollTop: function() {\r\n        return this.scrollbarV.getPosition();\r\n    },\r\n\r\n    getMaxScrollLeft: function() {\r\n        return this.scrollbarH.getMaxPosition();\r\n    },\r\n\r\n    getMaxScrollTop: function() {\r\n        return this.scrollbarV.getMaxPosition();\r\n    },\r\n\r\n    // max height fixing for IE\r\n    getScrollTopOffset: function() {\r\n        const scrollTop = this.getScrollTop();\r\n\r\n        //max size, bigger than 8K screen\r\n        const top = scrollTop % 10000;\r\n        return scrollTop - top;\r\n    },\r\n\r\n    triggerEvent: function() {\r\n        this.trigger(E.CHANGE, {\r\n            scrollLeft: this.getScrollLeft(),\r\n            scrollTop: this.getScrollTop()\r\n        });\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    scrollHChangeHandler: function() {\r\n        this.updateScrollLeft();\r\n        this.updateGroupList();\r\n        this.triggerEvent();\r\n    },\r\n\r\n    scrollVChangeHandler: function() {\r\n        this.updateScrollTop();\r\n        this.updateGroupList();\r\n        this.triggerEvent();\r\n    },\r\n\r\n    //==========================================================================\r\n    //set offset from mouse wheel, key up/down/left/right, page up/page down/home/end\r\n    setOffsetH: function(offset) {\r\n        const scrollLeft = this.getScrollLeft();\r\n        this.scrollbarH.setOffset(offset);\r\n        const newScrollLeft = this.getScrollLeft();\r\n        if (newScrollLeft === scrollLeft) {\r\n            return false;\r\n        }\r\n        this.updateScrollLeft();\r\n        this.updateGroupList();\r\n        this.triggerEvent();\r\n        return true;\r\n    },\r\n\r\n    setOffsetV: function(offset) {\r\n        const scrollTop = this.getScrollTop();\r\n        this.scrollbarV.setOffset(offset);\r\n        const newScrollTop = this.getScrollTop();\r\n        if (newScrollTop === scrollTop) {\r\n            return false;\r\n        }\r\n        this.updateScrollTop();\r\n        this.updateGroupList();\r\n        this.triggerEvent();\r\n        return true;\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    mouseWheelHandler: function(e) {\r\n\r\n        const deltaX = e.deltaX;\r\n        const deltaY = e.deltaY;\r\n\r\n        const dx = Math.abs(deltaX);\r\n        const dy = Math.abs(deltaY);\r\n\r\n        //only choose one direction\r\n        if (dx > dy) {\r\n            if (this.hasScrollH) {\r\n                return this.setOffsetH(deltaX);\r\n            }\r\n        } else {\r\n            if (this.hasScrollV) {\r\n                return this.setOffsetV(deltaY);\r\n            }\r\n            if (this.hasScrollH && !dx) {\r\n                return this.setOffsetH(deltaY);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    keyPageUpHandler: function(e) {\r\n        return this.setOffsetV(-this.scrollViewH);\r\n    },\r\n\r\n    keyPageDownHandler: function(e) {\r\n        return this.setOffsetV(this.scrollViewH);\r\n    },\r\n\r\n    keyEndHandler: function(e) {\r\n        return this.setOffsetV(this.scrollBodyH);\r\n    },\r\n\r\n    keyHomeHandler: function(e) {\r\n        return this.setOffsetV(-this.scrollBodyH);\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    keyLeftHandler: function(e) {\r\n        return this.setOffsetH(-this.option.scrollSizeOnKeyPress);\r\n    },\r\n\r\n    keyUpHandler: function(e) {\r\n        return this.setOffsetV(-this.option.scrollSizeOnKeyPress);\r\n    },\r\n\r\n    keyRightHandler: function(e) {\r\n        return this.setOffsetH(this.option.scrollSizeOnKeyPress);\r\n    },\r\n\r\n    keyDownHandler: function(e) {\r\n        return this.setOffsetV(this.option.scrollSizeOnKeyPress);\r\n    },\r\n\r\n    //==========================================================================\r\n\r\n    destroy: function() {\r\n        this.visible = false;\r\n        this.groupH = null;\r\n        this.groupV = null;\r\n        if (this.scrollbarV) {\r\n            this.scrollbarV.destroy();\r\n            this.scrollbarV = null;\r\n        }\r\n        if (this.scrollbarH) {\r\n            this.scrollbarH.destroy();\r\n            this.scrollbarH = null;\r\n        }\r\n        this.$container = null;\r\n        this.$scrollView = null;\r\n        this.$scrollBody = null;\r\n        return this;\r\n    }\r\n\r\n}, E);\r\n","import Util from '../core/util.js';\r\nimport ScrollPane from '../ui/scroll-pane.js';\r\n\r\nexport default {\r\n\r\n    initScrollPane: function() {\r\n        this.initFrozenStyle();\r\n        this.createScrollPane();\r\n    },\r\n\r\n    initFrozenStyle: function() {\r\n\r\n        const map = {\r\n            HL: {\r\n                container: this.$paneHL,\r\n                cls: []\r\n            },\r\n            HR: {\r\n                container: this.$paneHR,\r\n                cls: []\r\n            },\r\n            TL: {\r\n                container: this.$paneTL,\r\n                cls: []\r\n            },\r\n            TR: {\r\n                container: this.$paneTR,\r\n                cls: []\r\n            },\r\n            BL: {\r\n                container: this.$paneBL,\r\n                cls: []\r\n            },\r\n            BR: {\r\n                container: this.$paneBR,\r\n                cls: []\r\n            }\r\n        };\r\n\r\n        const selectorFrozenH = 'tg-frozen-h';\r\n        if (this.frozenInfo.rows) {\r\n            if (this.frozenInfo.bottom) {\r\n                map.BL.cls.push(selectorFrozenH);\r\n                map.BR.cls.push(selectorFrozenH);\r\n            } else {\r\n                map.TL.cls.push(selectorFrozenH);\r\n                map.TR.cls.push(selectorFrozenH);\r\n            }\r\n        }\r\n\r\n        const selectorFrozenV = 'tg-frozen-v';\r\n        const selectorFrozenLineV = 'tg-frozen-line-v';\r\n        if (this.frozenInfo.columns) {\r\n            if (this.frozenInfo.right) {\r\n                map.HR.cls.push(selectorFrozenV);\r\n                map.TR.cls.push(selectorFrozenV);\r\n                map.BR.cls.push(selectorFrozenV);\r\n            } else {\r\n                map.HL.cls.push(selectorFrozenV);\r\n                map.TL.cls.push(selectorFrozenV);\r\n                map.BL.cls.push(selectorFrozenV);\r\n            }\r\n\r\n            map.HL.cls.push(selectorFrozenLineV);\r\n            map.TL.cls.push(selectorFrozenLineV);\r\n            map.BL.cls.push(selectorFrozenLineV);\r\n\r\n        }\r\n\r\n        //console.log(map);\r\n\r\n        const selectorFrozen = 'tg-frozen';\r\n        const selectorAll = [selectorFrozen, selectorFrozenH, selectorFrozenV, selectorFrozenLineV].join(' ');\r\n        Object.keys(map).forEach(function(k) {\r\n            const item = map[k];\r\n            const container = item.container;\r\n            container.removeClass(selectorAll);\r\n\r\n            const cls = item.cls;\r\n            if (!cls.length) {\r\n                return;\r\n            }\r\n            //frozen row style\r\n            const selectorNew = [selectorFrozen].concat(cls).join(' ');\r\n            container.addClass(selectorNew);\r\n            //console.log(\"new\", selectorNew);\r\n        });\r\n\r\n    },\r\n\r\n    //=============================================================================================\r\n\r\n    //init all scrollPane\r\n    createScrollPane: function() {\r\n\r\n        //remove previous scrollPane\r\n        this.removeScrollPane();\r\n\r\n        //create new scrollPane\r\n        this.scrollPaneMap = {\r\n            HL: new ScrollPane(this.$paneHL, 'header-left'),\r\n            HR: new ScrollPane(this.$paneHR, 'header-right'),\r\n            TL: new ScrollPane(this.$paneTL, 'top-left'),\r\n            TR: new ScrollPane(this.$paneTR, 'top-right'),\r\n            BL: new ScrollPane(this.$paneBL, 'bottom-left'),\r\n            BR: new ScrollPane(this.$paneBR, 'bottom-right')\r\n        };\r\n\r\n        //sync scrollPane team\r\n        //h sync handler, with header\r\n        //for right\r\n        this.scrollPaneMap.BR.setGroupH([this.scrollPaneMap.HR, this.scrollPaneMap.TR]);\r\n        this.scrollPaneMap.TR.setGroupH([this.scrollPaneMap.HR, this.scrollPaneMap.BR]);\r\n        //for left\r\n        this.scrollPaneMap.BL.setGroupH([this.scrollPaneMap.HL, this.scrollPaneMap.TL]);\r\n        this.scrollPaneMap.TL.setGroupH([this.scrollPaneMap.HL, this.scrollPaneMap.BL]);\r\n\r\n        //v sync handler\r\n        //for bottom\r\n        this.scrollPaneMap.BR.setGroupV(this.scrollPaneMap.BL);\r\n        this.scrollPaneMap.BL.setGroupV(this.scrollPaneMap.BR);\r\n        //for top frozen bottom case\r\n        this.scrollPaneMap.TR.setGroupV(this.scrollPaneMap.TL);\r\n        this.scrollPaneMap.TL.setGroupV(this.scrollPaneMap.TR);\r\n\r\n        this.initActiveScrollPane();\r\n        this.initPaneVisibility();\r\n\r\n    },\r\n\r\n    //active scrollPane and frozen scrollPane (for scrollPaneHidden key left/right handler)\r\n    initActiveScrollPane: function() {\r\n        const vp = this.getScrollPaneVP();\r\n        const hp = this.getScrollPaneHP();\r\n\r\n        //scrollPane.BR, scrollPane.BL, scrollPane.TR, scrollPane.TL\r\n\r\n        //scrollPane\r\n        const key = `${vp}${hp}`;\r\n\r\n        this.scrollPane = this.scrollPaneMap[key];\r\n        this.scrollPane.bind(ScrollPane.CHANGE, (e, d) => {\r\n            this.scrollPaneChangeHandler(e, d);\r\n        });\r\n\r\n        //scrollPaneFrozen\r\n        let map = {\r\n            L: 'L',\r\n            R: 'L'\r\n        };\r\n        if (this.frozenInfo.columns && this.frozenInfo.right) {\r\n            map = {\r\n                L: 'R',\r\n                R: 'L'\r\n            };\r\n        }\r\n        const keyFrozen = `${vp}${map[hp]}`;\r\n        this.scrollPaneFrozen = this.scrollPaneMap[keyFrozen];\r\n\r\n    },\r\n\r\n    //======================================================================================\r\n\r\n    getScrollPaneVP: function() {\r\n        if (this.frozenInfo.rows && !this.frozenInfo.bottom) {\r\n            return 'B';\r\n        }\r\n        return 'T';\r\n    },\r\n\r\n    getScrollPaneHP: function() {\r\n        if (this.frozenInfo.columns && !this.frozenInfo.right) {\r\n            return 'R';\r\n        }\r\n        return 'L';\r\n    },\r\n\r\n    initPaneVisibility: function() {\r\n\r\n        this.scrollPaneMap.HL.show();\r\n        this.scrollPaneMap.TL.show();\r\n\r\n        if (this.frozenInfo.columns) {\r\n\r\n            this.scrollPaneMap.HR.show();\r\n            this.scrollPaneMap.TR.show();\r\n\r\n            if (this.frozenInfo.rows) {\r\n                this.scrollPaneMap.BL.show();\r\n                this.scrollPaneMap.BR.show();\r\n            } else {\r\n                this.scrollPaneMap.BL.hide();\r\n                this.scrollPaneMap.BR.hide();\r\n            }\r\n        } else {\r\n\r\n            this.scrollPaneMap.HR.hide();\r\n            this.scrollPaneMap.TR.hide();\r\n            this.scrollPaneMap.BR.hide();\r\n\r\n            if (this.frozenInfo.rows) {\r\n                this.scrollPaneMap.BL.show();\r\n            } else {\r\n                this.scrollPaneMap.BL.hide();\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    //=============================================================================================\r\n\r\n    scrollPaneChangeHandler: function(e, d) {\r\n        //hide column line when starting touch scroll\r\n        this.hideColumnLine();\r\n\r\n        this.scrollLeft = d.scrollLeft;\r\n        this.scrollTop = d.scrollTop;\r\n        this.scrollRenderHandler();\r\n    },\r\n\r\n    scrollbarFadeInOutHandler: function(e, enter) {\r\n        if (!this.option.scrollbarFade) {\r\n            return;\r\n        }\r\n        if (enter) {\r\n            this.updateScrollPaneFade(true);\r\n            return;\r\n        }\r\n        if (this.option.scrollbarFadeTimeout) {\r\n            return;\r\n        }\r\n        this.updateScrollPaneFade(false);\r\n    },\r\n\r\n    updateScrollPaneFade: function(fadeIn) {\r\n        //always check, first time will call directly\r\n        if (!this.option.scrollbarFade) {\r\n            return;\r\n        }\r\n        this.updateScrollPaneFadeSync(fadeIn);\r\n        const timeout = this.option.scrollbarFadeTimeout;\r\n        if (!timeout) {\r\n            return;\r\n        }\r\n        clearTimeout(this.timeout_fade);\r\n        this.timeout_fade = setTimeout(() => {\r\n            this.updateScrollPaneFadeSync(false);\r\n        }, timeout);\r\n    },\r\n\r\n    updateScrollPaneFadeSync: function(fadeIn) {\r\n        if (this.previousScrollbarFadeIn === fadeIn) {\r\n            return;\r\n        }\r\n        this.previousScrollbarFadeIn = fadeIn;\r\n\r\n        const list = [];\r\n        Object.keys(this.scrollPaneMap).forEach((key) => {\r\n            const sp = this.scrollPaneMap[key];\r\n            if (sp.hasScrollbar()) {\r\n                list.push(sp);\r\n            }\r\n        });\r\n\r\n        if (!list.length) {\r\n            return;\r\n        }\r\n\r\n        list.forEach(function(pane) {\r\n            pane.fade(fadeIn);\r\n        });\r\n    },\r\n\r\n    //=============================================================================================\r\n    //update\r\n\r\n    updateScrollPane: function() {\r\n\r\n        const sbo = this.getScrollbarOption();\r\n        this.scrollPaneMap.HL.render(this.getScrollPaneOption({\r\n            scrollPaneW: this.paneWidthL,\r\n            scrollPaneH: this.headerHeight,\r\n            scrollBodyW: this.bodyWidthL,\r\n            scrollBodyH: this.headerHeight,\r\n            scrollbarV: sbo.HLV,\r\n            scrollbarH: sbo.HLH\r\n        }));\r\n        this.scrollPaneMap.HR.render(this.getScrollPaneOption({\r\n            scrollPaneW: this.paneWidthR,\r\n            scrollPaneH: this.headerHeight,\r\n            scrollBodyW: this.bodyWidthR,\r\n            scrollBodyH: this.headerHeight,\r\n            scrollbarV: sbo.HRV,\r\n            scrollbarH: sbo.HRH\r\n        }));\r\n\r\n        this.scrollPaneMap.TL.render(this.getScrollPaneOption({\r\n            scrollPaneW: this.paneWidthL,\r\n            scrollPaneH: this.paneHeightT,\r\n            scrollBodyW: this.bodyWidthL,\r\n            scrollBodyH: this.bodyHeightT,\r\n            scrollbarV: sbo.TLV,\r\n            scrollbarH: sbo.TLH\r\n        }));\r\n        this.scrollPaneMap.TR.render(this.getScrollPaneOption({\r\n            scrollPaneW: this.paneWidthR,\r\n            scrollPaneH: this.paneHeightT,\r\n            scrollBodyW: this.bodyWidthR,\r\n            scrollBodyH: this.bodyHeightT,\r\n            scrollbarV: sbo.TRV,\r\n            scrollbarH: sbo.TRH\r\n        }));\r\n\r\n        this.scrollPaneMap.BL.render(this.getScrollPaneOption({\r\n            scrollPaneW: this.paneWidthL,\r\n            scrollPaneH: this.paneHeightB,\r\n            scrollBodyW: this.bodyWidthL,\r\n            scrollBodyH: this.bodyHeightB,\r\n            scrollbarV: sbo.BLV,\r\n            scrollbarH: sbo.BLH\r\n        }));\r\n        this.scrollPaneMap.BR.render(this.getScrollPaneOption({\r\n            scrollPaneW: this.paneWidthR,\r\n            scrollPaneH: this.paneHeightB,\r\n            scrollBodyW: this.bodyWidthR,\r\n            scrollBodyH: this.bodyHeightB,\r\n            scrollbarV: sbo.BRV,\r\n            scrollbarH: sbo.BRH\r\n        }));\r\n\r\n        //update scroll position if column resize and scroll position is max right or bottom\r\n        this.scrollLeft = this.getScrollLeft();\r\n        this.scrollTop = this.getScrollTop();\r\n\r\n        //first time update fade after rendered\r\n        this.updateScrollPaneFade(Boolean(this.option.scrollbarFadeTimeout));\r\n\r\n    },\r\n\r\n    getScrollPaneOption: function(spo) {\r\n        const o = this.option;\r\n        spo.scrollbarFade = o.scrollbarFade;\r\n        spo.gradient = Util.clamp(Util.toNum(o.scrollPaneGradient, true), 0, 100);\r\n        return spo;\r\n    },\r\n\r\n    getScrollbarOption: function() {\r\n\r\n        const round = this.option.scrollbarRound;\r\n\r\n        //blank:\r\n        //false: without blank (default)\r\n        //true: with blank, without scroll view extension\r\n        //1: with blank, with scroll view extension\r\n\r\n        const sbs = [\r\n            //header\r\n            'HLH',\r\n            'HLV',\r\n            'HRH',\r\n            'HRV',\r\n\r\n            //top\r\n            'TLH',\r\n            'TLV',\r\n            'TRH',\r\n            'TRV',\r\n\r\n            //bottom\r\n            'BLH',\r\n            'BLV',\r\n            'BRH',\r\n            'BRV'\r\n        ];\r\n\r\n        const sbo = {};\r\n        //default scrollPane option\r\n        sbs.forEach(function(k) {\r\n            sbo[k] = {\r\n                size: 0,\r\n                round: round,\r\n                blank: false\r\n            };\r\n        });\r\n        this.scrollbarOptionHandler(sbo);\r\n        this.scrollbarFadeHandler(sbo);\r\n        return sbo;\r\n    },\r\n\r\n    scrollbarOptionHandler: function(sbo) {\r\n\r\n        const sizeH = this.scrollbarSizeH;\r\n        const sizeV = this.scrollbarSizeV;\r\n\r\n        //always handle header\r\n        this.scrollbarHeaderHandler(sbo, sizeH, sizeV);\r\n\r\n        if (this.frozenInfo.columns) {\r\n            if (this.frozenInfo.rows) {\r\n                this.scrollbarC1R1Handler(sbo, sizeH, sizeV);\r\n            } else {\r\n                this.scrollbarC1R0Handler(sbo, sizeH, sizeV);\r\n            }\r\n        } else {\r\n            if (this.frozenInfo.rows) {\r\n                this.scrollbarC0R1Handler(sbo, sizeH, sizeV);\r\n            } else {\r\n                this.scrollbarC0R0Handler(sbo, sizeH, sizeV);\r\n            }\r\n        }\r\n    },\r\n\r\n    scrollbarFadeHandler: function(sbo) {\r\n        if (!this.option.scrollbarFade) {\r\n            return;\r\n        }\r\n        for (const k in sbo) {\r\n            if (Util.hasOwn(sbo, k)) {\r\n                const item = sbo[k];\r\n                if (item.size > 0 && item.blank) {\r\n                    item.blank = false;\r\n                    item.size = 0;\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    //===============================================\r\n    //header\r\n    scrollbarHeaderHandler: function(sbo, sizeH, sizeV) {\r\n        if (this.hasVScroll) {\r\n            if (this.frozenInfo.columns) {\r\n                sbo.HRV.size = sizeV;\r\n                sbo.HRV.blank = 1;\r\n            } else {\r\n                sbo.HLV.size = sizeV;\r\n                sbo.HLV.blank = 1;\r\n            }\r\n        }\r\n    },\r\n\r\n    //===============================================\r\n    //frozen column 0, frozen row 0\r\n    scrollbarC0R0Handler: function(sbo, sizeH, sizeV) {\r\n        sbo.TLH.size = sizeH;\r\n        sbo.TLV.size = sizeV;\r\n    },\r\n\r\n    //===============================================\r\n    //frozen column 0, frozen row 1\r\n    scrollbarC0R1Handler: function(sbo, sizeH, sizeV) {\r\n        if (this.frozenInfo.bottom) {\r\n            this.scrollbarC0R1B1Handler(sbo, sizeH, sizeV);\r\n        } else {\r\n            this.scrollbarC0R1B0Handler(sbo, sizeH, sizeV);\r\n        }\r\n    },\r\n\r\n    //frozen column 0, frozen row 1, bottom\r\n    scrollbarC0R1B1Handler: function(sbo, sizeH, sizeV) {\r\n        //h\r\n        sbo.BLH.size = sizeH;\r\n        //v\r\n        sbo.TLV.size = sizeV;\r\n        if (this.hasVScroll) {\r\n            sbo.BLV.size = sizeV;\r\n            sbo.BLV.blank = 1;\r\n        }\r\n    },\r\n\r\n    //frozen column 0, frozen row 1, top\r\n    scrollbarC0R1B0Handler: function(sbo, sizeH, sizeV) {\r\n        //h\r\n        sbo.BLH.size = sizeH;\r\n        //v\r\n        sbo.BLV.size = sizeV;\r\n        if (this.hasVScroll) {\r\n            sbo.TLV.size = sizeV;\r\n            sbo.TLV.blank = 1;\r\n        }\r\n    },\r\n\r\n    //===============================================\r\n    scrollbarC1R0Handler: function(sbo, sizeH, sizeV) {\r\n        if (this.frozenInfo.right) {\r\n            this.scrollbarC1R0R1Handler(sbo, sizeH, sizeV);\r\n        } else {\r\n            this.scrollbarC1R0R0Handler(sbo, sizeH, sizeV);\r\n        }\r\n    },\r\n\r\n    //frozen column 1, frozen row 0, right 1\r\n    scrollbarC1R0R1Handler: function(sbo, sizeH, sizeV) {\r\n        //h\r\n        if (this.hasHScroll) {\r\n            sbo.TLH.size = sizeH;\r\n            if (this.scrollPaneHidden) {\r\n                sbo.TRH.size = sizeH;\r\n                sbo.TLH.blank = true;\r\n            } else {\r\n                sbo.TRH.size = sizeH;\r\n                sbo.TRH.blank = true;\r\n            }\r\n        }\r\n        //v\r\n        sbo.TRV.size = sizeV;\r\n    },\r\n\r\n    //frozen column 1, frozen row 0, right 0\r\n    scrollbarC1R0R0Handler: function(sbo, sizeH, sizeV) {\r\n        //h\r\n        if (this.hasHScroll) {\r\n            sbo.TRH.size = sizeH;\r\n            if (this.scrollPaneHidden) {\r\n                sbo.TLH.size = sizeH;\r\n                sbo.TRH.blank = true;\r\n            } else {\r\n                sbo.TLH.size = sizeH;\r\n                sbo.TLH.blank = true;\r\n            }\r\n        }\r\n        //v\r\n        sbo.TRV.size = sizeV;\r\n    },\r\n\r\n    //===============================================\r\n    //frozen column 1, frozen row 1\r\n    scrollbarC1R1Handler: function(sbo, sizeH, sizeV) {\r\n        if (this.frozenInfo.right) {\r\n            if (this.frozenInfo.bottom) {\r\n                this.scrollbarC1R1R1B1Handler(sbo, sizeH, sizeV);\r\n            } else {\r\n                this.scrollbarC1R1R1B0Handler(sbo, sizeH, sizeV);\r\n            }\r\n        } else {\r\n            if (this.frozenInfo.bottom) {\r\n                this.scrollbarC1R1R0B1Handler(sbo, sizeH, sizeV);\r\n            } else {\r\n                this.scrollbarC1R1R0B0Handler(sbo, sizeH, sizeV);\r\n            }\r\n        }\r\n    },\r\n\r\n    //frozen column 1, frozen row 1, right 1, bottom 1\r\n    scrollbarC1R1R1B1Handler: function(sbo, sizeH, sizeV) {\r\n        //h\r\n        if (this.hasHScroll) {\r\n            sbo.BLH.size = sizeH;\r\n            if (this.scrollPaneHidden) {\r\n                sbo.BRH.size = sizeH;\r\n                sbo.BLH.blank = true;\r\n            }\r\n        }\r\n        //v\r\n        sbo.TRV.size = sizeV;\r\n        if (this.hasVScroll) {\r\n            sbo.BRV.size = sizeV;\r\n            sbo.BRV.blank = 1;\r\n        }\r\n    },\r\n\r\n    //frozen column 1, frozen row 1, right 1, bottom 0\r\n    scrollbarC1R1R1B0Handler: function(sbo, sizeH, sizeV) {\r\n        //h\r\n        if (this.hasHScroll) {\r\n            sbo.BLH.size = sizeH;\r\n            if (this.scrollPaneHidden) {\r\n                sbo.BRH.size = sizeH;\r\n                sbo.BLH.blank = true;\r\n            } else {\r\n                sbo.BRH.size = sizeH;\r\n                sbo.BRH.blank = true;\r\n            }\r\n        }\r\n        //v\r\n        sbo.BRV.size = sizeV;\r\n        if (this.hasVScroll) {\r\n            sbo.TRV.size = sizeV;\r\n            sbo.TRV.blank = 1;\r\n        }\r\n    },\r\n\r\n    //frozen column 1, frozen row 1, right 0, bottom 1\r\n    scrollbarC1R1R0B1Handler: function(sbo, sizeH, sizeV) {\r\n        //h\r\n        if (this.hasHScroll) {\r\n            sbo.BRH.size = sizeH;\r\n            if (this.scrollPaneHidden) {\r\n                sbo.BLH.size = sizeH;\r\n                sbo.BRH.blank = true;\r\n            }\r\n        }\r\n        //v\r\n        sbo.TRV.size = sizeV;\r\n        if (this.hasVScroll) {\r\n            sbo.BRV.size = sizeV;\r\n            sbo.BRV.blank = 1;\r\n        }\r\n    },\r\n\r\n    //frozen column 1, frozen row 1, right 0, bottom 0\r\n    scrollbarC1R1R0B0Handler: function(sbo, sizeH, sizeV) {\r\n        //h\r\n        if (this.hasHScroll) {\r\n            sbo.BRH.size = sizeH;\r\n            if (this.scrollPaneHidden) {\r\n                sbo.BLH.size = sizeH;\r\n                sbo.BRH.blank = true;\r\n            } else {\r\n                sbo.BLH.size = sizeH;\r\n                sbo.BLH.blank = true;\r\n            }\r\n        }\r\n        //v\r\n        sbo.BRV.size = sizeV;\r\n        if (this.hasVScroll) {\r\n            sbo.TRV.size = sizeV;\r\n            sbo.TRV.blank = 1;\r\n        }\r\n    },\r\n\r\n    //============================================================================================\r\n\r\n    removeScrollPane: function() {\r\n        clearTimeout(this.timeout_fade);\r\n        this.previousScrollbarFadeIn = null;\r\n        if (!this.scrollPaneMap) {\r\n            return;\r\n        }\r\n        Object.keys(this.scrollPaneMap).forEach((key) => {\r\n            const sp = this.scrollPaneMap[key];\r\n            if (sp) {\r\n                sp.destroy();\r\n            }\r\n        });\r\n        this.scrollPaneMap = null;\r\n        this.scrollPane = null;\r\n        this.scrollPaneFrozen = null;\r\n    }\r\n\r\n};\r\n","import E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //update all scroll bar state first\r\n    //h scroll depends on blank column\r\n    //v scroll depends on rows num\r\n    updateScrollState: function() {\r\n\r\n        //global info, reset blank column\r\n        this.updateGlobalScrollInfo();\r\n\r\n        //update scroll state\r\n        this.updateHScrollState();\r\n        this.updateVScrollState();\r\n\r\n        //h scroll fix again if has v scroll\r\n        this.updateBlankColumnWidth();\r\n\r\n        this.scrollStateChanged = false;\r\n\r\n        if (this.previousHasHScroll !== this.hasHScroll || this.previousHasVScroll !== this.hasVScroll) {\r\n            this.scrollStateChanged = true;\r\n\r\n            this.previousHasHScroll = this.hasHScroll;\r\n            this.previousHasVScroll = this.hasVScroll;\r\n\r\n            this.trigger(E.onScrollStateChanged, {\r\n                hasHScroll: this.hasHScroll,\r\n                hasVScroll: this.hasVScroll\r\n            });\r\n\r\n        }\r\n\r\n        //console.log(\"scrollStateChanged\", this.scrollStateChanged);\r\n\r\n        //all for update those 3 state\r\n        //console.log(\"hasHScroll: \" + this.hasHScroll, \"hasVScroll: \" + this.hasVScroll, \"scrollPaneHidden: \" + this.scrollPaneHidden);\r\n\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    updateGlobalScrollInfo: function() {\r\n\r\n        //all rows height\r\n        this.totalRowsLength = this.getRowsLength();\r\n        this.totalRowsHeight = this.getRowsHeight();\r\n        this.frozenRowsHeight = this.getFrozenRowsHeight();\r\n\r\n        //scroll rows height, require frozenRowsHeight on init pane\r\n        this.scrollRowsHeight = this.totalRowsHeight - this.frozenRowsHeight;\r\n\r\n        //zero height fixing\r\n        this.totalRowsHeight = Math.max(this.totalRowsHeight, 1);\r\n        this.scrollRowsHeight = Math.max(this.scrollRowsHeight, 1);\r\n\r\n        //clean if outside of the data\r\n        this.flushRowFrom(this.totalRowsLength);\r\n\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    updateHScrollState: function() {\r\n        //h scroll state (include left frozen scroll)\r\n        this.hasHScroll = true;\r\n\r\n        this.updateScrollPaneHiddenState();\r\n        this.updateHScrollByScrollPaneHidden();\r\n\r\n        if (this.scrollPaneHidden) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"containerWidth: \" + this.containerWidth, \"columnsWidth: \" + this.columnsWidth);\r\n\r\n        const blankColumnWidth = this.containerWidth - this.columnsWidth;\r\n\r\n        //console.log(\"blankColumnWidth: \" + blankColumnWidth, \"blankColumn.tg_width: \" + this.blankColumn.tg_width);\r\n\r\n        if (blankColumnWidth >= 0) {\r\n            this.hasHScroll = false;\r\n        }\r\n\r\n    },\r\n\r\n    getScrollPaneCurrentWidth: function() {\r\n        if (this.frozenInfo.right) {\r\n            return this.bodyWidth - this.columnsWidthR;\r\n        }\r\n        return this.bodyWidth - this.columnsWidthL;\r\n    },\r\n\r\n    updateHScrollByScrollPaneHidden: function() {\r\n        if (this.scrollPaneHidden) {\r\n            this.hasHScroll = false;\r\n            const scrollPaneWidth = this.getScrollPaneCurrentWidth();\r\n            const scrollbarW = this.getScrollbarWidth();\r\n            if (scrollPaneWidth < scrollbarW) {\r\n                //has left h scroll\r\n                this.hasHScroll = true;\r\n            }\r\n        }\r\n    },\r\n\r\n    updateScrollPaneHiddenState: function() {\r\n\r\n        this.scrollPaneHidden = false;\r\n\r\n        if (this.frozenInfo.columns) {\r\n            //has frozen pane\r\n            const scrollPaneWidth = this.getScrollPaneCurrentWidth();\r\n            const scrollPaneMinWidth = this.getScrollPaneMinWidth();\r\n            //console.log(\"scrollPaneWidth:\" + scrollPaneWidth, \"scrollPaneMinWidth: \" + scrollPaneMinWidth);\r\n            if (scrollPaneWidth < scrollPaneMinWidth) {\r\n                //hide right scrollPane\r\n                this.scrollPaneHidden = true;\r\n            }\r\n        }\r\n\r\n        //update header columns visibility\r\n        this.updateScrollHeaderVisibility();\r\n\r\n    },\r\n\r\n    updateScrollHeaderVisibility: function() {\r\n        if (this.previousHasScrollHeader === this.scrollPaneHidden) {\r\n            return;\r\n        }\r\n        this.previousHasScrollHeader = this.scrollPaneHidden;\r\n\r\n        //update visibility for right header pane\r\n        let headerScrollPane = this.$headerR.get(0);\r\n        if (this.frozenInfo.right) {\r\n            headerScrollPane = this.$headerL.get(0);\r\n        }\r\n        if (this.scrollPaneHidden) {\r\n            headerScrollPane.style.visibility = 'hidden';\r\n        } else {\r\n            headerScrollPane.style.visibility = '';\r\n        }\r\n\r\n        //update hidden columns\r\n        this.updateScrollPaneColumnsHidden(this.scrollPaneHidden);\r\n\r\n        //always changed if hide/show scroll header\r\n        this.cssRulesInvalid = true;\r\n\r\n    },\r\n\r\n    //update for setting display to none in css rule\r\n    updateScrollPaneColumnsHidden: function(hidden) {\r\n        const fcs = this.frozenInfo.columns;\r\n        //use all columns for group columns too\r\n        const columns = this.viewAllColumns;\r\n        for (let i = fcs, l = columns.length - 1; i < l; i++) {\r\n            const column = columns[i];\r\n            column.tg_filtered = hidden;\r\n        }\r\n    },\r\n\r\n    getScrollPaneMinWidth: function() {\r\n        let scrollPaneMinWidth = this.option.scrollPaneMinWidth;\r\n        if (!Util.isNum(scrollPaneMinWidth) || scrollPaneMinWidth < 0) {\r\n            scrollPaneMinWidth = this.scrollbarSizeV;\r\n        }\r\n        return scrollPaneMinWidth;\r\n    },\r\n\r\n    //=======================================================================================\r\n\r\n    updateVScrollState: function() {\r\n        //v scroll state\r\n        this.hasVScroll = true;\r\n\r\n        const scrollbarH = this.getScrollbarHeight();\r\n\r\n        if (this.option.autoHeight) {\r\n            this.hasVScroll = false;\r\n\r\n            //update container height again\r\n            this.containerHeight = this.headerHeight + this.totalRowsHeight + scrollbarH;\r\n            this.$holder.height(this.containerHeight);\r\n\r\n        } else {\r\n\r\n            const tempBodyHeight = this.containerHeight - this.headerHeight - scrollbarH;\r\n            if (tempBodyHeight >= this.totalRowsHeight) {\r\n                this.hasVScroll = false;\r\n            }\r\n\r\n        }\r\n\r\n    },\r\n\r\n    updateBlankColumnWidth: function() {\r\n\r\n        let blankColumnWidth = this.containerWidth - this.columnsWidth;\r\n        //when has v scrollbar\r\n        if (this.hasVScroll && !this.hasHScroll && !this.option.scrollbarFade) {\r\n            blankColumnWidth -= this.scrollbarSizeV;\r\n        }\r\n\r\n        if (this.scrollPaneHidden) {\r\n            blankColumnWidth = 0;\r\n        }\r\n\r\n        //console.log(blankColumnWidth);\r\n\r\n        //fix h scroll state again, and fix columns width\r\n        if (!this.hasHScroll) {\r\n\r\n            if (blankColumnWidth >= 0) {\r\n\r\n                //no h scroll, has blank or blank = 0\r\n                if (this.frozenInfo.columns) {\r\n                    this.columnsWidthR += blankColumnWidth;\r\n                } else {\r\n                    this.columnsWidthL += blankColumnWidth;\r\n                }\r\n                this.blankColumn.tg_width = blankColumnWidth;\r\n\r\n            } else {\r\n                //has h scroll, fix state again\r\n                this.hasHScroll = true;\r\n            }\r\n\r\n        }\r\n\r\n        //console.log(\"columnsWidthL: \" + this.columnsWidthL, \"columnsWidthR: \" + this.columnsWidthR);\r\n\r\n    }\r\n\r\n};\r\n\r\n","import E from '../core/event-types.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //=============================================================================\r\n    //scroll to row/column/cell\r\n\r\n    scrollToRow: function(row) {\r\n        const rowItem = this.getRowItem(row);\r\n        this.scrollToItem(rowItem, null);\r\n        return this;\r\n    },\r\n\r\n    scrollToColumn: function(column) {\r\n        const columnItem = this.getColumnItem(column);\r\n        this.scrollToItem(null, columnItem);\r\n        return this;\r\n    },\r\n\r\n    scrollToCell: function(row, column) {\r\n        const rowItem = this.getRowItem(row);\r\n        const columnItem = this.getColumnItem(column);\r\n        this.scrollToItem(rowItem, columnItem);\r\n        return this;\r\n    },\r\n\r\n    //=============================================================================\r\n    scrollToFirstRow: function() {\r\n        this.setScrollTop(0);\r\n        return this;\r\n    },\r\n\r\n    scrollToLastRow: function() {\r\n        const rows = this.getViewRows();\r\n        const lastRow = rows[rows.length - 1];\r\n        const rowPosition = this.getScrollRowPosition(lastRow);\r\n        if (!Util.isNum(rowPosition)) {\r\n            return;\r\n        }\r\n        this.setScrollTop(rowPosition);\r\n        return this;\r\n    },\r\n\r\n    scrollToFirstColumn: function() {\r\n        this.setScrollLeft(0);\r\n        return this;\r\n    },\r\n\r\n    scrollToLastColumn: function(end) {\r\n        const columns = this.getViewColumns();\r\n        //last column is blank\r\n        let lastColumn = columns[columns.length - 2];\r\n        if (end) {\r\n            lastColumn = columns[columns.length - 1];\r\n        }\r\n        const columnPosition = this.getScrollColumnPosition(lastColumn);\r\n        if (!Util.isNum(columnPosition)) {\r\n            return;\r\n        }\r\n        this.setScrollLeft(columnPosition);\r\n        return this;\r\n    },\r\n\r\n    //=============================================================================\r\n    //scroll row/column/cell into view\r\n\r\n    scrollRowIntoView: function(row) {\r\n        const rowItem = this.getRowItem(row);\r\n        this.scrollItemIntoView(rowItem, null);\r\n        return this;\r\n    },\r\n\r\n    scrollColumnIntoView: function(column) {\r\n        const columnItem = this.getColumnItem(column);\r\n        this.scrollItemIntoView(null, columnItem);\r\n        return this;\r\n    },\r\n\r\n    scrollCellIntoView: function(row, column) {\r\n        const rowItem = this.getRowItem(row);\r\n        const columnItem = this.getColumnItem(column);\r\n        this.scrollItemIntoView(rowItem, columnItem);\r\n        return this;\r\n    },\r\n\r\n    //scroll public API\r\n\r\n    //========================================================================================\r\n    //set scroll by position\r\n\r\n    setScroll: function(x, y) {\r\n        if (x === this.scrollLeft && y === this.scrollTop) {\r\n            return this;\r\n        }\r\n        this.scrollLeft = x;\r\n        this.scrollTop = y;\r\n        this.scrollHandler();\r\n        return this;\r\n    },\r\n\r\n    setScrollLeft: function(x) {\r\n        if (x === this.scrollLeft) {\r\n            return this;\r\n        }\r\n        this.scrollLeft = x;\r\n        this.scrollHandler();\r\n        return this;\r\n    },\r\n\r\n    setScrollTop: function(y) {\r\n        if (y === this.scrollTop) {\r\n            return this;\r\n        }\r\n        this.scrollTop = y;\r\n        this.scrollHandler();\r\n        return this;\r\n    },\r\n\r\n    //========================================================================================\r\n    //get scroll position\r\n\r\n    getScrollRowPosition: function(rowItem) {\r\n        if (!rowItem) {\r\n            return;\r\n        }\r\n\r\n        let row = rowItem.tg_view_index;\r\n        row -= this.frozenInfo.rows;\r\n\r\n        if (row >= 0) {\r\n            return this.getRowTop(rowItem);\r\n        }\r\n    },\r\n\r\n    getScrollColumnPosition: function(columnItem) {\r\n        if (!columnItem) {\r\n            return;\r\n        }\r\n        let x = columnItem.tg_left;\r\n        if (this.frozenInfo.columns) {\r\n            x -= this.bodyWidthL;\r\n        }\r\n        //console.log(columnItem);\r\n        if (x >= 0) {\r\n            return x;\r\n        }\r\n    },\r\n\r\n    //========================================================================================\r\n    //scroll to item\r\n\r\n    scrollToItem: function(rowItem, columnItem) {\r\n        this.scrollToChanged = false;\r\n        this.scrollToRowHandler(rowItem);\r\n        this.scrollToColumnHandler(columnItem);\r\n        if (!this.scrollToChanged) {\r\n            return this;\r\n        }\r\n        this.scrollHandler();\r\n        return this;\r\n    },\r\n\r\n    scrollToRowHandler: function(rowItem) {\r\n        if (!rowItem) {\r\n            return;\r\n        }\r\n        const rowPosition = this.getScrollRowPosition(rowItem);\r\n        if (!Util.isNum(rowPosition)) {\r\n            return;\r\n        }\r\n        if (rowPosition === this.scrollTop) {\r\n            return;\r\n        }\r\n        this.scrollTop = rowPosition;\r\n        this.scrollToChanged = true;\r\n    },\r\n\r\n    scrollToColumnHandler: function(columnItem) {\r\n        if (!columnItem) {\r\n            return;\r\n        }\r\n        const columnPosition = this.getScrollColumnPosition(columnItem);\r\n        if (!Util.isNum(columnPosition)) {\r\n            return;\r\n        }\r\n        if (columnPosition === this.scrollLeft) {\r\n            return;\r\n        }\r\n        this.scrollLeft = columnPosition;\r\n        this.scrollToChanged = true;\r\n    },\r\n\r\n    //========================================================================================\r\n    //scroll item into view\r\n\r\n    scrollItemIntoView: function(rowItem, columnItem) {\r\n        this.scrollIntoViewChanged = false;\r\n        this.scrollRowIntoViewHandler(rowItem);\r\n        this.scrollColumnIntoViewHandler(columnItem);\r\n        if (!this.scrollIntoViewChanged) {\r\n            return this;\r\n        }\r\n        this.scrollHandler();\r\n        return this;\r\n    },\r\n\r\n    scrollRowIntoViewHandler: function(rowItem) {\r\n        if (!rowItem) {\r\n            return;\r\n        }\r\n        const rowPosition = this.getScrollRowPosition(rowItem);\r\n        if (!Util.isNum(rowPosition)) {\r\n            return;\r\n        }\r\n\r\n        //top in view\r\n        if (rowPosition < this.scrollTop) {\r\n            this.scrollTop = rowPosition;\r\n            this.scrollIntoViewChanged = true;\r\n            return;\r\n        }\r\n\r\n        //bottom in view\r\n        const h = this.getRowHeight(rowItem);\r\n        const scrollViewHeight = this.getScrollViewHeight();\r\n\r\n        if (rowPosition + h > this.scrollTop + scrollViewHeight) {\r\n            const top = rowPosition - (scrollViewHeight - h);\r\n            this.scrollTop = top;\r\n            this.scrollIntoViewChanged = true;\r\n        }\r\n\r\n    },\r\n\r\n    scrollColumnIntoViewHandler: function(columnItem) {\r\n        if (!columnItem) {\r\n            return;\r\n        }\r\n        const columnPosition = this.getScrollColumnPosition(columnItem);\r\n        if (!Util.isNum(columnPosition)) {\r\n            return;\r\n        }\r\n\r\n        //left in view\r\n        if (columnPosition < this.scrollLeft) {\r\n            this.scrollLeft = columnPosition;\r\n            this.scrollIntoViewChanged = true;\r\n            return;\r\n        }\r\n\r\n        //right in view\r\n        const columnWidth = columnItem.tg_width;\r\n        const scrollViewWidth = this.getScrollViewWidth();\r\n        if (columnPosition + columnWidth > this.scrollLeft + scrollViewWidth) {\r\n            const left = columnPosition - (scrollViewWidth - columnWidth);\r\n            this.scrollLeft = left;\r\n            this.scrollIntoViewChanged = true;\r\n\r\n        }\r\n\r\n    },\r\n\r\n    //========================================================================================\r\n    //scroll handler by scrollLeft and scrollTop\r\n\r\n    scrollHandler: function() {\r\n        //sets new position with team sync\r\n        this.scrollPane.setPosition(this.scrollLeft, this.scrollTop);\r\n        this.scrollRenderHandler();\r\n    },\r\n\r\n    scrollRenderHandler: function() {\r\n\r\n        if (this.previousScrollLeft === this.scrollLeft && this.previousScrollTop === this.scrollTop) {\r\n            return;\r\n        }\r\n        this.previousScrollLeft = this.scrollLeft;\r\n        this.previousScrollTop = this.scrollTop;\r\n\r\n        this.onNextUpdated(() => {\r\n            //show fade scrollbar when scrolling\r\n            this.updateScrollPaneFade(true);\r\n\r\n            this.trigger(E.onScroll, {\r\n                scrollLeft: this.scrollLeft,\r\n                scrollTop: this.scrollTop\r\n            });\r\n        });\r\n\r\n        //scroll render\r\n        this.render();\r\n\r\n    },\r\n\r\n    //====================================================================================\r\n    //scroll touch\r\n\r\n    scrollTouchStartHandler: function(e, d) {\r\n        //hide column line when starting touch scroll\r\n        this.hideColumnLine();\r\n        //start position\r\n        this.scrollTouchLeft = this.getScrollLeft();\r\n        this.scrollTouchTop = this.getScrollTop();\r\n\r\n        this.scrollMaxTouchLeft = this.getMaxScrollLeft();\r\n        this.scrollMaxTouchTop = this.getMaxScrollTop();\r\n\r\n    },\r\n\r\n    scrollTouchMoveHandler: function(e, d) {\r\n\r\n        //multiple touches not move\r\n        if (d.touchLength > 1) {\r\n            //console.log('multiple touches');\r\n            return;\r\n        }\r\n\r\n        let ox = d.offsetX;\r\n        let oy = d.offsetY;\r\n\r\n        if (this.stabilizeTouchX(d)) {\r\n            //console.log('stabilize x');\r\n            ox = 0;\r\n        }\r\n        if (this.stabilizeTouchY(d)) {\r\n            //console.log('stabilize y');\r\n            oy = 0;\r\n        }\r\n\r\n\r\n        let tsl = this.scrollTouchLeft - ox;\r\n        let tst = this.scrollTouchTop - oy;\r\n\r\n        //clamp range\r\n        tsl = Util.clamp(tsl, 0, this.scrollMaxTouchLeft);\r\n        tst = Util.clamp(tst, 0, this.scrollMaxTouchTop);\r\n\r\n        let handledFrozen = false;\r\n        if (this.scrollPaneHidden) {\r\n            handledFrozen = this.scrollPaneFrozen.setOffsetH(-d.moveX);\r\n            tsl = 0;\r\n        }\r\n\r\n        const cl = this.getScrollLeft();\r\n        const ct = this.getScrollTop();\r\n        //console.log('scroll position', pl, pt, 'new:', tsl, tst);\r\n        //not same means moving, need stop default scroll\r\n        if (tsl !== cl || tst !== ct || handledFrozen) {\r\n\r\n            Util.preventDefault(d.e);\r\n            //console.log('x', tsl, 'y', tst);\r\n            this.setScroll(tsl, tst);\r\n        }\r\n\r\n    },\r\n\r\n    scrollTouchEndHandler: function() {\r\n        this.protectedItem = null;\r\n    },\r\n\r\n    scrollTouchInertiaHandler: function(e, d) {\r\n        const cl = this.getScrollLeft();\r\n        const ct = this.getScrollTop();\r\n        const tsl = cl - d.touchInertiaX;\r\n        const tst = ct - d.touchInertiaY;\r\n        this.setScroll(tsl, tst);\r\n    },\r\n\r\n    //====================================================================================\r\n\r\n    getScrollViewWidth: function() {\r\n        let scrollViewWidth = this.getScrollPaneWidth();\r\n        if (!this.frozenInfo.right) {\r\n            scrollViewWidth -= this.getScrollbarWidth();\r\n        }\r\n        return scrollViewWidth;\r\n    },\r\n\r\n    getScrollViewHeight: function() {\r\n        let scrollViewHeight = this.getScrollPaneHeight();\r\n        if (!this.frozenInfo.bottom) {\r\n            scrollViewHeight -= this.getScrollbarHeight();\r\n        }\r\n        return scrollViewHeight;\r\n    },\r\n\r\n    getScrollPaneWidth: function() {\r\n        return this.scrollPane.width();\r\n    },\r\n\r\n    getScrollPaneHeight: function() {\r\n        return this.scrollPane.height();\r\n    },\r\n\r\n    getScrollbarWidth: function() {\r\n        if (this.hasVScroll && !this.option.scrollbarFade) {\r\n            return this.scrollbarSizeV;\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    getScrollbarHeight: function() {\r\n        if (this.hasHScroll && !this.option.scrollbarFade) {\r\n            return this.scrollbarSizeH;\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    getScrollLeft: function() {\r\n        return this.scrollPane.getScrollLeft();\r\n    },\r\n\r\n    getScrollTop: function() {\r\n        return this.scrollPane.getScrollTop();\r\n    },\r\n\r\n    getMaxScrollLeft: function() {\r\n        return this.scrollPane.getMaxScrollLeft();\r\n    },\r\n\r\n    getMaxScrollTop: function() {\r\n        return this.scrollPane.getMaxScrollTop();\r\n    }\r\n\r\n};\r\n","import Sorter from '../core/sorter.js';\r\nimport Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    //remove sort state\r\n    removeSortColumn: function() {\r\n        this.sortColumn = null;\r\n        //remove column sorted\r\n        if (this.$header) {\r\n            this.$header.find('.tg-column-sorted').removeClass('tg-column-sorted');\r\n        }\r\n        return this;\r\n    },\r\n\r\n    //sort API\r\n    setSortColumn: function(columnItem) {\r\n\r\n        columnItem = this.getColumnItem(columnItem);\r\n        if (!columnItem) {\r\n            return;\r\n        }\r\n\r\n        if (!this.isColumnSortable(columnItem)) {\r\n            return;\r\n        }\r\n\r\n        //same sort column\r\n        if (columnItem === this.sortColumn) {\r\n            //change sortAsc if click same column\r\n            columnItem.sortAsc = !columnItem.sortAsc;\r\n        } else {\r\n            //set default sortAsc\r\n            if (!Util.hasOwn(columnItem, 'sortAsc')) {\r\n                columnItem.sortAsc = this.option.sortAsc;\r\n            }\r\n        }\r\n\r\n        //new sort column\r\n        this.sortColumn = columnItem;\r\n\r\n        const rowsLength = this.getRowsLength();\r\n        if (rowsLength - this.frozenInfo.rows < 2) {\r\n            return;\r\n        }\r\n\r\n        if (!this.headerCreated) {\r\n            return;\r\n        }\r\n\r\n        const sortChanged = this.updateRowsSort();\r\n        if (!sortChanged) {\r\n            return;\r\n        }\r\n\r\n        this.renderHeaderSort();\r\n\r\n        //sort without frozen rows\r\n        this.flushSort();\r\n\r\n        //not need update index (init rows)\r\n\r\n        this.render('rows');\r\n\r\n    },\r\n\r\n    renderHeaderSort: function() {\r\n        const sortColumn = this.sortColumn;\r\n        if (!sortColumn) {\r\n            return this;\r\n        }\r\n\r\n        if (!this.isColumnSortable(sortColumn)) {\r\n            return this;\r\n        }\r\n\r\n        this.$header.find('.tg-column-sorted').removeClass('tg-column-sorted');\r\n\r\n        //add new column sorted\r\n        const column = sortColumn.tg_view_index;\r\n        const $headerItem = this.$header.find(`.tg-header-item[column='${column}']`);\r\n\r\n        const $columnHeader = $headerItem.find('.tg-column-header').addClass('tg-column-sorted');\r\n\r\n        //sort asc\r\n        if (sortColumn.sortAsc) {\r\n            $columnHeader.removeClass('tg-sort-desc').addClass('tg-sort-asc');\r\n        } else {\r\n            $columnHeader.removeClass('tg-sort-asc').addClass('tg-sort-desc');\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    //=============================================================================\r\n\r\n    // just use type, do NOT use formatter, this is only for sorting\r\n    getSortComparer: function(sortColumn) {\r\n\r\n        //function\r\n        const comparer = sortColumn.comparer;\r\n        if (typeof comparer === 'function') {\r\n            return comparer;\r\n        }\r\n\r\n        //string name\r\n        const sortComparers = this.option.sortComparers;\r\n        const comparerName = comparer || sortColumn.type;\r\n        const sortComparer = sortComparers[comparerName];\r\n        if (typeof sortComparer === 'function') {\r\n            return sortComparer;\r\n        }\r\n\r\n        //default to string, can be override may not function\r\n        return sortComparers.string;\r\n    },\r\n\r\n    //just sort data\r\n    updateRowsSort: function() {\r\n\r\n        const sortColumn = this.sortColumn;\r\n        if (!sortColumn) {\r\n            return false;\r\n        }\r\n\r\n        const sortField = sortColumn.id;\r\n        if (!sortField) {\r\n            return false;\r\n        }\r\n\r\n        const o = this.option;\r\n        const sortFactor = sortColumn.sortAsc ? -1 : 1;\r\n        const sortBlankFactor = o.sortBlankValueBottom ? 1 : sortFactor;\r\n        const sortComparer = this.getSortComparer(sortColumn);\r\n\r\n        const sortOption = {\r\n            ignore: function(item) {\r\n                //frozen always top\r\n                if (item.tg_frozen) {\r\n                    return {\r\n                        item: item,\r\n                        top: true\r\n                    };\r\n                }\r\n                if (item.sortFixed) {\r\n                    return {\r\n                        item: item,\r\n                        top: item.sortFixed === 'top'\r\n                    };\r\n                }\r\n            },\r\n\r\n            sortField,\r\n            sortFactor,\r\n            sortBlankFactor,\r\n            sortComparer\r\n        };\r\n\r\n        //sort handler\r\n        let sortChanged = false;\r\n        const sorter = new Sorter(sortOption);\r\n        const sortAll = function(rows) {\r\n            const sorted = sorter.sortList(rows);\r\n            if (sorted) {\r\n                sortChanged = true;\r\n            }\r\n            rows.forEach(function(row, i) {\r\n                if (row.subs) {\r\n                    sortAll(row.subs);\r\n                }\r\n            });\r\n        };\r\n\r\n        sortAll(this.rows);\r\n\r\n        return sortChanged;\r\n\r\n    }\r\n\r\n};\r\n\r\n","import Util from './util.js';\r\nexport default class {\r\n\r\n    constructor(option) {\r\n        this.option = Util.merge({\r\n            ignore: null,\r\n            sortField: '',\r\n            sortFactor: 1,\r\n            sortBlankFactor: 1,\r\n            sortComparer: null\r\n        }, option);\r\n    }\r\n\r\n\r\n    sortList(list) {\r\n\r\n        if (!Util.isList(list) || list.length === 1) {\r\n            return false;\r\n        }\r\n\r\n        this.ignoreExcludeHandler(list);\r\n        const sortChanged = this.comparerHandler(list);\r\n        this.ignoreIncludeHandler(list);\r\n\r\n        return sortChanged;\r\n    }\r\n\r\n    comparerHandler(list) {\r\n\r\n        const o = this.option;\r\n        const sortField = o.sortField;\r\n        const sortFactor = o.sortFactor;\r\n        const sortBlankFactor = o.sortBlankFactor;\r\n        const sortComparer = o.sortComparer;\r\n\r\n        if (typeof sortComparer !== 'function') {\r\n            return false;\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            return sortComparer.call(this, a, b, {\r\n                sortField,\r\n                sortFactor,\r\n                sortBlankFactor\r\n            });\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    ignoreExcludeHandler(list) {\r\n\r\n        const ignoreHandler = this.option.ignore;\r\n\r\n        this.ignoreListTop = [];\r\n        this.ignoreListBottom = [];\r\n\r\n        const indexList = [];\r\n        for (let i = 0, l = list.length; i < l; i++) {\r\n            const item = list[i];\r\n            const ignoreItem = ignoreHandler(item);\r\n            if (ignoreItem) {\r\n                if (ignoreItem.top) {\r\n                    this.ignoreListTop.unshift(ignoreItem);\r\n                } else {\r\n                    this.ignoreListBottom.push(ignoreItem);\r\n                }\r\n                indexList.push(i);\r\n            }\r\n        }\r\n        //remove from old list\r\n        indexList.reverse();\r\n        indexList.forEach(function(index) {\r\n            list.splice(index, 1);\r\n        });\r\n    }\r\n\r\n    ignoreIncludeHandler(list) {\r\n\r\n        this.ignoreListTop.forEach((ignoreItem) => {\r\n            list.unshift(ignoreItem.item);\r\n        });\r\n\r\n        this.ignoreListBottom.forEach((ignoreItem) => {\r\n            list.push(ignoreItem.item);\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\n","import lightblueOptions from './lightblue/lightblue-options.js';\r\nimport darkOptions from './dark/dark-options.js';\r\n\r\nexport default {\r\n    'default': {},\r\n    'lightblue': lightblueOptions,\r\n    'dark': darkOptions\r\n};\r\n","export default {\r\n    rowHeight: 35,\r\n    scrollbarSize: 10,\r\n    scrollbarRound: true\r\n};\r\n","export default {\r\n\r\n};\r\n","\r\nimport themeOptions from '../theme/theme-options.js';\r\n\r\nexport default {\r\n\r\n    getAllThemes: function() {\r\n        return Object.keys(themeOptions);\r\n    },\r\n\r\n    getThemeOptions: function(theme) {\r\n        if (!theme || theme === 'default') {\r\n            return;\r\n        }\r\n        return themeOptions[theme];\r\n    }\r\n\r\n};\r\n","import E from '../core/event-types.js';\r\n\r\nexport default {\r\n\r\n    update: function() {\r\n        this.flushBody();\r\n        this.render('rows');\r\n        return this;\r\n    },\r\n\r\n    updateRow: function(rowIndex, rowData) {\r\n        const rowItem = this.getRowItem(rowIndex);\r\n        if (!rowItem) {\r\n            return this;\r\n        }\r\n        if (rowData && typeof rowData === 'object') {\r\n            const snapshot = this.getItemSnapshot(rowData);\r\n            Object.keys(snapshot).forEach(function(k) {\r\n                rowItem[k] = snapshot[k];\r\n            });\r\n        }\r\n        // may in for loop require async\r\n        this.flushRow(rowItem.tg_view_index);\r\n        this.render('rows');\r\n        return this;\r\n    },\r\n\r\n    updateCell: function(rowIndex, columnIndex, value) {\r\n        const rowItem = this.getRowItem(rowIndex);\r\n        if (!rowItem) {\r\n            return this;\r\n        }\r\n        const columnItem = this.getColumnItem(columnIndex);\r\n        if (!columnItem) {\r\n            return this;\r\n        }\r\n        if (arguments.length > 2) {\r\n            rowItem[columnItem.id] = value;\r\n        }\r\n        // may in for loop require async\r\n        this.flushCell(rowItem.tg_view_index, columnItem.tg_view_index);\r\n        this.render('rows');\r\n        return this;\r\n    },\r\n\r\n    onNextUpdated: function(callback) {\r\n        if (typeof callback !== 'function') {\r\n            return this;\r\n        }\r\n        this.once(E.onUpdated, callback);\r\n        return this;\r\n    }\r\n\r\n};\r\n","import Util from '../core/util.js';\r\n\r\nexport default {\r\n\r\n    getViewport: function() {\r\n\r\n        //update scroll position\r\n        this.scrollLeft = this.getScrollLeft();\r\n        this.scrollTop = this.getScrollTop();\r\n\r\n        const rows = this.getViewportRows();\r\n        const columns = this.getViewportColumns();\r\n\r\n        return {\r\n            rows,\r\n            columns\r\n        };\r\n    },\r\n\r\n    //==========================================================================================\r\n\r\n    getViewportRows: function() {\r\n\r\n        const list = [];\r\n\r\n        const rows = this.viewRows;\r\n        const rowsLength = rows.length;\r\n        if (!rowsLength) {\r\n            return list;\r\n        }\r\n\r\n        // > 0 and < max row length\r\n        let rowCacheLength = this.option.rowCacheLength;\r\n        rowCacheLength = Util.clamp(Util.toNum(rowCacheLength, true), 0, rowsLength);\r\n        //console.log(rowCacheLength);\r\n\r\n        const start = this.frozenInfo.rows;\r\n        if (start) {\r\n            let index = 0;\r\n            while (index < start) {\r\n                list.push(index);\r\n                index += 1;\r\n            }\r\n        }\r\n        const end = rowsLength - 1;\r\n\r\n        //get from and till index\r\n        const topPosition = this.scrollTop;\r\n        let from = this.getRowByPosition(rows, start, end, topPosition);\r\n        from -= rowCacheLength;\r\n        from = Math.max(from, start);\r\n\r\n        const bottomPosition = this.scrollTop + (this.bodyHeight - this.frozenRowsHeight);\r\n        let till = this.getRowByPosition(rows, start, end, bottomPosition);\r\n        till += rowCacheLength;\r\n        till = Math.min(till, end);\r\n\r\n        while (from <= till) {\r\n            list.push(from);\r\n            from += 1;\r\n        }\r\n\r\n        //do NOT remove touching row\r\n        this.protectedItemHandler(list, 'row');\r\n\r\n        //console.log('visible row list:', list);\r\n\r\n        return list;\r\n    },\r\n\r\n\r\n    getRowByPosition: function(rows, start, end, position) {\r\n        while (end - start > 1) {\r\n            const i = Math.floor((start + end) * 0.5);\r\n            const row = rows[i];\r\n            const t = this.getRowTop(row);\r\n            const h = this.getRowHeight(row);\r\n            if (position < t) {\r\n                end = i;\r\n                continue;\r\n            }\r\n            if (position > t + h) {\r\n                start = i;\r\n                continue;\r\n            }\r\n            return i;\r\n        }\r\n        //last two rows, less than end top is start\r\n        const endRow = rows[end];\r\n        const endTop = this.getRowTop(endRow);\r\n        if (position < endTop) {\r\n            return start;\r\n        }\r\n        return end;\r\n    },\r\n\r\n    //==========================================================================================\r\n\r\n    getViewportColumns: function() {\r\n\r\n        const listFrozen = this.getColumnListFromFrozen();\r\n\r\n        //normal case, no frozen list\r\n        let from = this.scrollLeft;\r\n        from = Math.max(from, 0);\r\n        //from frozen left\r\n        if (this.frozenInfo.columns) {\r\n            if (this.frozenInfo.right) {\r\n                from += this.columnsWidthR;\r\n            } else {\r\n                from += this.columnsWidthL;\r\n            }\r\n        }\r\n\r\n        let till = this.scrollLeft + this.bodyWidth;\r\n        till = Math.min(till, this.columnsWidth);\r\n\r\n        //console.log('from', from, 'till', till, 'columnsWidth', this.columnsWidth);\r\n\r\n        const listRange = this.getColumnListFromRange(from, till);\r\n\r\n        //console.log('listRange', listRange);\r\n\r\n        const list = [].concat(listFrozen).concat(listRange);\r\n\r\n        //do NOT remove touching column\r\n        this.protectedItemHandler(list, 'column');\r\n\r\n        //console.log('visible column list', list);\r\n\r\n        return list;\r\n    },\r\n\r\n    getColumnListFromFrozen: function() {\r\n        const columns = this.frozenInfo.columns;\r\n        //no frozen list\r\n        if (!columns) {\r\n            return [];\r\n        }\r\n        //all frozen column should be visible\r\n        const list = [];\r\n        let index = 0;\r\n        while (index < columns) {\r\n            list.push(index);\r\n            index++;\r\n        }\r\n        return list;\r\n    },\r\n\r\n    getColumnListFromRange: function(from, till) {\r\n        if (from >= till) {\r\n            return [];\r\n        }\r\n        const list = [];\r\n        const startIndex = this.frozenInfo.columns;\r\n        const columns = this.viewColumns;\r\n        for (let i = startIndex, l = columns.length; i < l; i++) {\r\n            const columnItem = columns[i];\r\n            if (this.isColumnInRange(columnItem, from, till)) {\r\n                list.push(i);\r\n            }\r\n        }\r\n        //console.log('before add cache', list.join(','));\r\n        this.updateColumnListFromCache(list);\r\n        //console.log(list);\r\n        return list;\r\n    },\r\n\r\n    updateColumnListFromCache: function(list) {\r\n        if (!list.length) {\r\n            return;\r\n        }\r\n\r\n        const columnsLength = this.viewColumns.length;\r\n\r\n        //handler cache\r\n        let columnCacheLength = this.option.columnCacheLength;\r\n        columnCacheLength = Util.clamp(Util.toNum(columnCacheLength, true), 0, columnsLength);\r\n\r\n        const fc = this.frozenInfo.column;\r\n        while (columnCacheLength > 0) {\r\n            //unshift to left\r\n            const cl = list[0] - 1;\r\n            if (cl > fc) {\r\n                list.unshift(cl);\r\n            }\r\n            //push to right\r\n            const cr = list[list.length - 1] + 1;\r\n            if (cr < columnsLength) {\r\n                list.push(cr);\r\n            }\r\n\r\n            columnCacheLength -= 1;\r\n        }\r\n\r\n    },\r\n\r\n    isColumnInRange: function(columnItem, from, till) {\r\n\r\n        //remove invisible column\r\n        if (this.isInvisible(columnItem)) {\r\n            return false;\r\n        }\r\n\r\n        const left = columnItem.tg_left;\r\n        const right = left + columnItem.tg_width;\r\n\r\n        //console.log(`from: ${from}`, `till: ${till}`, `left: ${left}`, `right: ${right}`);\r\n\r\n        //out of range\r\n        if (left > till) {\r\n            return false;\r\n        }\r\n        if (right < from) {\r\n            return false;\r\n        }\r\n\r\n        //in range\r\n        return true;\r\n\r\n    },\r\n\r\n    //==========================================================================================\r\n\r\n    protectedItemHandler: function(list, type) {\r\n        if (!this.protectedItem) {\r\n            return;\r\n        }\r\n        const index = this.protectedItem[type];\r\n        if (!Util.isNum(index)) {\r\n            return;\r\n        }\r\n        if (list.includes(index)) {\r\n            return;\r\n        }\r\n        list.push(index);\r\n        list.sort(function(a, b) {\r\n            return a - b;\r\n        });\r\n    }\r\n\r\n\r\n};\r\n","\r\nimport CONST from '../core/const.js';\r\nimport $ from '../core/query.js';\r\nimport OptionBase from '../core/option-base.js';\r\n\r\nimport Cache from './cache.js';\r\nimport Cells from './cells.js';\r\n\r\nimport ColumnAddDelete from './column-add-delete.js';\r\nimport ColumnDisplay from './column-display.js';\r\nimport ColumnLine from './column-line.js';\r\nimport Columns from './columns.js';\r\n\r\n\r\nimport Common from './common.js';\r\nimport Css from './css.js';\r\n\r\nimport Destroy from './destroy.js';\r\n\r\nimport Events from './events.js';\r\n\r\nimport Export from './export.js';\r\nimport Flush from './flush.js';\r\nimport Formatter from './formatter.js';\r\n\r\nimport HeaderTable from './header-table.js';\r\nimport Header from './header.js';\r\n\r\nimport Create from './create.js';\r\n\r\n\r\nimport InitColumns from './init-columns.js';\r\nimport InitData from './init-data.js';\r\nimport InitHeader from './init-header.js';\r\nimport InitOptions from './init-options.js';\r\nimport InitResize from './init-resize.js';\r\nimport InitRows from './init-rows.js';\r\n\r\nimport Loading from './loading.js';\r\n\r\nimport Navigation from './navigation.js';\r\nimport Node from './node.js';\r\n\r\nimport Render from './render.js';\r\nimport Resize from './resize.js';\r\n\r\nimport RowAddDelete from './row-add-delete.js';\r\nimport RowCollapse from './row-collapse.js';\r\nimport RowDisplay from './row-display.js';\r\nimport RowDrag from './row-drag.js';\r\nimport RowMove from './row-move.js';\r\nimport RowSelect from './row-select.js';\r\nimport RowState from './row-state.js';\r\nimport Rows from './rows.js';\r\n\r\n\r\nimport ScrollPane from './scroll-pane.js';\r\nimport ScrollState from './scroll-state.js';\r\nimport Scroll from './scroll.js';\r\n\r\n\r\nimport Sort from './sort.js';\r\nimport Theme from './theme.js';\r\nimport Update from './update.js';\r\n\r\nimport Viewport from './viewport.js';\r\n\r\nconst Props = {\r\n    $: $,\r\n    VERSION: CONST.VERSION,\r\n    TIMESTAMP: CONST.TIMESTAMP\r\n};\r\n\r\nexport default OptionBase.concat(\r\n\r\n    Props,\r\n\r\n    Cache,\r\n    Cells,\r\n\r\n    ColumnAddDelete,\r\n    ColumnDisplay,\r\n    ColumnLine,\r\n    Columns,\r\n\r\n    Common,\r\n    Css,\r\n\r\n    Destroy,\r\n\r\n    Events,\r\n\r\n    Export,\r\n    Flush,\r\n\r\n    Formatter,\r\n\r\n    HeaderTable,\r\n    Header,\r\n\r\n    Create,\r\n\r\n    InitColumns,\r\n    InitData,\r\n    InitHeader,\r\n    InitOptions,\r\n    InitResize,\r\n    InitRows,\r\n\r\n    Loading,\r\n\r\n    Navigation,\r\n    Node,\r\n\r\n    Render,\r\n    Resize,\r\n\r\n    RowAddDelete,\r\n    RowCollapse,\r\n    RowDisplay,\r\n    RowDrag,\r\n    RowMove,\r\n    RowSelect,\r\n    RowState,\r\n    Rows,\r\n\r\n    ScrollPane,\r\n    ScrollState,\r\n    Scroll,\r\n\r\n    Sort,\r\n    Theme,\r\n    Update,\r\n\r\n    Viewport\r\n);\r\n","\r\nexport default {\r\n\r\n    keyTabHandler: function(e) {\r\n        // if (e.shiftKey) {\r\n        //     return this.navigatePrev(e);\r\n        // }\r\n        // return this.navigateNext(e);\r\n    },\r\n\r\n    keyEnterHandler: function(e) {\r\n\r\n    },\r\n\r\n    keyEscHandler: function(e) {\r\n\r\n    },\r\n\r\n    //============================================================================================\r\n\r\n    keyPageUpHandler: function(e) {\r\n        return this.scrollPane.keyPageUpHandler(e);\r\n    },\r\n\r\n    keyPageDownHandler: function(e) {\r\n        return this.scrollPane.keyPageDownHandler(e);\r\n    },\r\n\r\n    keyEndHandler: function(e) {\r\n        return this.scrollPane.keyEndHandler(e);\r\n    },\r\n\r\n    keyHomeHandler: function(e) {\r\n        return this.scrollPane.keyHomeHandler(e);\r\n    },\r\n\r\n    //============================================================================================\r\n\r\n    keyLeftHandler: function(e) {\r\n        if (this.scrollPaneHidden) {\r\n            return this.scrollPaneFrozen.keyLeftHandler(e);\r\n        }\r\n        return this.scrollPane.keyLeftHandler(e);\r\n    },\r\n\r\n    keyUpHandler: function(e) {\r\n        return this.scrollPane.keyUpHandler(e);\r\n    },\r\n\r\n    keyRightHandler: function(e) {\r\n        if (this.scrollPaneHidden) {\r\n            return this.scrollPaneFrozen.keyRightHandler(e);\r\n        }\r\n        return this.scrollPane.keyRightHandler(e);\r\n    },\r\n\r\n    keyDownHandler: function(e) {\r\n        return this.scrollPane.keyDownHandler(e);\r\n    }\r\n\r\n};\r\n","\r\nexport default {\r\n\r\n    showRow: function(rowInfo) {\r\n        return this.updateRowsInvisible(this.toRowItemList(rowInfo), false);\r\n    },\r\n\r\n    hideRow: function(rowInfo) {\r\n        return this.updateRowsInvisible(this.toRowItemList(rowInfo), true);\r\n    },\r\n\r\n    updateRowsInvisible: function(rowList, invisible) {\r\n        if (!rowList.length) {\r\n            return false;\r\n        }\r\n        const changedList = [];\r\n        rowList.forEach((rowItem) => {\r\n            if (rowItem.invisible === invisible) {\r\n                return;\r\n            }\r\n            rowItem.invisible = invisible;\r\n            rowItem.tg_invisible = invisible;\r\n            changedList.push(rowItem);\r\n        });\r\n\r\n        if (!changedList.length) {\r\n            return false;\r\n        }\r\n\r\n        this.update();\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n};\r\n","export default {\r\n\r\n    //selected: Boolean\r\n\r\n    // for group only\r\n    //collapsed: Boolean\r\n\r\n    //selectable : true\r\n    //exportable: true\r\n\r\n    //sortFixed: [Boolean, String \"top\"]\r\n\r\n    // customize row style\r\n    //classMap: [String, Array, Object]\r\n    //styleMap: [String, Array, Object]\r\n    //[columnId]ClassMap: [String, Array, Object]\r\n    //[columnId]StyleMap: [String, Array, Object]\r\n\r\n    // row type for class name\r\n    //type: String\r\n\r\n    //formatter: [String, Function]\r\n\r\n    //height: Number\r\n\r\n    //subs: Array\r\n\r\n};\r\n","export default {\r\n\r\n    // require for showing header\r\n    name: '',\r\n\r\n    // for getting row value\r\n    //id: String\r\n\r\n    // expect to be a string, for example: \"string\", \"number\", \"date\" etc.\r\n    //type: String\r\n\r\n    // formatter expect to be a function, but also can be a string like type\r\n    // priority is higher than type\r\n    // be used for cell formatting\r\n    //formatter: [String, Function]\r\n    //headerFormatter: [String, Function]\r\n\r\n    // comparer function when sort function(a, b, option)\r\n    //comparer: [String, Function]\r\n\r\n    // left (default) | center | right\r\n    //align: String\r\n\r\n    // customize column style\r\n    //classMap: [String, Array, Object]\r\n    //styleMap: [String, Array, Object]\r\n    //headerClassMap: [String, Array, Object]\r\n    //headerStyleMap: [String, Array, Object]\r\n\r\n    //sortable: true\r\n    //resizable: true\r\n    //exportable: true\r\n\r\n    //private: false\r\n\r\n    // require for column resize\r\n    minWidth: 81,\r\n    maxWidth: 302\r\n\r\n    //width: Number\r\n    //height: Number\r\n\r\n    //subs: Array\r\n};\r\n","import Util from '../core/util.js';\r\nconst emptyMatch = function(value) {\r\n    if (!value && value !== 0) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nconst emptyComparer = function(av, bv, option) {\r\n    const ae = emptyMatch(av);\r\n    const be = emptyMatch(bv);\r\n\r\n    if (ae && be) {\r\n        return 0;\r\n    }\r\n\r\n    if (ae) {\r\n        return 1;\r\n    }\r\n\r\n    if (be) {\r\n        return -1;\r\n    }\r\n\r\n};\r\n\r\n//=======================================================================\r\n\r\nconst isNull = function(value) {\r\n    if (value === null || typeof value === 'undefined') {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nconst blankComparer = function(av, bv, option) {\r\n    const an = isNull(av);\r\n    const bn = isNull(bv);\r\n\r\n    if (an && bn) {\r\n        return 0;\r\n    }\r\n\r\n    if (an) {\r\n        return 1;\r\n    }\r\n\r\n    if (bn) {\r\n        return -1;\r\n    }\r\n\r\n    return emptyComparer(av, bv, option);\r\n\r\n};\r\n\r\n//=======================================================================\r\n\r\nconst stringComparer = function(av, bv, option) {\r\n    const ai = typeof av === 'string';\r\n    const bi = typeof bv === 'string';\r\n    //both are string\r\n    if (ai && bi) {\r\n        // ignore case sort\r\n        const au = av.toUpperCase();\r\n        const bu = bv.toUpperCase();\r\n        if (au !== bu) {\r\n            return au > bu ? -1 : 1;\r\n        }\r\n    }\r\n    return av > bv ? -1 : 1;\r\n};\r\n\r\nconst diffTypeComparer = function(ai, bi, av, bv, option) {\r\n    if (ai) {\r\n        return -1;\r\n    }\r\n    if (bi) {\r\n        return 1;\r\n    }\r\n    return stringComparer(av, bv, option);\r\n};\r\n\r\nconst numberComparer = function(av, bv, option) {\r\n    const ai = typeof av === 'number';\r\n    const bi = typeof bv === 'number';\r\n    //both are number\r\n    if (ai && bi) {\r\n        return av > bv ? -1 : 1;\r\n    }\r\n    return diffTypeComparer(ai, bi, av, bv, option);\r\n};\r\n\r\nconst dateComparer = function(av, bv, option) {\r\n    const ad = new Date(av);\r\n    const bd = new Date(bv);\r\n    const ai = Util.isDate(ad);\r\n    const bi = Util.isDate(bd);\r\n    //both are date\r\n    if (ai && bi) {\r\n        const am = ad.getTime();\r\n        const bm = bd.getTime();\r\n        if (am === bm) {\r\n            return;\r\n        }\r\n        return am > bm ? -1 : 1;\r\n\r\n    }\r\n    return diffTypeComparer(ai, bi, av, bv, option);\r\n};\r\n\r\n//=======================================================================\r\n\r\n// tg_index is require be created every time\r\nconst indexComparer = function(a, b, option) {\r\n    return a.tg_index > b.tg_index ? 1 : -1;\r\n};\r\n\r\n// index comparer if value equal\r\nconst equalComparer = function(a, b, option) {\r\n    return indexComparer(a, b, option);\r\n};\r\n\r\n//=======================================================================\r\n\r\nexport default {\r\n\r\n    string: function(a, b, option) {\r\n        const av = a[option.sortField];\r\n        const bv = b[option.sortField];\r\n\r\n        const cb = blankComparer(av, bv, option);\r\n        if (cb) {\r\n            return option.sortBlankFactor * cb;\r\n        }\r\n\r\n        if (cb !== 0 && av !== bv) {\r\n            const cs = stringComparer(av, bv, option);\r\n            if (typeof cs === 'number') {\r\n                return option.sortFactor * cs;\r\n            }\r\n        }\r\n\r\n        return equalComparer(a, b, option);\r\n    },\r\n\r\n    number: function(a, b, option) {\r\n        const av = a[option.sortField];\r\n        const bv = b[option.sortField];\r\n\r\n        const cb = blankComparer(av, bv, option);\r\n        if (cb) {\r\n            return option.sortBlankFactor * cb;\r\n        }\r\n\r\n        if (cb !== 0 && av !== bv) {\r\n            const cn = numberComparer(av, bv, option);\r\n            if (typeof cn === 'number') {\r\n                return option.sortFactor * cn;\r\n            }\r\n        }\r\n\r\n        return equalComparer(a, b, option);\r\n    },\r\n\r\n    date: function(a, b, option) {\r\n        const av = a[option.sortField];\r\n        const bv = b[option.sortField];\r\n\r\n        const cb = blankComparer(av, bv, option);\r\n        if (cb) {\r\n            return option.sortBlankFactor * cb;\r\n        }\r\n\r\n        if (cb !== 0 && av !== bv) {\r\n            const cd = dateComparer(av, bv, option);\r\n            if (typeof cd === 'number') {\r\n                return option.sortFactor * cd;\r\n            }\r\n        }\r\n\r\n        return equalComparer(a, b, option);\r\n    }\r\n\r\n};\r\n","import $ from './core/query.js';\r\nimport Util from './core/util.js';\r\nimport GridModules from './modules/index.js';\r\nimport defaultOptions from './config/default-options.js';\r\n\r\n//test if be changed\r\n// setTimeout(function() {\r\n//     console.log(defaultOptions());\r\n// }, 2000);\r\n\r\nexport default GridModules.extend({\r\n\r\n    constructor: function(holder) {\r\n        this.create(holder);\r\n    },\r\n\r\n    getDefaultOption: function(option) {\r\n        const d = defaultOptions();\r\n        const t = this.getThemeOptions(option && option.theme);\r\n        if (t) {\r\n            return Util.merge(d, t);\r\n        }\r\n        return d;\r\n    },\r\n\r\n    setOption: function() {\r\n        this.renderType = 'all';\r\n        GridModules.prototype.setOption.apply(this, arguments);\r\n        return this;\r\n    },\r\n\r\n    setData: function(data) {\r\n        this.renderType = 'all';\r\n\r\n        //init data object\r\n        if (!data || typeof data !== 'object') {\r\n            data = {};\r\n        }\r\n\r\n        //init array\r\n        if (!Array.isArray(data.columns)) {\r\n            data.columns = [];\r\n        }\r\n        if (!Array.isArray(data.rows)) {\r\n            data.rows = [];\r\n        }\r\n\r\n        //init rows length\r\n        const rowsLength = data.rowsLength;\r\n        if (Util.isNum(rowsLength)) {\r\n            delete data.rowsLength;\r\n            data.rows.length = rowsLength | 0;\r\n        }\r\n\r\n        this.data = data;\r\n\r\n        return this;\r\n    },\r\n\r\n    setDataSnapshot: function(data) {\r\n        this.setData(this.getDataSnapshot(data));\r\n        return this;\r\n    },\r\n\r\n    getData: function() {\r\n        return this.data;\r\n    },\r\n\r\n    toString: function() {\r\n        return '[object Grid]';\r\n    }\r\n\r\n}, {\r\n    $: $,\r\n    getInstance: Util.getInstance,\r\n    getAllThemes: GridModules.prototype.getAllThemes,\r\n    getAllEvents: GridModules.prototype.getAllEvents\r\n});\r\n","import CONST from '../core/const.js';\r\n\r\nimport defaultRowProps from './default-row-props.js';\r\nimport defaultColumnProps from './default-column-props.js';\r\nimport defaultSortComparers from './default-sort-comparers.js';\r\n\r\nexport default function() {\r\n    return {\r\n\r\n        className: CONST.NS,\r\n\r\n        theme: CONST.ID,\r\n\r\n        headerVisible: true,\r\n\r\n        //==========================================================\r\n        //row\r\n\r\n        rowHeight: 32,\r\n\r\n        //null or function (return true: visible or false: invisible)\r\n        rowFilter: null,\r\n\r\n        //handler for row not found\r\n        rowNotFound: '',\r\n\r\n        //boolean\r\n        rowMoveCrossLevel: true,\r\n\r\n        rowCacheLength: 0,\r\n        rowProps: defaultRowProps,\r\n\r\n        //==========================================================\r\n        //column\r\n\r\n        columnTypes: {\r\n            //type : props\r\n            tree: {\r\n                type: 'tree',\r\n                formatter: 'tree',\r\n                width: 300,\r\n                minWidth: 120,\r\n                maxWidth: 500\r\n            },\r\n            number: {\r\n                type: 'number',\r\n                align: 'right'\r\n            },\r\n            date: {\r\n                type: 'date',\r\n                align: 'right'\r\n            },\r\n            //id : type\r\n            name: 'tree'\r\n        },\r\n\r\n        columnCacheLength: 0,\r\n        columnProps: defaultColumnProps,\r\n\r\n        //==========================================================\r\n        // collapse all only for row\r\n\r\n        //true/false/null\r\n        collapseAllOnInit: null,\r\n        // true/false\r\n        collapseAllVisible: true,\r\n\r\n        //==========================================================\r\n        // select\r\n\r\n        // true: select all, false: unselect all, or do nothing\r\n        selectAllOnInit: null,\r\n\r\n        selectVisible: false,\r\n        selectAllVisible: true,\r\n\r\n        // true: checkbox, false: radio\r\n        selectMultiple: true,\r\n\r\n        selectColumn: {\r\n            private: true,\r\n            id: 'tg-column-select',\r\n            name: '',\r\n            formatter: 'select',\r\n            headerClassMap: 'tg-header-select',\r\n            classMap: 'tg-cell-select',\r\n            //padding 5px * 2\r\n            //icon width 18px\r\n            //border left/right 2px (when zoom out no cut)\r\n            width: 36,\r\n            align: 'center',\r\n            resizable: false,\r\n            sortable: false,\r\n            exportable: false\r\n        },\r\n\r\n        //==========================================================\r\n\r\n        //boolean or function\r\n        rowDragCrossLevel: true,\r\n\r\n        rowDragVisible: false,\r\n\r\n        //rowDragRight: false,\r\n\r\n        rowDragColumn: {\r\n            private: true,\r\n            id: 'tg-column-row-drag',\r\n            name: '',\r\n            formatter: 'rowDrag',\r\n            headerClassMap: 'tg-header-row-drag',\r\n            classMap: 'tg-cell-row-drag',\r\n            align: 'center',\r\n            width: 36,\r\n            resizable: false,\r\n            sortable: false,\r\n            exportable: false\r\n        },\r\n\r\n        //==========================================================\r\n\r\n        rowNumberWidth: 36,\r\n\r\n        rowNumberFilter: null,\r\n        rowNumberVisible: false,\r\n\r\n        rowNumberColumn: {\r\n            private: true,\r\n            id: 'tg-column-row-number',\r\n            name: '',\r\n            formatter: 'rowNumber',\r\n            headerClassMap: 'tg-header-row-number',\r\n            classMap: 'tg-cell-row-number',\r\n            align: 'center',\r\n            maxWidth: 100,\r\n            //resizable: false,\r\n            sortable: false,\r\n            exportable: false\r\n        },\r\n\r\n        //==========================================================\r\n        // blank\r\n        blankColumn: {\r\n            private: true,\r\n            id: 'tg-column-blank',\r\n            name: '',\r\n            formatter: 'blank',\r\n            headerClassMap: 'tg-header-blank',\r\n            classMap: 'tg-cell-blank',\r\n            width: 0,\r\n            minWidth: 0,\r\n            maxWidth: 4000,\r\n            resizable: false,\r\n            sortable: false,\r\n            exportable: false\r\n        },\r\n\r\n        //==========================================================\r\n        // sort\r\n\r\n        // single field, or a list for multiple compare\r\n        sortField: '',\r\n        sortAsc: true,\r\n\r\n        //Configuration for Sort Blank Value Logic\r\n        //true: Rows with blank values should always be at the bottom of the grid\r\n        //false: Rows with blank values sort at the bottom for Descending Sort and at the Top for Ascending Sort\r\n        sortBlankValueBottom: true,\r\n\r\n        sortOnInit: false,\r\n\r\n        //h or v style\r\n        sortIndicator: 'h',\r\n\r\n        //customize own sort comparers, default comparers\r\n        sortComparers: defaultSortComparers,\r\n\r\n        //==========================================================\r\n        //frozen\r\n        frozenRow: -1,\r\n        frozenRowMax: 10,\r\n        frozenRowHoverable: false,\r\n        frozenBottom: false,\r\n\r\n        frozenColumn: -1,\r\n        frozenColumnMax: 10,\r\n        frozenRight: false,\r\n\r\n        //==========================================================\r\n        //scrollbar\r\n\r\n        scrollbarSize: 12,\r\n        scrollbarSizeH: null,\r\n        scrollbarSizeV: null,\r\n\r\n        scrollbarRound: false,\r\n\r\n        scrollbarFade: false,\r\n        scrollbarFadeTimeout: 1000,\r\n\r\n        // auto, touch, classic\r\n        scrollbarType: 'auto',\r\n\r\n        //==========================================================\r\n        //scroll pane\r\n\r\n        //min width and will be auto hide, two scrollbarSize\r\n        scrollPaneMinWidth: 30,\r\n\r\n        //depends scrollbarFade true\r\n        scrollPaneGradient: 30,\r\n\r\n        //==========================================================\r\n        //other\r\n\r\n        autoHeight: false,\r\n\r\n        //user can select text in grid\r\n        textSelectable: false,\r\n\r\n        //==========================================================\r\n        //auto resize when window resize\r\n        bindWindowResize: false,\r\n\r\n        //auto resize when container resize with ResizeObserver\r\n        bindContainerResize: false\r\n\r\n    };\r\n}\r\n","import Grid from './grid.js';\r\n\r\nimport $ from './core/query.js';\r\nimport CONST from './core/const.js';\r\n\r\nimport EventBase from './core/event-base.js';\r\nimport Extend from './core/extend.js';\r\nimport Icon from './core/icon.js';\r\nimport Motion from './core/motion.js';\r\nimport OptionBase from './core/option-base.js';\r\nimport ScrollPane from './ui/scroll-pane.js';\r\nimport Util from './core/util.js';\r\n\r\nconst VERSION = CONST.VERSION;\r\nconst TIMESTAMP = CONST.TIMESTAMP;\r\n\r\nexport {\r\n\r\n    VERSION,\r\n    TIMESTAMP,\r\n\r\n    Grid,\r\n\r\n    $,\r\n    CONST,\r\n    EventBase,\r\n    Extend,\r\n    Icon,\r\n    Motion,\r\n    OptionBase,\r\n    ScrollPane,\r\n    Util\r\n\r\n};\r\n\r\nexport default {\r\n\r\n    VERSION,\r\n    TIMESTAMP,\r\n\r\n    Grid,\r\n\r\n    $,\r\n    CONST,\r\n    EventBase,\r\n    Extend,\r\n    Icon,\r\n    Motion,\r\n    OptionBase,\r\n    ScrollPane,\r\n    Util\r\n\r\n};\r\n\r\n"],"names":["root","factory","exports","module","define","amd","self","___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","push","id","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","tag","includes","constructor","Array","mergeList","args","deep","base","forEach","isObject","len","v","merge","mergeArray","keys","mergeObject","from","arguments","Microtask","start","callback","started","create","window","queueMicrotask","Promise","Error","resolve","then","execute","cancel","gridInstanceMap","WeakMap","Util","hasOwn","uid","prefix","dict","dictLen","str","Math","random","isNum","num","isNaN","Number","MAX_VALUE","MIN_VALUE","NEGATIVE_INFINITY","POSITIVE_INFINITY","toNum","toInt","parseFloat","convertNum","test","clamp","min","max","per","replace","match","isArray","data","toList","isList","inList","l","isDate","date","Date","getTime","isPromise","Boolean","getValue","path","defaultValue","current","split","lastKey","pop","shift","forEachTree","tree","forEachAll","ls","parent","subs","removePreProps","target","pre","filter","it","startsWith","hasShiftKey","e","shiftKey","isMobile","contains","container","parentNode","isNarrowCharacter","character","cp","codePointAt","getCharLen","text","c","String","pascalToKebabCase","trim","m","toLowerCase","classMap","Set","styleMap","indexOf","endsWith","s","getInstance","document","getElementById","setInstance","instance","set","bindEvents","events","unbindEvents","type","addEventListener","handler","options","removeEventListener","preventDefault","cancelable","debounce","timeout","delay","clearTimeout","setTimeout","apply","throttle","last","now","microtask","mt","cancelAsync","fun","cssNumber","isElement","nodeType","camelCase","string","all","letter","toUpperCase","getStyle","elem","view","ownerDocument","defaultView","opener","getComputedStyle","elementDisplay","getElementDimension","node","dimension","isDocument","body","Query","selector","createFromString","parseHTML","nodeList","querySelectorAll","div","createElement","innerHTML","firstChild","nextSibling","each","add","empty","remove","removeChild","find","results","prepend","child","childNode","insertBefore","append","appendChild","appendTo","html","width","css","height","style","attr","getAttribute","setAttribute","removeAttr","hasAttribute","removeAttribute","removeClass","className","arr","classList","addClass","hasClass","has","show","display","nodeName","element","getDefaultDisplay","hide","click","offset","rect","left","top","br","getBoundingClientRect","scrollX","scrollY","clone","q","cloneNode","copy","children","is","res","name","ID","NS","VERSION","TIMESTAMP","UP","DOWN","LEFT","RIGHT","TREE_INDENT","mergeProps","isConcat","console","log","Extend","extend","protoProps","staticProps","Super","Sub","parentProps","Event","assign","timeStamp","defaultPrevented","isPropagationStopped","stopPropagation","isImmediatePropagationStopped","stopImmediatePropagation","EventUtil","getEventItem","context","option","namespace","once","getEventListByString","types","eventItem","getEventListByObject","getEventList","addEvent","eventListener","event","maxListeners","msg","warn","addEvents","eventListeners","eventList","removeEventByNamespace","newEvents","removeEventByHandler","removeEventByType","removeEvent","removeEvents","removeAllEvents","sendEventList","onceCalled","sendEvent","currentTarget","setMaxListeners","getMaxListeners","getEventListeners","delEventListeners","bind","unbind","trigger","EventBase","getDefaultOption","getOption","setOption","defaultOption","firstArg","createCache","headerCache","Map","bodyCache","dataCache","setHeaderCache","column","headerNode","getHeaderCache","clearHeaderCache","clear","setRowCache","row","rowNodes","cellNodes","getRowCache","deleteRowCache","getRowNodesByIndex","removeNode","delete","deleteCellCache","getCellNodeByIndex","forEachBodyCache","updateRowCacheTopOffset","fr","frozenInfo","rowItem","getViewRowItem","rowTop","getViewRowTop","setNodeDataCache","getNodeDataCache","removeCache","Types","E","renderCells","rows","columns","drawRowCells","getCellValue","columnItem","renderCell","cellNode","nullFormatter","formatter","tg_formatter","renderNodeContent","getPreRenderColumnList","createCellNode","getCellClass","tg_view_index","align","tg_list_index","tg_list_last","rowCache","getViewColumnItem","cssText","frozen","tg_frozen","rowNode","getCellRowNode","appendNode","rowL","rowR","right","addColumn","columnInfo","position","scrollTo","columnList","getToBeAddedItemList","parentItem","getColumnItem","getToBeAddedParentSubs","positionIndex","getToBeAddedPositionIndex","splice","onNextUpdated","renderSettings","scrollColumn","render","deleteColumn","toColumnItemList","private","removeColumnsHandler","deletedColumnsList","sort","b","tg_index","parentSubs","sortColumn","removeSortColumn","tg_parent","tg_sub_index","index","findIndex","setColumnWidth","columnIndex","updateColumnWidth","resize","round","tg_width","minWidth","maxWidth","updateViewColumnWidth","showColumn","updateColumnsInvisible","hideColumn","invisible","changedList","tg_invisible","showColumnLine","$columnLineContainer","renderColumnLine","hideColumnLine","previousColumnLineActive","setColumnLineActive","active","$columnLineItem","getColumnLineLeft","tg_left","scrollLeft","paneWidthL","columnsWidthR","getHeaderItemNode","offsetTop","$columnLineItemL","$columnLineItemR","columnWidthDragStartHandler","$headerFrame","getColumnHeaderNode","clientWidth","columnWidthDragMoveHandler","newWidth","offsetX","columnWidthDragEndHandler","changed","columnWidthTouchStartHandler","columnWidthTouchMoveHandler","columnWidthTouchEndHandler","columnsInfo","indexCache","getColumnItemById","getColumnItemBy","getColumnsLength","total","viewColumns","viewAllColumns","isColumnSortable","tg_group","isSortable","isColumnResizable","resizable","updateColumnHeaderSize","updateTotalColumnsWidth","updateHeaderLayerHeight","cssRulesInvalid","resizeBodyHandler","blankColumn","columnsWidthL","fcs","columnsWidthTemp","columnsWidth","updateColumnHeaderWidth","updateColumnHeaderHeight","updateColumnGroupWidth","w","isInvisible","force","tg_height","tg_element_height","eh","ch","getColumnHeaderHeight","clientHeight","group","getColumnGroupWidth","initTreeInfo","treeList","frozenIndex","isTree","level","initItem","invisibleHandler","frozenHandler","tg_subs_length","subsHandler","tg_level","parentAndLevelHandler","initTree","maxLevel","initViewList","tg_view_last","forEachRow","forEachColumn","forEachSelectableRow","isRowSelectable","toRowItemList","rowInfo","rowList","getRowItem","isRowLeaf","selectable","isEmptyGroup","tg_filtered","sortable","isCollapsedChanged","collapsed","isSelectedChanged","selected","CssRules","updateCssRules","initCssRules","updateColumnsCssRules","updateHeadersCssRules","updateStyleElement","cssList","cssDisplayCache","h","getRowHeight","rule","createCssRule","resetCssDisplay","fc","groups","getColumnCssWidth","updateCssRuleItem","updateParentCssRules","bottom","headerLayerHeight","getLayerCombinations","maxIndex","seeds","combine","end","substring","CONST","styleElement","createStyleElement","checkNewCssName","initStyleElement","cssRules","getStyleSheetCssRules","updateRuleProperties","shadowRoot","head","previousCssList","rules","sheet","selectorText","removeCssRules","reset","firstUpdated","headerCreated","viewGroupColumns","rowsInfo","viewRows","headerRowItem","protectedItem","selectColumn","rowDragColumn","rowNumberColumn","frozenRowsHeight","totalRowsHeight","scrollRowsHeight","bodyWidthL","bodyWidthR","bodyHeightT","bodyHeightB","paneWidthR","paneHeightT","paneHeightB","scrollTop","scrollTopOffset","destroy","destroyed","unbindWindowResize","unbindContainerResize","removeScrollPane","$container","holder","$holder","formatters","DRAG_START","DRAG_MOVE","DRAG_END","createOption","startX","startY","previousX","previousY","currentX","currentY","moveX","moveY","offsetY","startHandler","windowEvents","mousemove","iframeHandler","mouseMoveHandler","mouseup","mouseUpHandler","previousIframe","pageX","pageY","hasMoved","Linear","None","MOTION_START","MOTION_MOVE","MOTION_END","MOTION_STOP","OptionBase","stopped","constructorOption","easing","duration","till","stop","cancelAnimationFrame","initCalculation","calculateHandler","time","requestAnimationFrame","moveHandler","requestId","getEasing","Easing","t","calculateKeys","calculateType","calculateNumber","calculateObject","calculateNone","p","fv","tv","TOUCH_START","TOUCH_MOVE","TOUCH_END","TOUCH_INERTIA","touchLength","direction","inertia","inertiaTime","touchEvents","touchmove","touchMoveHandler","passive","touchend","touchEndHandler","touchcancel","touchCancelHandler","motionStop","trackingPoints","touches","touchItem","clientX","clientY","addTrackingPoint","getDirection","changedTouches","motionStart","getMotionInfo","points","filterTrackingPoints","fp","lp","offsetTime","x","y","ax","abs","ay","offsetDistance","motionInfo","expectDuration","motion","Motion","touchInertiaX","touchInertiaY","ox","oy","minV","maxV","reverse","getAllEvents","containerEvents","mousedown","containerMouseDownHandler","containerMouseMoveHandler","mouseover","containerMouseOverOutHandler","mouseout","mouseenter","containerMouseEnterLeaveHandler","mouseleave","touchstart","containerTouchStartHandler","wheel","containerWheelHandler","containerClickHandler","dblclick","containerDblClickHandler","contextmenu","containerContextMenuHandler","selectstart","containerSelectStartHandler","keydown","containerKeyDownHandler","columnWidthDrag","Drag","columnWidthTouch","Touch","rowDrag","rowDragStartHandler","rowDragMoveHandler","rowDragEndHandler","rowTouch","scrollTouch","scrollTouchStartHandler","scrollTouchMoveHandler","scrollTouchEndHandler","scrollTouchInertiaHandler","isDefaultPrevented","getEventClosestNode","getEventClosestData","getEventData","getWheelDelta","lineHeight","pageHeight","deltaX","deltaY","wheelDeltaX","wheelDeltaY","wheelDelta","deltaMode","stabilizeTouchX","hasVScroll","hasHScroll","scrollTouchTop","scrollMaxTouchTop","stabilizeTouchY","scrollTouchLeft","scrollMaxTouchLeft","columnResizingMouseDownHandler","columnResizingTouchStartHandler","columnResizingMouseEnterLeaveHandler","enter","rowDragMouseDownHandler","rowDragTouchStartHandler","scrollPaneTouchStartHandler","sortHandler","$columnName","$columnSort","setSortColumn","selectIconAllClickHandler","$electIconAll","$","selectAll","cellOverOutHandler","over","cellEnterLeaveHandler","hover","rowEnterLeaveHandler","renderRowHover","rowDragVisible","scrollbarFadeInOutHandler","bodyHeight","wd","delta","handledFrozen","scrollPaneHidden","scrollPaneFrozen","setOffsetH","scrollPane","mouseWheelHandler","toggleAllRows","toggleRow","setRowSelected","textSelectable","keyCode","keyTabHandler","keyEnterHandler","keyEscHandler","keyPageUpHandler","keyPageDownHandler","keyEndHandler","keyHomeHandler","keyLeftHandler","keyUpHandler","keyRightHandler","keyDownHandler","exportData","keysSettings","getData","getTreeSnapshot","isItemExportable","exportable","snapshotAll","newLs","newItem","getItemSnapshot","newList","flushRow","flushRowFrom","fromIndex","flushBody","flushSort","flushColumn","flushColumnFrom","flushCell","flushWithViewport","viewport","icons","getIcon","header","null","blank","number","icon","select","getSelectFormatterContent","getRowDragFormatterContent","rowNumber","tg_row_number","getTreeFormatterContent","setFormatter","renderType","defaultFormatters","getFormatter","getDefaultFormatter","selectMultiple","Icon","getTreeIndentWidth","isGroup","rowLevel","indentWidth","isCollapsed","iconElem","renderHeaderTables","hasTreeColumn","hasSortColumn","columnsL","columnsR","columnsTemp","renderHeaderTable","$headerL","$headerR","headerTable","sortIndicator","renderHeaderItem","getHeaderItemClass","headerStyleMap","createColumnHeader","columnResizing","createColumnResizing","getHeaderClass","getHeaderStyle","createColumnName","columnSort","createColumnSort","tg_headerFormatter","createHeaderTreeName","isSelectAllVisible","createHeaderSelectName","collapseAllVisible","treeIcon","treeIconEmpty","headerName","createSortIndicatorH","createSortIndicatorV","tg_layer","tg_combination","headerClassMap","renderHeader","renderHeaderSort","initHeaderLayerHeight","updateScrollPaneHiddenState","combinationList","JSON","stringify","previousHeaderLayerHeight","createView","createHolder","createGlobalStyle","createContainer","error","rootNode","getRootNode","host","querySelector","$style","globalStyle","$paneHL","$paneHR","$header","$bodyFrame","$paneTL","$paneTR","$paneBL","$paneBR","$bodyTL","$bodyTR","$bodyBL","$bodyBR","$body","initColumnsHandler","privateColumns","getPrivateColumns","digList","list_item","list_index","initColumnItemHandler","initHeaderHandler","initSortColumn","appendPrivateColumns","selectVisible","rowNumberVisible","rowNumberWidth","setColumns","inputColumns","rerender","getColumns","getViewColumns","initColumnProps","initColumnFormatter","initColumnWidth","columnTypes","idType","defaultProps","columnProps","typeProps","initColumnFormatterByName","formatterName","initColumnWidthByName","getComputedColumnWidth","sortField","sortAsc","initDataHandler","initOptionHandler","initFormatterHandler","initRowsHandler","initSortOnInitHandler","initSelectAllOnInitHandler","initCollapseAllOnInitHandler","initScrollPane","updateViewRowsAndSize","createViewRows","renderCollapseAllState","renderSelectAllState","resizeHandler","sortOnInit","updateRowsSort","globalSelectedIndex","selectedItem","selectAllOnInit","updateAllRowsSelected","collapseAllOnInit","updateAllRowsCollapsed","rootList","getDataSnapshot","cleanTreeList","convertNumberType","generateTreeList","idList","initHeaderRowItem","initGroupColumnsWidth","initGroupColumnsLayer","groupColumn","groupLayer","groupParent","parentLayer","initColumnRowspanHandler","minLayer","rowspan","initColumnCombinationHandler","maxLayer","combination","initOptionFromData","initOptionFrozen","initOptionScrollbar","initOptionContainer","initBindWindowResize","initBindContainerResize","dataOption","getThemeOptions","theme","frozenBottom","frozenRight","frozenColumn","frozenColumnMax","frozenRow","frozenRowMax","scrollbarType","scrollbarFade","scrollbarSize","scrollbarRound","size","scrollbarSizeH","scrollbarSizeV","bindWindowResize","windowResizeEvents","bindContainerResize","ResizeObserver","resizeObserver","entries","offsetWidth","offsetHeight","getClientRects","observe","disconnect","getRows","getViewRows","initRowFilterHandler","rowNumberFilter","getRowNumberFilter","rowNumberHandler","gridRowItemHandler","rowCollapsed","lastItem","tg_top","initRowHeight","tg_group_line","getComputedRowHeight","dh","rowHeight","ceil","setRowHeight","heightInfo","heightList","defaultHeight","rowIndex","rowFilter","filtered","setRowSubs","setRows","getRowParentSubs","setDefaultLoading","defaultLoading","loadingStyle","color","fast","getDefaultLoading","getLoadingHolder","setLoading","$elem","showLoading","hideLoading","Node","emptyNode","getRowNodes","getCellNode","headerItemNode","asyncRender","renderSync","renderStartedTimestamp","getRenderSettings","renderBody","settings","scrollRow","renderPositionHandler","scrollIntoViewChanged","scrollRowIntoViewHandler","scrollColumnIntoViewHandler","setPosition","getScrollTopOffset","getViewport","previousScrollTopOffset","renderRows","renderUpdatedTimestamp","renderDuration","layoutEventHandler","resizeEventHandler","asyncResize","resizeSync","resizeHolderHandler","isHolderInvisible","hw","hh","containerWidth","containerHeight","headerWidth","bodyWidth","resizeHeaderHandler","previousLayout","layout","headerHeight","values","previous","previousSize","autoHeight","headerVisible","updateHeaderTableHeight","totalLayerHeight","TL","TR","updateScrollState","updatePaneWidth","updatePaneHeight","updateCanvasWidth","updateCanvasHeight","updateScrollPane","scrollbarW","getScrollbarWidth","scrollbarH","getScrollbarHeight","bodyWidthChanged","scrollStateChanged","updateHeaderCanvasWidth","updateBodyCanvasWidth","updateBodyCanvasHeight","maxLimitSize","addRow","deleteRow","deletedRowsList","sortedRows","removeRowsHandler","minIndex","getRemovedMinIndex","asyncRenderCollapseAllState","renderCollapseAllStateSync","$treeHeader","renderCollapseAllIcon","checkCollapseAllState","allRowsCollapsed","notAll","expandAllRows","renderAllRowsCollapsed","collapseAllRows","toBeCollapsedList","expandRow","renderCollapseIcon","collapseRow","expandRowLevel","collapsedList","expandedList","$node","renderTreeIcon","dragNodes","dragCloneNodes","getRowDragCloneNodes","dropPlaceholder","getRowDropPlaceholder","dragStartTop","getRowTop","dragRowHeight","dragStartScrollTop","dragMaxScrollTop","getMaxScrollTop","setRowState","rowDropListHandler","updateDragCloneRowPosition","updateDragPlaceholderPosition","rowDragAutoScrollHandler","autoScrollStop","rowDropHandler","scrollOffset","currentTop","cloneRowTop","dragCurrentPosition","nodeCopy","rowDropItemHandler","dropItem","dropPosition","dropBottom","placeholderTop","currentPos","scrollHeight","scrollBottom","moveAreaHeight","posUp","offsetUp","getAutoScrollOffset","autoScrollStart","posDown","offsetDown","pos","floor","autoScrollMotion","newTop","setScrollTop","getRowDropList","drops","dropList","crossLevel","rowDragCrossLevel","distance","currentDis","rowDragDropPositionHandler","dragFrom","dragIndex","dropInto","dropIndex","isDropIntoGroupFirstChild","updateDragDropPosition","droppedInfo","getMoveFocusRow","moveList","focusRow","getMoveLengthInList","getMoveInfo","rowMoveCrossLevel","startIndex","endIndex","parentUpOffset","parentDownOffset","moveRowsHandler","info","scrollRowIntoView","update","moveRows","getRowsLength","moveRowsUp","moveRowsDown","moveRowsToTop","moveRowsToBottom","moveSelectedRowsUp","getSelectedRows","moveSelectedRowsDown","moveSelectedRowsToTop","moveSelectedRowsToBottom","getSelectedRow","selectedRow","selectedRows","av","tg_selected_index","bv","getAllSelectedChangedList","updateRowsSelectedState","setRowMultipleSelected","setRowSingleSelected","previousRow","setRowListUnselected","setRowBetweenListSelected","unselectedChangedList","getSelectedChangedList","previousSelectedRow","betweenList","getBetweenSelectedChangedList","previousItem","currentItem","previousIndex","currentIndex","indexList","j","lastSelectedRow","renderRowSelectedState","renderRowState","asyncRenderSelectAllState","renderSelectAllStateSync","selectAllState","getSelectAllState","previousSelectAllState","$selectIconAll","selectedLength","selectAllVisible","setRowHover","previousHover","frozenRowHoverable","state","tg_state_names","hasState","getRowItemById","getRowItemBy","getPreRenderRowInfo","rowNotFound","benchmark","benchmarks","rowNotFoundHandler","showPaneMessage","hidePaneMessage","message","paneMessageVisible","renderRowNodes","createRowNode","appendRowNode","vPos","getRowVPos","getRowClass","rowNodeL","$bodyL","getRowCanvas","rowNodeR","$bodyR","isGroupLine","isNoneLine","isBottom","isTopLine","odd","rowState","getRowsHeight","getFrozenRowsHeight","hPos","CHANGE","viewSize","bodySize","trackSize","scale","thumbPosition","thumbScale","mode","motionDuration","$track","$thumb","thumbDrag","thumbDragStart","thumbDragMove","thumbDragEnd","scrollEvents","thumbMouseDownHandler","trackEvents","ee","trackMouseupHandler","trackMousedownHandler","getBlank","getSize","getViewSize","getBodySize","getTrackMouseDirection","trackMousePosition","getTrackMousePos","page","getMaxThumbPosition","thumbSize","setThumbPosition","updateThumbPosition","maxPosition","getMaxPosition","maxThumbPosition","motionStarted","trackScrollHandler","triggerEvent","setOffset","motionUpdateHandler","thumbPositionStart","offsetName","newPosition","getPosition","updatePosition","getScale","setScale","scaleChangeHandler","thumbData","updateTrackSize","trackData","updateThumbSize","updateOption","parseSize","updateSize","previousFadeIn","fade","fadeIn","Scrollbar","axis","visible","scrollbarV","scrollSizeOnKeyPress","gradient","gradientInfo","$scrollView","$scrollBody","ScrollbarH","scrollHChangeHandler","ScrollbarV","scrollVChangeHandler","scrollPaneW","scrollPaneH","scrollBodyW","scrollBodyH","updateScrollbar","setGroupH","groupH","setGroupV","groupV","updateGroupH","positionH","updateScrollHFromGroup","updateGroupV","positionV","updateScrollVFromGroup","updateGroupList","updateScrollLeft","updateScrollTop","updateScrollView","updateScrollTrack","scrollViewW","scrollTrackW","scrollViewH","scrollTrackH","hasScrollH","hasScrollV","blankH","blankV","scrollSizeH","scrollSizeV","doneH","doneV","hasScrollbar","getScrollLeft","updateGradient","getScrollTop","asyncUpdateGradient","updateGradientSync","maxLeft","getMaxScrollLeft","maxTop","setOffsetV","dx","initFrozenStyle","createScrollPane","HL","cls","HR","BL","BR","selectorFrozenH","selectorFrozenV","selectorFrozenLineV","selectorFrozen","selectorAll","selectorNew","scrollPaneMap","ScrollPane","initActiveScrollPane","initPaneVisibility","vp","getScrollPaneVP","hp","getScrollPaneHP","scrollPaneChangeHandler","L","R","keyFrozen","scrollRenderHandler","updateScrollPaneFade","scrollbarFadeTimeout","updateScrollPaneFadeSync","timeout_fade","previousScrollbarFadeIn","sp","pane","sbo","getScrollbarOption","getScrollPaneOption","HLV","HLH","HRV","HRH","TLV","TLH","TRV","TRH","BLV","BLH","BRV","BRH","spo","scrollPaneGradient","scrollbarOptionHandler","scrollbarFadeHandler","sizeH","sizeV","scrollbarHeaderHandler","scrollbarC1R1Handler","scrollbarC1R0Handler","scrollbarC0R1Handler","scrollbarC0R0Handler","scrollbarC0R1B1Handler","scrollbarC0R1B0Handler","scrollbarC1R0R1Handler","scrollbarC1R0R0Handler","scrollbarC1R1R1B1Handler","scrollbarC1R1R1B0Handler","scrollbarC1R1R0B1Handler","scrollbarC1R1R0B0Handler","updateGlobalScrollInfo","updateHScrollState","updateVScrollState","updateBlankColumnWidth","previousHasHScroll","previousHasVScroll","totalRowsLength","updateHScrollByScrollPaneHidden","getScrollPaneCurrentWidth","getScrollPaneMinWidth","updateScrollHeaderVisibility","previousHasScrollHeader","headerScrollPane","visibility","updateScrollPaneColumnsHidden","hidden","scrollPaneMinWidth","blankColumnWidth","scrollToRow","scrollToItem","scrollToColumn","scrollToCell","scrollToFirstRow","scrollToLastRow","lastRow","rowPosition","getScrollRowPosition","scrollToFirstColumn","setScrollLeft","scrollToLastColumn","lastColumn","columnPosition","getScrollColumnPosition","scrollItemIntoView","scrollColumnIntoView","scrollCellIntoView","setScroll","scrollHandler","scrollToChanged","scrollToRowHandler","scrollToColumnHandler","scrollViewHeight","getScrollViewHeight","columnWidth","scrollViewWidth","getScrollViewWidth","previousScrollLeft","previousScrollTop","tsl","tst","cl","ct","getScrollPaneWidth","getScrollPaneHeight","$columnHeader","getSortComparer","comparer","sortComparers","sortComparer","sortFactor","sortOption","ignore","sortFixed","sortBlankFactor","sortBlankValueBottom","sortChanged","sorter","sortList","ignoreExcludeHandler","comparerHandler","ignoreIncludeHandler","ignoreHandler","ignoreListTop","ignoreListBottom","ignoreItem","unshift","sortAll","getAllThemes","themeOptions","updateRow","rowData","snapshot","updateCell","getViewportRows","getViewportColumns","rowsLength","rowCacheLength","topPosition","getRowByPosition","bottomPosition","protectedItemHandler","endRow","listFrozen","getColumnListFromFrozen","listRange","getColumnListFromRange","isColumnInRange","updateColumnListFromCache","columnsLength","columnCacheLength","cr","Props","Cache","Cells","ColumnAddDelete","ColumnDisplay","ColumnLine","Columns","Common","Css","Destroy","Events","Export","Flush","Formatter","HeaderTable","Header","Create","InitColumns","InitData","InitHeader","InitOptions","InitResize","InitRows","Loading","Render","Resize","RowAddDelete","RowCollapse","showRow","updateRowsInvisible","hideRow","RowDrag","RowMove","RowSelect","RowState","Rows","ScrollState","Scroll","Sort","Theme","Update","Viewport","emptyMatch","isNull","blankComparer","an","bn","ae","be","emptyComparer","stringComparer","au","bu","diffTypeComparer","ai","bi","equalComparer","indexComparer","cb","cs","cn","numberComparer","cd","ad","bd","am","bm","dateComparer","GridModules","rowProps","defaultRowProps","defaultColumnProps","defaultSortComparers","setData","setDataSnapshot","Grid"],"sourceRoot":""}